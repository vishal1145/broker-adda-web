{"version":3,"sources":["turbopack:///[project]/src/app/properties-management/new/page.jsx"],"sourcesContent":["\"use client\";\r\nimport React, { useState, useRef, useEffect } from \"react\";\r\nimport ProtectedRoute from \"../../components/ProtectedRoute\";\r\nimport Link from \"next/link\";\r\nimport { useRouter } from \"next/navigation\";\r\n\r\nconst NewPropertyPage = () => {\r\n  const router = useRouter();\r\n  const [form, setForm] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n    propertyDescription: \"\",\r\n    region: \"\",\r\n    address: \"\",\r\n    city: \"Agra\",\r\n    price: \"\",\r\n    priceUnit: \"INR\",\r\n    propertySize: \"\",\r\n    propertyType: \"Residential\",\r\n    subType: \"Apartment\",\r\n  });\r\n  const [amenityInput, setAmenityInput] = useState(\"\");\r\n  const [amenities, setAmenities] = useState([]);\r\n  const [nearbyAmenityInput, setNearbyAmenityInput] = useState(\"\");\r\n  const [nearbyAmenities, setNearbyAmenities] = useState([]);\r\n  const [featureInput, setFeatureInput] = useState(\"\");\r\n  const [features, setFeatures] = useState([]);\r\n  const [locationBenefitInput, setLocationBenefitInput] = useState(\"\");\r\n  const [locationBenefits, setLocationBenefits] = useState([]);\r\n  const [imageInput, setImageInput] = useState(\"\");\r\n  const [images, setImages] = useState([]);\r\n  const [videoInput, setVideoInput] = useState(\"\");\r\n  const [videos, setVideos] = useState([]);\r\n  const [imageFiles, setImageFiles] = useState([]);\r\n  const fileInputRef = useRef(null);\r\n  const [videoFiles, setVideoFiles] = useState([]);\r\n  const videoFileInputRef = useRef(null);\r\n  const [coordinates, setCoordinates] = useState({ lat: \"\", lng: \"\" });\r\n  const [bedrooms, setBedrooms] = useState(\"\");\r\n  const [bathrooms, setBathrooms] = useState(\"\");\r\n  const [furnishing, setFurnishing] = useState(\"Furnished\");\r\n  const [status, setStatus] = useState(\"Pending Approval\");\r\n  const [isFeatured, setIsFeatured] = useState(false);\r\n  const [notes, setNotes] = useState(\"\");\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  // Wizard steps (match profile page flow style)\r\n  const [currentStep, setCurrentStep] = useState(1);\r\n  const totalSteps = 4;\r\n\r\n  // Regions API state\r\n  const [regions, setRegions] = useState([]);\r\n  const [filteredRegions, setFilteredRegions] = useState([]);\r\n  const [isRegionDropdownOpen, setIsRegionDropdownOpen] = useState(false);\r\n  const [regionSearchQuery, setRegionSearchQuery] = useState(\"\");\r\n  const [regionsLoading, setRegionsLoading] = useState(false);\r\n  const [regionsError, setRegionsError] = useState(\"\");\r\n\r\n  // Regions API functions\r\n  const fetchRegions = async () => {\r\n    try {\r\n      setRegionsLoading(true);\r\n      setRegionsError(\"\");\r\n      const response = await fetch(`${process.env.NEXT_PUBLIC_API_URL || 'https://broker-adda-be.algofolks.com/api'}/regions`);\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`Failed to fetch regions: ${response.status}`);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      \r\n      if (data.success && data.data && data.data.regions) {\r\n        setRegions(data.data.regions);\r\n        setFilteredRegions(data.data.regions);\r\n      } else {\r\n        throw new Error('Invalid response format from regions API');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching regions:', error);\r\n      setRegionsError('Failed to load regions');\r\n    } finally {\r\n      setRegionsLoading(false);\r\n    }\r\n  };\r\n\r\n  const searchRegions = (query) => {\r\n    if (!query) {\r\n      setFilteredRegions(regions);\r\n      return;\r\n    }\r\n    \r\n    const lowercaseQuery = query.toLowerCase();\r\n    const filtered = regions.filter(region => \r\n      region.name.toLowerCase().includes(lowercaseQuery) ||\r\n      region.city.toLowerCase().includes(lowercaseQuery) ||\r\n      region.state.toLowerCase().includes(lowercaseQuery) ||\r\n      region.description.toLowerCase().includes(lowercaseQuery)\r\n    );\r\n    setFilteredRegions(filtered);\r\n  };\r\n\r\n  const formatRegionDisplay = (region) => {\r\n    if (!region) return '';\r\n    return `${region.name}, ${region.city}, ${region.state}`;\r\n  };\r\n\r\n  const formatRegionValue = (region) => {\r\n    if (!region) return '';\r\n    return `${region.name}, ${region.city}, ${region.state}`;\r\n  };\r\n\r\n  // Load regions on component mount\r\n  useEffect(() => {\r\n    fetchRegions();\r\n  }, []);\r\n\r\n  // Filter regions based on search query\r\n  useEffect(() => {\r\n    searchRegions(regionSearchQuery);\r\n  }, [regionSearchQuery, regions]);\r\n\r\n  // Close dropdown when clicking outside\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (isRegionDropdownOpen && !event.target.closest('.region-dropdown')) {\r\n        setIsRegionDropdownOpen(false);\r\n      }\r\n    };\r\n\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, [isRegionDropdownOpen]);\r\n\r\n  // Step validations\r\n  const isNonEmpty = (v) => typeof v === 'string' && v.trim().length > 0;\r\n  const isPositiveNumber = (v) => v !== '' && !Number.isNaN(Number(v)) && Number(v) > 0;\r\n\r\n  const isStep1Valid = () => {\r\n    return isNonEmpty(form.title) && isNonEmpty(form.region);\r\n  };\r\n\r\n  const isStep2Valid = () => {\r\n    return isPositiveNumber(form.price) && isNonEmpty(form.priceUnit) && isNonEmpty(form.city);\r\n  };\r\n\r\n  const isStep3Valid = () => {\r\n    return isPositiveNumber(form.propertySize) && isPositiveNumber(bedrooms) && isPositiveNumber(bathrooms) && isNonEmpty(form.propertyType) && isNonEmpty(form.subType);\r\n  };\r\n\r\n  const isStep4Valid = () => {\r\n    return (images.length + imageFiles.length) > 0; // require at least one image\r\n  };\r\n\r\n  const isCurrentStepValid = () => {\r\n    if (currentStep === 1) return isStep1Valid();\r\n    if (currentStep === 2) return isStep2Valid();\r\n    if (currentStep === 3) return isStep3Valid();\r\n    if (currentStep === 4) return isStep4Valid();\r\n    return false;\r\n  };\r\n\r\n  const goToStep = (step) => {\r\n    if (step < 1 || step > totalSteps) return;\r\n    setCurrentStep(step);\r\n  };\r\n  const nextStep = (e) => { \r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    console.log('Continue button clicked, current step:', currentStep, 'isValid:', isCurrentStepValid());\r\n    console.log('Continue button clicked - submitting state:', submitting);\r\n    if (currentStep < totalSteps && isCurrentStepValid()) {\r\n      console.log('Moving to next step...');\r\n      setCurrentStep(currentStep + 1);\r\n      console.log('Moved to step:', currentStep + 1);\r\n    } else {\r\n      console.log('Cannot proceed - either at last step or validation failed');\r\n    }\r\n  };\r\n  const prevStep = () => { if (currentStep > 1) setCurrentStep(currentStep - 1); };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setForm((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const addTag = (value, setter, list, clear) => {\r\n    const v = value.trim();\r\n    if (!v) return;\r\n    if (list.includes(v)) {\r\n      clear(\"\");\r\n      return;\r\n    }\r\n    setter([...list, v]);\r\n    clear(\"\");\r\n  };\r\n\r\n  const addAmenity = () => {\r\n    const v = amenityInput.trim();\r\n    if (!v) return;\r\n    if (amenities.includes(v)) {\r\n      setAmenityInput(\"\");\r\n      return;\r\n    }\r\n    setAmenities([...amenities, v]);\r\n    setAmenityInput(\"\");\r\n  };\r\n\r\n  const removeFrom = (value, setter) => setter((prev) => prev.filter((x) => x !== value));\r\n\r\n  // Region dropdown handlers\r\n  const handleRegionInputChange = (e) => {\r\n    const query = e.target.value;\r\n    setRegionSearchQuery(query);\r\n    setIsRegionDropdownOpen(true);\r\n    \r\n    // Update form region value as user types\r\n    setForm(prev => ({ ...prev, region: query }));\r\n  };\r\n\r\n  const handleRegionSelect = (region) => {\r\n    const regionValue = formatRegionValue(region);\r\n    setForm(prev => ({ ...prev, region: regionValue }));\r\n    setRegionSearchQuery(regionValue);\r\n    setIsRegionDropdownOpen(false);\r\n  };\r\n\r\n  const handleRegionInputFocus = () => {\r\n    setIsRegionDropdownOpen(true);\r\n  };\r\n\r\n  const handleRegionInputKeyDown = (e) => {\r\n    if (e.key === \"Escape\") {\r\n      setIsRegionDropdownOpen(false);\r\n    }\r\n  };\r\n\r\n    const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    console.log('Form submitted - current step:', currentStep);\r\n    console.log('Form submitted - submitting state:', submitting);\r\n    \r\n    // Only proceed if we're on the last step (Step 4)\r\n    if (currentStep !== 4) {\r\n      console.log('Form submitted but not on Step 4, current step:', currentStep);\r\n      console.log('Preventing form submission - not on step 4');\r\n      setError(`Please complete all steps. Currently on step ${currentStep} of 4.`);\r\n      return;\r\n    }\r\n    \r\n    console.log('Create Property button clicked - starting property creation');\r\n    setSubmitting(true);\r\n    setError(\"\");\r\n\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      if (!token) {\r\n        setError(\"Please login to create a property\");\r\n        setSubmitting(false);\r\n        return;\r\n      }\r\n\r\n      // âœ… Decode JWT token to extract user ID\r\n      let userId = null;\r\n      try {\r\n        const tokenParts = token.split(\".\");\r\n        if (tokenParts.length === 3) {\r\n          const payload = JSON.parse(atob(tokenParts[1]));\r\n          userId =\r\n            payload?.userId ||\r\n            payload?.user?._id ||\r\n            payload?.user?.id ||\r\n            payload?._id ||\r\n            payload?.id ||\r\n            payload?.sub ||\r\n            null;\r\n        }\r\n      } catch (err) {\r\n        console.warn(\"Token decoding failed:\", err);\r\n      }\r\n\r\n      if (!userId) {\r\n        setError(\"Failed to extract user ID from token. Please re-login.\");\r\n        setSubmitting(false);\r\n        return;\r\n      }\r\n\r\n      // âœ… Fetch broker details using userId\r\n      let brokerId = null;\r\n      try {\r\n        const brokerRes = await fetch(\r\n          `${process.env.NEXT_PUBLIC_API_URL || \"https://broker-adda-be.algofolks.com/api\"}/brokers/${userId}`,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          }\r\n        );\r\n\r\n        if (brokerRes.ok) {\r\n          const brokerData = await brokerRes.json();\r\n          brokerId =\r\n            brokerData?._id ||\r\n            brokerData?.broker?._id ||\r\n            brokerData?.data?._id ||\r\n            brokerData?.data?.broker?._id ||\r\n            null;\r\n        }\r\n      } catch (err) {\r\n        console.warn(\"Broker fetch failed:\", err);\r\n      }\r\n\r\n      if (!brokerId) {\r\n        setError(\"Broker not found for this account.\");\r\n        setSubmitting(false);\r\n        return;\r\n      }\r\n\r\n      // âœ… Prepare form data for API\r\n      const formData = new FormData();\r\n      formData.append(\"title\", form.title);\r\n      formData.append(\"description\", form.description || \"\");\r\n      formData.append(\"propertyDescription\", form.propertyDescription || \"\");\r\n      formData.append(\"propertySize\", form.propertySize || \"\");\r\n      formData.append(\"propertyType\", form.propertyType);\r\n      formData.append(\"subType\", form.subType);\r\n      formData.append(\"price\", form.price);\r\n      formData.append(\"priceUnit\", form.priceUnit);\r\n      formData.append(\"address\", form.address || \"\");\r\n      formData.append(\"city\", form.city);\r\n      formData.append(\"region\", form.region);\r\n\r\n      // Coordinates\r\n      if (coordinates.lat) formData.append(\"coordinates[lat]\", coordinates.lat);\r\n      if (coordinates.lng) formData.append(\"coordinates[lng]\", coordinates.lng);\r\n\r\n      // Property details\r\n      formData.append(\"bedrooms\", bedrooms || \"0\");\r\n      formData.append(\"bathrooms\", bathrooms || \"0\");\r\n      formData.append(\"furnishing\", furnishing);\r\n\r\n      // Arrays\r\n      amenities.forEach((a) => formData.append(\"amenities[]\", a));\r\n      nearbyAmenities.forEach((a) => formData.append(\"nearbyAmenities[]\", a));\r\n      features.forEach((f) => formData.append(\"features[]\", f));\r\n      locationBenefits.forEach((b) => formData.append(\"locationBenefits[]\", b));\r\n      videos.forEach((v) => formData.append(\"videos[]\", v));\r\n      videoFiles.forEach((f) => formData.append(\"videos\", f));\r\n      images.forEach((url) => formData.append(\"images[]\", url));\r\n      imageFiles.forEach((f) => formData.append(\"images\", f));\r\n\r\n      // Other fields\r\n      formData.append(\"status\", status);\r\n      formData.append(\"isFeatured\", isFeatured.toString());\r\n      formData.append(\"notes\", notes || \"\");\r\n\r\n      // âœ… Append valid broker ID\r\n      formData.append(\"broker\", brokerId);\r\n\r\n      // âœ… API call to create property\r\n      const response = await fetch(\r\n        `${process.env.NEXT_PUBLIC_API_URL || \"https://broker-adda-be.algofolks.com/api\"}/properties`,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n          body: formData,\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json().catch(() => ({}));\r\n        throw new Error(errorData.message || \"Failed to create property\");\r\n      }\r\n\r\n      const result = await response.json();\r\n      setSuccessMessage(\"Property created successfully!\");\r\n\r\n      // âœ… Navigate to properties management page after success\r\n      setTimeout(() => {\r\n        router.push(\"/properties-management\");\r\n      }, 2000); // Navigate after 2 seconds to show success message\r\n    } catch (err) {\r\n      setError(err.message || \"Failed to create property. Please try again.\");\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ProtectedRoute>\r\n      <div className=\"min-h-screen bg-white\">\r\n        <div className=\"w-full px-0 sm:px-0 lg:px-0 py-8 max-w-none\">\r\n          {/* Header */}\r\n          <div className=\"mb-8\">\r\n            <div className=\"flex items-center justify-between mb-4\">\r\n               <div>\r\n                 <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">Add New Property</h1>\r\n                 <p className=\"text-gray-600\">Create a new property listing with all the details</p>\r\n                 <div className=\"mt-2 text-sm text-blue-600 font-medium\">\r\n                   Step {currentStep} of {totalSteps}\r\n                 </div>\r\n               </div>\r\n              <Link \r\n                href=\"/properties-management\" \r\n                className=\"inline-flex items-center gap-2 px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors\"\r\n              >\r\n                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 19l-7-7m0 0l7-7m-7 7h18\" />\r\n                </svg>\r\n                Back to Properties\r\n              </Link>\r\n            </div>\r\n            \r\n            {/* Status Messages */}\r\n            {error && (\r\n              <div className=\"mb-6 p-4 bg-red-50 border border-red-200 rounded-xl\">\r\n                <div className=\"flex items-center gap-2\">\r\n                  <svg className=\"w-5 h-5 text-red-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                  </svg>\r\n                  <p className=\"text-sm text-red-700\">{error}</p>\r\n                  <button onClick={() => setError(\"\")} className=\"ml-auto text-red-500 hover:text-red-700\">\r\n                    <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n                    </svg>\r\n                  </button>\r\n        </div>\r\n          </div>\r\n            )}\r\n            \r\n            {successMessage && currentStep === 4 && (\r\n              <div className=\"mb-6 p-4 bg-green-50 border border-green-200 rounded-xl\">\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <svg className=\"w-5 h-5 text-green-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                    </svg>\r\n                    <p className=\"text-sm text-green-700\">{successMessage}</p>\r\n                  </div>\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <p className=\"text-xs text-green-600\">Redirecting in 2 seconds...</p>\r\n                    <Link\r\n                      href=\"/properties-management\"\r\n                      className=\"px-3 py-1 bg-green-600 text-white text-xs font-medium rounded-lg hover:bg-green-700 transition-colors\"\r\n                    >\r\n                      View Properties\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Layout: form + right sidebar like profile page */}\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-12 gap-6 items-start\">\r\n          {/* Form */}\r\n          <form onSubmit={(e) => {\r\n            console.log('Form onSubmit triggered - current step:', currentStep);\r\n            if (currentStep !== 4) {\r\n              console.log('Form submission prevented - not on step 4');\r\n              e.preventDefault();\r\n              e.stopPropagation();\r\n              return false;\r\n            }\r\n            return handleSubmit(e);\r\n          }} className=\"lg:col-span-9 bg-white rounded-2xl shadow border border-gray-100 overflow-hidden\">\r\n            \r\n            {/* Stepper moved to right sidebar */}\r\n\r\n            <div className=\"p-8 space-y-8\">\r\n              {/* Basic Information Section */}\r\n              {currentStep === 1 && (\r\n              <div className=\"space-y-6\">\r\n                <div className=\"flex items-center gap-3 mb-6 pb-4 border-b border-gray-200\">\r\n                  <div className=\"w-8 h-8 bg-green-100 rounded-lg flex items-center justify-center\">\r\n                    <svg className=\"w-4 h-4 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                    </svg>\r\n                  </div>\r\n                  <h3 className=\"text-base font-semibold text-gray-900\">Basic Information</h3>\r\n                </div>\r\n                \r\n                <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n                  <div className=\"space-y-2\">\r\n                    <label className=\"block text-sm font-medium text-gray-700\">Property Title *</label>\r\n                    <input \r\n                      name=\"title\" \r\n                      value={form.title} \r\n                      onChange={handleChange} \r\n                      onKeyDown={(e) => { if(e.key === 'Enter') e.preventDefault(); }}\r\n                      className={`w-full rounded-xl text-sm px-4 py-3 focus:outline-none transition-all duration-200 ${isNonEmpty(form.title) ? 'border border-gray-300 focus:ring-2 focus:ring-green-500 focus:border-transparent' : 'border border-red-300 focus:ring-2 focus:ring-red-400'}`} \r\n                      placeholder=\"Enter property title\" \r\n                      required\r\n                    />\r\n                    {!isNonEmpty(form.title) && (<p className=\"text-xs text-red-600\">Title is required.</p>)}\r\n                  </div>\r\n                  \r\n                  <div className=\"space-y-2\">\r\n                    <label className=\"block text-sm font-medium text-gray-700\">Region *</label>\r\n                    <div className=\"relative region-dropdown\">\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"region\"\r\n                        value={regionSearchQuery || form.region}\r\n                        onChange={handleRegionInputChange}\r\n                        onFocus={handleRegionInputFocus}\r\n                        onKeyDown={handleRegionInputKeyDown}\r\n                        className={`w-full rounded-xl text-sm px-4 py-3 focus:outline-none transition-all duration-200 ${\r\n                          !isNonEmpty(form.region) \r\n                            ? 'border border-red-300 focus:ring-2 focus:ring-red-400' \r\n                            : 'border border-gray-300 focus:ring-2 focus:ring-green-500 focus:border-transparent'\r\n                        }`}\r\n                        placeholder=\"Select a region...\"\r\n                        required\r\n                        autoComplete=\"off\"\r\n                      />\r\n                      \r\n                      {/* Dropdown arrow */}\r\n                      <div className=\"absolute inset-y-0 right-0 flex items-center pr-3 pointer-events-none\">\r\n                        <svg\r\n                          className={`w-5 h-5 text-gray-400 transition-transform duration-200 ${\r\n                            isRegionDropdownOpen ? \"rotate-180\" : \"\"\r\n                          }`}\r\n                          fill=\"none\"\r\n                          stroke=\"currentColor\"\r\n                          viewBox=\"0 0 24 24\"\r\n                        >\r\n                          <path\r\n                            strokeLinecap=\"round\"\r\n                            strokeLinejoin=\"round\"\r\n                            strokeWidth={2}\r\n                            d=\"M19 9l-7 7-7-7\"\r\n                          />\r\n                        </svg>\r\n                      </div>\r\n\r\n                      {/* Dropdown menu */}\r\n                      {isRegionDropdownOpen && (\r\n                        <div className=\"absolute z-50 w-full mt-1 bg-white border border-gray-300 rounded-xl shadow-lg max-h-60 overflow-y-auto\">\r\n                          {regionsLoading ? (\r\n                            <div className=\"px-4 py-3 text-sm text-gray-500 flex items-center gap-2\">\r\n                              <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-green-600\"></div>\r\n                              Loading regions...\r\n                            </div>\r\n                          ) : regionsError ? (\r\n                            <div className=\"px-4 py-3 text-sm text-red-600\">\r\n                              {regionsError}\r\n                            </div>\r\n                          ) : filteredRegions.length === 0 ? (\r\n                            <div className=\"px-4 py-3 text-sm text-gray-500\">\r\n                              {regionSearchQuery ? \"No regions found\" : \"No regions available\"}\r\n                            </div>\r\n                          ) : (\r\n                            <ul className=\"py-1\">\r\n                              {filteredRegions.map((region) => (\r\n                                <li key={region._id}>\r\n                                  <button\r\n                                    type=\"button\"\r\n                                    onClick={() => handleRegionSelect(region)}\r\n                                    className=\"w-full px-4 py-3 text-left text-sm hover:bg-gray-50 focus:bg-gray-50 focus:outline-none\"\r\n                                  >\r\n                                    <div className=\"font-medium text-gray-900\">\r\n                                      {region.name}\r\n                                    </div>\r\n                                    <div className=\"text-xs text-gray-500\">\r\n                                      {region.city}, {region.state}\r\n                                    </div>\r\n                                    {/* {region.description && (\r\n                                      <div className=\"text-xs text-gray-400 mt-1\">\r\n                                        {region.description}\r\n                                      </div>\r\n                                    )} */}\r\n                                  </button>\r\n                                </li>\r\n                              ))}\r\n                            </ul>\r\n                          )}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                    {!isNonEmpty(form.region) && (\r\n                      <p className=\"text-xs text-red-600\">Region is required.</p>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"space-y-2\">\r\n                  <label className=\"block text-sm font-medium text-gray-700\">Short Description</label>\r\n                  <textarea \r\n                    name=\"description\" \r\n                    value={form.description} \r\n                    onChange={handleChange} \r\n                    rows={3} \r\n                    className=\"w-full border border-gray-300 rounded-xl text-sm px-4 py-3 focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-transparent transition-all duration-200 resize-none\" \r\n                    placeholder=\"Brief description of the property\"\r\n                  />\r\n                </div>\r\n                \r\n                <div className=\"space-y-2\">\r\n                  <label className=\"block text-sm font-medium text-gray-700\">Detailed Description</label>\r\n                  <textarea \r\n                    name=\"propertyDescription\" \r\n                    value={form.propertyDescription} \r\n                    onChange={handleChange} \r\n                    rows={4} \r\n                    className=\"w-full border border-gray-300 rounded-xl text-sm px-4 py-3 focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-transparent transition-all duration-200 resize-none\" \r\n                    placeholder=\"Comprehensive description with all details\"\r\n                  />\r\n                </div>\r\n                {/* Step navigation removed; use global bottom controls */}\r\n              </div>\r\n              )}\r\n              {/* Location & Pricing Section */}\r\n              {currentStep === 2 && (\r\n              <div className=\"space-y-6\">\r\n                <div className=\"flex items-center gap-3 mb-6 pb-4 border-b border-gray-200\">\r\n                  <div className=\"w-8 h-8 bg-blue-100 rounded-lg flex items-center justify-center\">\r\n                    <svg className=\"w-4 h-4 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17.657 16.657L13.414 20.9a2 2 0 01-2.828 0l-4.243-4.243a8 8 0 1111.314 0z\" />\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\r\n                    </svg>\r\n                  </div>\r\n                  <h3 className=\"text-base font-semibold text-gray-900\">Location & Pricing</h3>\r\n                </div>\r\n                \r\n                <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n                  <div className=\"space-y-2\">\r\n                    <label className=\"block text-sm font-medium text-gray-700\">Address</label>\r\n                    <input \r\n                      name=\"address\" \r\n                      value={form.address} \r\n                      onChange={handleChange} \r\n                      onKeyDown={(e) => { if(e.key === 'Enter') e.preventDefault(); }}\r\n                      className={`w-full rounded-xl text-sm px-4 py-3 focus:outline-none transition-all duration-200 ${isNonEmpty(form.address) || form.address === '' ? 'border border-gray-300 focus:ring-2 focus:ring-green-500 focus:border-transparent' : 'border border-red-300 focus:ring-2 focus:ring-red-400'}`} \r\n                      placeholder=\"Street address\" \r\n                    />\r\n            </div>\r\n                  \r\n                  <div className=\"space-y-2\">\r\n                    <label className=\"block text-sm font-medium text-gray-700\">City</label>\r\n                    <input \r\n                      name=\"city\" \r\n                      value={form.city} \r\n                      onChange={handleChange} \r\n                      onKeyDown={(e) => { if(e.key === 'Enter') e.preventDefault(); }}\r\n                      className={`w-full rounded-xl text-sm px-4 py-3 focus:outline-none transition-all duration-200 ${isNonEmpty(form.city) ? 'border border-gray-300 focus:ring-2 focus:ring-green-500 focus:border-transparent' : 'border border-red-300 focus:ring-2 focus:ring-red-400'}`} \r\n                      placeholder=\"City\" \r\n                    />\r\n                    {!isNonEmpty(form.city) && (<p className=\"text-xs text-red-600\">City is required.</p>)}\r\n            </div>\r\n          </div>\r\n                \r\n                <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n                  <div className=\"space-y-2\">\r\n                    <label className=\"block text-sm font-medium text-gray-700\">Price *</label>\r\n                    <input \r\n                      type=\"number\" \r\n                      name=\"price\" \r\n                      value={form.price} \r\n                      onChange={handleChange} \r\n                      onKeyDown={(e) => { if(e.key === 'Enter') e.preventDefault(); }}\r\n                      className={`w-full rounded-xl text-sm px-4 py-3 focus:outline-none transition-all duration-200 ${isPositiveNumber(form.price) ? 'border border-gray-300 focus:ring-2 focus:ring-green-500 focus:border-transparent' : 'border border-red-300 focus:ring-2 focus:ring-red-400'}`} \r\n                      placeholder=\"e.g. 42000000\" \r\n                      required\r\n                    />\r\n                    {!isPositiveNumber(form.price) && (<p className=\"text-xs text-red-600\">Enter a valid price.</p>)}\r\n                  </div>\r\n                  \r\n                  <div className=\"space-y-2\">\r\n                    <label className=\"block text-sm font-medium text-gray-700\">Currency</label>\r\n                    <select \r\n                      name=\"priceUnit\" \r\n                      value={form.priceUnit} \r\n                      onChange={handleChange} \r\n                      className={`w-full rounded-xl text-sm px-4 py-3 focus:outline-none transition-all duration-200 ${isNonEmpty(form.priceUnit) ? 'border border-gray-300 focus:ring-2 focus:ring-green-500 focus:border-transparent' : 'border border-red-300 focus:ring-2 focus:ring-red-400'}`}\r\n                    >\r\n                      <option>INR</option>\r\n                      <option>USD</option>\r\n                    </select>\r\n                  </div>\r\n          </div>\r\n                {/* Coordinates removed per request */}\r\n                {/* Step navigation removed; use global bottom controls */}\r\n              </div>\r\n              )}\r\n              {/* Property Details Section */}\r\n              {currentStep === 3 && (\r\n              <div className=\"space-y-6\">\r\n                <div className=\"flex items-center gap-3 mb-6 pb-4 border-b border-gray-200\">\r\n                  <div className=\"w-8 h-8 bg-purple-100 rounded-lg flex items-center justify-center\">\r\n                    <svg className=\"w-4 h-4 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2H5a2 2 0 00-2-2z\" />\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 5a2 2 0 012-2h4a2 2 0 012 2v2H8V5z\" />\r\n                    </svg>\r\n                  </div>\r\n                  <h3 className=\"text-base font-semibold text-gray-900\">Property Details</h3>\r\n                </div>\r\n                \r\n                <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\r\n                  <div className=\"space-y-2\">\r\n                    <label className=\"block text-sm font-medium text-gray-700\">Property Size (sqft)</label>\r\n                    <input \r\n                      type=\"number\" \r\n                      name=\"propertySize\" \r\n                      value={form.propertySize} \r\n                      onChange={handleChange} \r\n                      onKeyDown={(e) => { if(e.key === 'Enter') e.preventDefault(); }}\r\n                      className=\"w-full border border-gray-300 rounded-xl text-sm px-4 py-3 focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-transparent transition-all duration-200\" \r\n                      placeholder=\"e.g. 1200\"\r\n                    />\r\n            </div>\r\n                  \r\n                  <div className=\"space-y-2\">\r\n                    <label className=\"block text-sm font-medium text-gray-700\">Bedrooms</label>\r\n                    <input \r\n                      type=\"number\" \r\n                      value={bedrooms} \r\n                      onChange={(e)=>setBedrooms(e.target.value)} \r\n                      onKeyDown={(e) => { if(e.key === 'Enter') e.preventDefault(); }}\r\n                      className=\"w-full border border-gray-300 rounded-xl text-sm px-4 py-3 focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-transparent transition-all duration-200\" \r\n                      placeholder=\"e.g. 3\"\r\n                    />\r\n            </div>\r\n                  \r\n                  <div className=\"space-y-2\">\r\n                    <label className=\"block text-sm font-medium text-gray-700\">Bathrooms</label>\r\n                    <input \r\n                      type=\"number\" \r\n                      value={bathrooms} \r\n                      onChange={(e)=>setBathrooms(e.target.value)} \r\n                      onKeyDown={(e) => { if(e.key === 'Enter') e.preventDefault(); }}\r\n                      className=\"w-full border border-gray-300 rounded-xl text-sm px-4 py-3 focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-transparent transition-all duration-200\" \r\n                      placeholder=\"e.g. 2\"\r\n                    />\r\n            </div>\r\n          </div>\r\n                \r\n                <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\r\n                  <div className=\"space-y-2\">\r\n                    <label className=\"block text-sm font-medium text-gray-700\">Property Type *</label>\r\n                    <select \r\n                      name=\"propertyType\" \r\n                      value={form.propertyType} \r\n                      onChange={handleChange} \r\n                      className=\"w-full border border-gray-300 rounded-xl text-sm px-4 py-3 focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-transparent transition-all duration-200\"\r\n                      required\r\n                    >\r\n                <option>Residential</option>\r\n                <option>Commercial</option>\r\n                <option>Industrial</option>\r\n                <option>Land</option>\r\n              </select>\r\n            </div>\r\n                  \r\n                  <div className=\"space-y-2\">\r\n                    <label className=\"block text-sm font-medium text-gray-700\">Sub Type</label>\r\n                    <select \r\n                      name=\"subType\" \r\n                      value={form.subType} \r\n                      onChange={handleChange} \r\n                      className=\"w-full border border-gray-300 rounded-xl text-sm px-4 py-3 focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-transparent transition-all duration-200\"\r\n                    >\r\n                <option>Apartment</option>\r\n                <option>Villa</option>\r\n                <option>Office</option>\r\n                <option>Shop</option>\r\n                <option>Land</option>\r\n                <option>Other</option>\r\n              </select>\r\n            </div>\r\n                  \r\n                  <div className=\"space-y-2\">\r\n                    <label className=\"block text-sm font-medium text-gray-700\">Furnishing</label>\r\n                    <select \r\n                      value={furnishing} \r\n                      onChange={(e)=>setFurnishing(e.target.value)} \r\n                      className=\"w-full border border-gray-300 rounded-xl text-sm px-4 py-3 focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-transparent transition-all duration-200\"\r\n                    >\r\n                <option>Furnished</option>\r\n                <option>Semi-Furnished</option>\r\n                <option>Unfurnished</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n                {/* Step navigation removed; use global bottom controls */}\r\n            </div>\r\n              )}\r\n              {/* Amenities Section */}\r\n              {currentStep === 3 && (\r\n              <div className=\"space-y-6\">\r\n                <div className=\"flex items-center gap-3 mb-6 pb-4 border-b border-gray-200\">\r\n                  <div className=\"w-8 h-8 bg-orange-100 rounded-lg flex items-center justify-center\">\r\n                    <svg className=\"w-4 h-4 text-orange-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 3v4M3 5h4M6 17v4m-2-2h4m5-16l2.286 6.857L21 12l-5.714 2.143L13 21l-2.286-6.857L5 12l5.714-2.143L13 3z\" />\r\n                    </svg>\r\n            </div>\r\n                  <h3 className=\"text-base font-semibold text-gray-900\">Amenities & Features</h3>\r\n          </div>\r\n                \r\n                <div className=\"space-y-4\">\r\n                  <div className=\"space-y-2\">\r\n                    <label className=\"block text-sm font-medium text-gray-700\">Property Amenities</label>\r\n                    <div className=\"flex gap-3\">\r\n                      <input \r\n                        value={amenityInput} \r\n                        onChange={(e)=>setAmenityInput(e.target.value)} \r\n                        onKeyDown={(e)=>{ if(e.key==='Enter'){ e.preventDefault(); addAmenity(); } }} \r\n                        className=\"flex-1 border border-gray-300 rounded-xl text-sm px-4 py-3 focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-transparent transition-all duration-200\" \r\n                        placeholder=\"Type amenity and press Add or Enter\" \r\n                      />\r\n                      <button \r\n                        type=\"button\" \r\n                        onClick={addAmenity} \r\n                        className=\"px-6 py-3 bg-green-600 text-white rounded-xl hover:bg-green-700 transition-colors duration-200 font-medium\"\r\n                      >\r\n                        Add\r\n                      </button>\r\n            </div>\r\n            {amenities.length>0 && (\r\n                      <div className=\"mt-3 flex flex-wrap gap-2\">\r\n                {amenities.map((a)=> (\r\n                          <span key={a} className=\"inline-flex items-center gap-2 text-sm bg-green-50 text-green-700 px-3 py-2 rounded-full border border-green-200\">\r\n                            {a}\r\n                            <button \r\n                              type=\"button\" \r\n                              onClick={()=>removeFrom(a, setAmenities)} \r\n                              className=\"text-green-500 hover:text-green-700 transition-colors\"\r\n                            >\r\n                              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n                              </svg>\r\n                            </button>\r\n                          </span>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n                </div>\r\n              </div>\r\n              )}\r\n          {currentStep === 3 && (\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Nearby Amenities</label>\r\n            <div className=\"flex gap-2\">\r\n              <input value={nearbyAmenityInput} onChange={(e)=>setNearbyAmenityInput(e.target.value)} onKeyDown={(e)=>{ if(e.key==='Enter'){ e.preventDefault(); addTag(nearbyAmenityInput, setNearbyAmenities, nearbyAmenities, setNearbyAmenityInput); } }} className=\"flex-1 border border-gray-300 rounded-xl text-sm px-4 py-3 focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-transparent transition-all duration-200\" placeholder=\"Add nearby amenity\" />\r\n              <button type=\"button\" onClick={()=>addTag(nearbyAmenityInput, setNearbyAmenities, nearbyAmenities, setNearbyAmenityInput)} className=\"px-6 py-3 bg-green-600 text-white rounded-xl hover:bg-green-700 transition-colors duration-200 font-medium\">Add</button>\r\n            </div>\r\n            {nearbyAmenities.length>0 && (\r\n              <div className=\"mt-2 flex flex-wrap gap-2\">\r\n                {nearbyAmenities.map((a)=> (\r\n                  <span key={a} className=\"inline-flex items-center gap-1 text-xs bg-green-50 text-green-700 px-2 py-1 rounded-full border border-green-200\">{a}<button type=\"button\" onClick={()=>removeFrom(a, setNearbyAmenities)} className=\"text-green-600 hover:text-green-800\">Ã—</button></span>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n          )}\r\n          {currentStep === 3 && (\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Features</label>\r\n            <div className=\"flex gap-2\">\r\n              <input value={featureInput} onChange={(e)=>setFeatureInput(e.target.value)} onKeyDown={(e)=>{ if(e.key==='Enter'){ e.preventDefault(); addTag(featureInput, setFeatures, features, setFeatureInput); } }} className=\"flex-1 border border-gray-300 rounded-xl text-sm px-4 py-3 focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-transparent transition-all duration-200\" placeholder=\"Add feature\" />\r\n              <button type=\"button\" onClick={()=>addTag(featureInput, setFeatures, features, setFeatureInput)} className=\"px-6 py-3 bg-green-600 text-white rounded-xl hover:bg-green-700 transition-colors duration-200 font-medium\">Add</button>\r\n            </div>\r\n            {features.length>0 && (\r\n              <div className=\"mt-2 flex flex-wrap gap-2\">\r\n                {features.map((a)=> (\r\n                  <span key={a} className=\"inline-flex items-center gap-1 text-xs bg-green-50 text-green-700 px-2 py-1 rounded-full border border-green-200\">{a}<button type=\"button\" onClick={()=>removeFrom(a, setFeatures)} className=\"text-green-600 hover:text-green-800\">Ã—</button></span>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n          )}\r\n          {currentStep === 3 && (\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Location Benefits</label>\r\n            <div className=\"flex gap-2\">\r\n              <input value={locationBenefitInput} onChange={(e)=>setLocationBenefitInput(e.target.value)} onKeyDown={(e)=>{ if(e.key==='Enter'){ e.preventDefault(); addTag(locationBenefitInput, setLocationBenefits, locationBenefits, setLocationBenefitInput); } }} className=\"flex-1 border border-gray-300 rounded-xl text-sm px-4 py-3 focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-transparent transition-all duration-200\" placeholder=\"Add location benefit\" />\r\n              <button type=\"button\" onClick={()=>addTag(locationBenefitInput, setLocationBenefits, locationBenefits, setLocationBenefitInput)} className=\"px-6 py-3 bg-green-600 text-white rounded-xl hover:bg-green-700 transition-colors duration-200 font-medium\">Add</button>\r\n            </div>\r\n            {locationBenefits.length>0 && (\r\n              <div className=\"mt-2 flex flex-wrap gap-2\">\r\n                {locationBenefits.map((a)=> (\r\n                  <span key={a} className=\"inline-flex items-center gap-1 text-xs bg-green-50 text-green-700 px-2 py-1 rounded-full border border-green-200\">{a}<button type=\"button\" onClick={()=>removeFrom(a, setLocationBenefits)} className=\"text-green-600 hover:text-green-800\">Ã—</button></span>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n          )}\r\n          {currentStep === 4 && (\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Images</label>\r\n            <div className=\"flex items-center gap-2\">\r\n              <div className=\"border border-gray-300 rounded-xl focus-within:ring-2 focus-within:ring-green-500 focus-within:border-transparent transition-all duration-200 flex items-center overflow-hidden flex-1\">\r\n                <input \r\n                  value={imageInput} \r\n                  onChange={(e)=>setImageInput(e.target.value)} \r\n                  onKeyDown={(e)=>{ if(e.key==='Enter'){ e.preventDefault(); addTag(imageInput, setImages, images, setImageInput); } }} \r\n                  onClick={()=>{ fileInputRef.current && fileInputRef.current.click(); }}\r\n                  className=\"flex-1 px-4 py-3 outline-none text-sm\" \r\n                  placeholder=\"Paste image URL or click to choose files\" \r\n                />\r\n                <input \r\n                  ref={fileInputRef}\r\n                  type=\"file\" \r\n                  multiple \r\n                  accept=\"image/*\" \r\n                  onChange={(e)=>{ const files = Array.from(e.target.files || []); if(files.length){ setImageFiles((prev)=>[...prev, ...files]); } }} \r\n                  className=\"hidden\" \r\n                />\r\n              </div>\r\n              <button type=\"button\" onClick={()=>addTag(imageInput, setImages, images, setImageInput)} className=\"px-4 py-3 bg-green-600 text-white font-medium rounded-xl hover:bg-green-700 transition-colors duration-200\">Add</button>\r\n            </div>\r\n            {(images.length>0 || imageFiles.length>0) && (\r\n              <div className=\"mt-3 space-y-2\">\r\n            {images.length>0 && (\r\n                  <div className=\"flex flex-wrap gap-2\">\r\n                {images.map((a)=> (\r\n                  <span key={a} className=\"inline-flex items-center gap-1 text-xs bg-green-50 text-green-700 px-2 py-1 rounded-full border border-green-200\">{a}<button type=\"button\" onClick={()=>removeFrom(a, setImages)} className=\"text-green-600 hover:text-green-800\">Ã—</button></span>\r\n                ))}\r\n                  </div>\r\n                )}\r\n                {imageFiles.length>0 && (\r\n                  <div className=\"flex flex-wrap gap-2\">\r\n                    {imageFiles.map((f, idx)=> (\r\n                      <span key={`${f.name}-${idx}`} className=\"inline-flex items-center gap-2 text-xs bg-green-50 text-green-700 px-3 py-1 rounded-full border border-green-200\">\r\n                        {f.name}\r\n                        <button type=\"button\" onClick={()=> setImageFiles((prev)=> prev.filter((_, i)=> i!==idx))} className=\"text-green-600 hover:text-green-800\">Ã—</button>\r\n                      </span>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n          )}\r\n          {currentStep === 4 && (\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Videos</label>\r\n            <div className=\"flex items-center gap-2\">\r\n              <div className=\"border border-gray-300 rounded-xl focus-within:ring-2 focus-within:ring-green-500 focus-within:border-transparent transition-all duration-200 flex items-center overflow-hidden flex-1\">\r\n                <input \r\n                  value={videoInput} \r\n                  onChange={(e)=>setVideoInput(e.target.value)} \r\n                  onKeyDown={(e)=>{ if(e.key==='Enter'){ e.preventDefault(); addTag(videoInput, setVideos, videos, setVideoInput); } }} \r\n                  onClick={()=>{ videoFileInputRef.current && videoFileInputRef.current.click(); }}\r\n                  className=\"flex-1 px-4 py-3 outline-none text-sm\" \r\n                  placeholder=\"Paste video URL or click to choose files\" \r\n                />\r\n                <input \r\n                  ref={videoFileInputRef}\r\n                  type=\"file\" \r\n                  multiple \r\n                  accept=\"video/*\" \r\n                  onChange={(e)=>{ const files = Array.from(e.target.files || []); if(files.length){ setVideoFiles((prev)=>[...prev, ...files]); } }} \r\n                  className=\"hidden\" \r\n                />\r\n              </div>\r\n              <button type=\"button\" onClick={()=>addTag(videoInput, setVideos, videos, setVideoInput)} className=\"px-4 py-3 bg-green-600 text-white font-medium rounded-xl hover:bg-green-700 transition-colors duration-200\">Add</button>\r\n            </div>\r\n            {(videos.length>0 || videoFiles.length>0) && (\r\n              <div className=\"mt-2 flex flex-wrap gap-2\">\r\n                {videos.map((a)=> (\r\n                  <span key={a} className=\"inline-flex items-center gap-1 text-xs bg-gray-100 text-gray-700 px-2 py-1 rounded-full\">{a}<button type=\"button\" onClick={()=>removeFrom(a, setVideos)} className=\"text-gray-500 hover:text-gray-700\">Ã—</button></span>\r\n                ))}\r\n                {videoFiles.map((f, idx)=> (\r\n                  <span key={`${f.name}-${idx}`} className=\"inline-flex items-center gap-2 text-xs bg-blue-50 text-blue-700 px-3 py-1 rounded-full border border-blue-200\">\r\n                    {f.name}\r\n                    <button type=\"button\" onClick={()=> setVideoFiles((prev)=> prev.filter((_, i)=> i!==idx))} className=\"text-blue-600 hover:text-blue-800\">Ã—</button>\r\n                  </span>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n          )}\r\n          {currentStep === 4 && (\r\n          <>\r\n          <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-4\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Status</label>\r\n              <select value={status} onChange={(e)=>setStatus(e.target.value)} className=\"w-full border border-gray-300 rounded-xl px-4 py-3 focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-transparent transition-all duration-200\">\r\n                <option>Active</option>\r\n                <option>Sold</option>\r\n                <option>Expired</option>\r\n                <option>Pending Approval</option>\r\n                <option>Rejected</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Notes</label>\r\n            <textarea value={notes} onChange={(e)=>setNotes(e.target.value)} rows={2} className=\"w-full border border-gray-300 rounded-xl px-4 py-3 focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-transparent transition-all duration-200 resize-none\" placeholder=\"Internal notes\" />\r\n          </div>\r\n          </>\r\n          )}\r\n              {/* Submit Section */}\r\n              <div className=\"pt-8 border-t border-gray-100\">\r\n                {currentStep < 4 ? (\r\n                  <div className=\"max-w-3xl mx-auto\">\r\n                    <button \r\n                      type=\"button\" \r\n                      onClick={nextStep} \r\n                      disabled={!isCurrentStepValid() || submitting} \r\n                      className={`w-full py-4 rounded-xl font-semibold focus:outline-none focus:ring-4 transition-all duration-200 shadow-lg flex items-center justify-center gap-2 ${isCurrentStepValid() && !submitting ? 'bg-gradient-to-r from-blue-600 to-blue-700 text-white hover:from-blue-700 hover:to-blue-800 focus:ring-blue-100 hover:shadow-xl' : 'bg-gray-200 text-gray-500 cursor-not-allowed'}`}\r\n                    >\r\n                      Continue\r\n                      <svg className=\"w-5 h-5 ml-2 inline\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\"/></svg>\r\n                    </button>\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"max-w-3xl mx-auto\">\r\n                    <button \r\n                      type=\"submit\" \r\n                      disabled={submitting}\r\n                      className=\"w-full py-4 bg-gradient-to-r from-blue-600 to-blue-700 text-white rounded-xl font-semibold hover:from-blue-700 hover:to-blue-800 focus:outline-none focus:ring-4 focus:ring-blue-100 transition-all duration-200 shadow-lg hover:shadow-xl disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center gap-2\"\r\n                    >\r\n                      {submitting ? (\r\n                        <>\r\n                          <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white\"></div>\r\n                          Saving...\r\n                        </>\r\n                      ) : (\r\n                        'Create Property'\r\n                      )}\r\n                    </button>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </form>\r\n\r\n          {/* Right Sidebar - Stepper */}\r\n          <div className=\"lg:col-span-3\">\r\n            <div className=\"bg-white rounded-2xl shadow border border-gray-100 p-5 sticky top-4\">\r\n              <div className=\"flex items-start gap-3 mb-3\">\r\n                <div className=\"w-7 h-7 rounded-lg bg-blue-50 text-blue-600 flex items-center justify-center\">\r\n                  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5.121 17.804A7 7 0 0112 15a7 7 0 016.879 2.804M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\r\n                  </svg>\r\n                </div>\r\n                <div>\r\n                  <h4 className=\"text-sm font-semibold text-gray-900\">Create property</h4>\r\n                  <p className=\"text-xs text-gray-600\">Finish basic details and choose your nearest region to get started.</p>\r\n                </div>\r\n              </div>\r\n              {/* Horizontal stepper like profile sidebar */}\r\n              <div className=\"flex items-center gap-2\">\r\n                {(() => {\r\n                  const steps = [1,2,3,4];\r\n                  return (\r\n                    <>\r\n                      {steps.map((n, idx) => {\r\n                        const isActive = n === currentStep;\r\n                        const isCompleted = n < currentStep;\r\n                        const circle = isActive\r\n                          ? \"bg-blue-600 text-white\"\r\n                          : isCompleted\r\n                          ? \"bg-green-50 text-green-700 border border-green-200\"\r\n                          : \"bg-gray-100 text-gray-600 border border-gray-200\";\r\n                        return (\r\n                          <React.Fragment key={n}>\r\n                            <button type=\"button\" onClick={() => goToStep(n)} className={`w-8 h-8 rounded-full flex items-center justify-center text-xs font-bold ${circle}`}>{n}</button>\r\n                            {idx < steps.length - 1 && (\r\n                              <span className={`w-6 h-[2px] ${n < currentStep ? 'bg-green-200' : 'bg-gray-200'}`}></span>\r\n                            )}\r\n                          </React.Fragment>\r\n                        );\r\n                      })}\r\n                    </>\r\n                  );\r\n                })()}\r\n              </div>\r\n              {/* Sidebar controls removed to avoid duplicate nav; use bottom controls only */}\r\n            </div>\r\n\r\n            {/* Property summary */}\r\n            <div className=\"mt-4 bg-white rounded-2xl shadow border border-gray-100 p-5\">\r\n              <h4 className=\"text-sm font-semibold text-gray-900 mb-4\">Property summary</h4>\r\n              <div className=\"space-y-3 text-sm\">\r\n                <div className=\"flex justify-between\"><span className=\"text-gray-600\">Status</span><span className=\"font-medium\">{status}</span></div>\r\n                <div className=\"flex justify-between\"><span className=\"text-gray-600\">Title</span><span className=\"font-medium truncate max-w-[160px]\" title={form.title || \"Untitled\"}>{form.title || \"Untitled\"}</span></div>\r\n                <div className=\"flex justify-between\"><span className=\"text-gray-600\">City</span><span className=\"font-medium\">{form.city || \"-\"}</span></div>\r\n                <div className=\"flex justify-between\"><span className=\"text-gray-600\">Region</span><span className=\"font-medium truncate max-w-[160px]\" title={form.region || \"-\"}>{form.region || \"-\"}</span></div>\r\n                <div className=\"flex justify-between\"><span className=\"text-gray-600\">Price</span><span className=\"font-medium\">{form.price ? `${form.priceUnit} ${form.price}` : '-'}</span></div>\r\n              </div>\r\n            </div>\r\n\r\n          {/* Nearest regions (static preview like profile) */}\r\n          <div className=\"mt-4 bg-white rounded-2xl shadow border border-gray-100 p-5\">\r\n            <div className=\"flex items-center justify-between mb-3\">\r\n              <h4 className=\"text-sm font-semibold text-gray-900\">Nearest regions</h4>\r\n              <button type=\"button\" className=\"text-xs text-blue-600 hover:underline\">Use nearest</button>\r\n            </div>\r\n            <div className=\"space-y-2 text-sm\">\r\n              <div className=\"flex justify-between\"><span className=\"text-gray-700\">{form.city || 'Your city'}</span><span className=\"text-gray-500\">0 km</span></div>\r\n              <div className=\"flex justify-between\"><span className=\"text-gray-700\">Agra</span><span className=\"text-gray-500\">316 km</span></div>\r\n              <div className=\"flex justify-between\"><span className=\"text-gray-700\">Delhi</span><span className=\"text-gray-500\">350 km</span></div>\r\n            </div>\r\n          </div>\r\n\r\n            {/* Tips */}\r\n            <div className=\"mt-4 bg-white rounded-2xl shadow border border-gray-100 p-5\">\r\n              <h4 className=\"text-sm font-semibold text-gray-900 mb-3\">Tips</h4>\r\n              <ul className=\"text-[13px] text-gray-700 list-disc pl-5 space-y-2\">\r\n                <li>Fill basic info first, then details.</li>\r\n                <li>Use realistic price and clear title.</li>\r\n                <li>Add at least 3 good images and one video link.</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ProtectedRoute>\r\n  );\r\n};\r\n\r\nexport default NewPropertyPage;\r\n"],"names":[],"mappings":"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"}