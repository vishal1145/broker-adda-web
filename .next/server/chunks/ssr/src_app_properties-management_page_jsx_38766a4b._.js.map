{"version":3,"sources":["turbopack:///[project]/src/app/properties-management/page.jsx"],"sourcesContent":["\"use client\";\r\nimport React, { useState, useEffect, useCallback, useRef } from \"react\";\r\nimport ProtectedRoute from \"../components/ProtectedRoute\";\r\nimport Link from \"next/link\";\r\nimport HeaderFile from \"../components/Header\";\r\n\r\nconst DEFAULT_IMAGE = \"/images/pexels-binyaminmellish-106399.jpg\";\r\n\r\nconst initialProperties = [\r\n  {\r\n    id: \"demo-1\",\r\n    title: \"4BHK Premium Villa\",\r\n    description: \"Luxurious residential retreat in prime location.\",\r\n    region: \"Noida, Uttar Pradesh\",\r\n    amenities: [\"Swimming Pool\", \"Club House\"],\r\n    propertyType: \"Residential\",\r\n    rating: \"4.7\",\r\n    currentPrice: \"₹4,20,00,000\",\r\n    images: [DEFAULT_IMAGE],\r\n    bedrooms: 4,\r\n    bathrooms: 3\r\n  },\r\n  {\r\n    id: \"demo-2\",\r\n    title: \"3BHK City Apartment\",\r\n    description: \"Modern apartment with skyline views and great connectivity.\",\r\n    region: \"Gurugram, Haryana\",\r\n    amenities: [\"Gym\", \"24x7 Security\", \"Parking\"],\r\n    propertyType: \"Residential\",\r\n    rating: \"4.5\",\r\n    currentPrice: \"₹1,20,00,000\",\r\n    images: [DEFAULT_IMAGE],\r\n    bedrooms: 3,\r\n    bathrooms: 2\r\n  },\r\n  {\r\n    id: \"demo-3\",\r\n    title: \"Premium Office Space\",\r\n    description: \"Grade-A office floor in prime business district.\",\r\n    region: \"BKC, Mumbai\",\r\n    amenities: [\"Power Backup\", \"Valet\", \"Conference Rooms\"],\r\n    propertyType: \"Commercial\",\r\n    rating: \"4.6\",\r\n    currentPrice: \"₹9,50,00,000\",\r\n    images: [DEFAULT_IMAGE]\r\n  },\r\n  {\r\n    id: \"demo-4\",\r\n    title: \"2BHK Cozy Home\",\r\n    description: \"Comfortable home near metro and parks.\",\r\n    region: \"Pune, Maharashtra\",\r\n    amenities: [\"Club House\", \"Kids Play Area\"],\r\n    propertyType: \"Residential\",\r\n    rating: \"4.3\",\r\n    currentPrice: \"₹85,00,000\",\r\n    images: [DEFAULT_IMAGE],\r\n    bedrooms: 2,\r\n    bathrooms: 2\r\n  },\r\n  {\r\n    id: \"demo-5\",\r\n    title: \"Industrial Warehouse\",\r\n    description: \"High-clearance warehouse with loading bays.\",\r\n    region: \"Sriperumbudur, Tamil Nadu\",\r\n    amenities: [\"24x7 Security\", \"Dock Levelers\"],\r\n    propertyType: \"Industrial\",\r\n    rating: \"4.2\",\r\n    currentPrice: \"₹5,10,00,000\",\r\n    images: [DEFAULT_IMAGE]\r\n  },\r\n  {\r\n    id: \"demo-6\",\r\n    title: \"Lakeview Plot\",\r\n    description: \"Scenic residential plot with clear title.\",\r\n    region: \"Udaipur, Rajasthan\",\r\n    amenities: [\"Gated Community\"],\r\n    propertyType: \"Land\",\r\n    rating: \"4.4\",\r\n    currentPrice: \"₹60,00,000\",\r\n    images: [DEFAULT_IMAGE]\r\n  }\r\n];\r\n\r\nconst PropertiesManagement = () => {\r\n  const [items, setItems] = useState([]);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n  const [form, setForm] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n    propertyDescription: \"\",\r\n    region: \"\",\r\n    address: \"\",\r\n    city: \"Agra\",\r\n    price: \"\",\r\n    priceUnit: \"INR\",\r\n    propertySize: \"\",\r\n    propertyType: \"Residential\",\r\n    subType: \"Apartment\"\r\n  });\r\n  const [amenityInput, setAmenityInput] = useState(\"\");\r\n  const [amenities, setAmenities] = useState([]);\r\n  const [nearbyAmenityInput, setNearbyAmenityInput] = useState(\"\");\r\n  const [nearbyAmenities, setNearbyAmenities] = useState([]);\r\n  const [featureInput, setFeatureInput] = useState(\"\");\r\n  const [features, setFeatures] = useState([]);\r\n  const [locationBenefitInput, setLocationBenefitInput] = useState(\"\");\r\n  const [locationBenefits, setLocationBenefits] = useState([]);\r\n  const [imageInput, setImageInput] = useState(\"\");\r\n  const [images, setImages] = useState([]);\r\n  const [videoInput, setVideoInput] = useState(\"\");\r\n  const [videos, setVideos] = useState([]);\r\n  const [coordinates, setCoordinates] = useState({ lat: \"\", lng: \"\" });\r\n  const [bedrooms, setBedrooms] = useState(\"\");\r\n  const [bathrooms, setBathrooms] = useState(\"\");\r\n  const [furnishing, setFurnishing] = useState(\"Furnished\");\r\n  const [status, setStatus] = useState(\"Pending Approval\");\r\n  const [isFeatured, setIsFeatured] = useState(false);\r\n  const [notes, setNotes] = useState(\"\");\r\n  const [brokerId, setBrokerId] = useState(\"\");\r\n  const [allProperties, setAllProperties] = useState([]); // Store all properties for pagination\r\n  \r\n  // Debug flag - set to true to temporarily disable broker filtering\r\n  const DEBUG_DISABLE_BROKER_FILTER = false;\r\n  \r\n  // Function to extract broker ID from JWT token\r\n  const getCurrentUserIdFromToken = (token) => {\r\n    try {\r\n      const payload = JSON.parse(atob(token.split('.')[1]));\r\n      // Try different possible field names for broker ID\r\n      return payload.brokerId || payload.userId || payload.id || payload.sub;\r\n    } catch (error) {\r\n      console.error('Error decoding token:', error);\r\n      return null;\r\n    }\r\n  };\r\n  \r\n  // Pagination state\r\n  const [pagination, setPagination] = useState({\r\n    total: 0,\r\n    page: 1,\r\n    limit: 9,\r\n    totalPages: 0,\r\n    hasNextPage: false,\r\n    hasPrevPage: false\r\n  });\r\n\r\n  // Fetch properties from API\r\n  const fetchProperties = useCallback(async (page = 1, limit = 9) => {\r\n    try {\r\n      setLoading(true);\r\n      setError('');\r\n      \r\n      const token = typeof window !== 'undefined' \r\n        ? localStorage.getItem('token') || localStorage.getItem('authToken')\r\n        : null;\r\n      \r\n      if (!token) {\r\n        setError('Please login to view properties');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n      \r\n      // Extract broker ID from token\r\n      const currentBrokerId = getCurrentUserIdFromToken(token);\r\n      console.log('Extracted broker ID from token:', currentBrokerId);\r\n      if (!currentBrokerId) {\r\n        console.error('Failed to extract broker ID from token');\r\n        setError('Failed to extract broker ID from token. Please re-login.');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n      \r\n      // Use the broker ID from state if available, otherwise use the extracted one\r\n      const brokerIdToUse = brokerId || currentBrokerId;\r\n      console.log('Using broker ID:', brokerIdToUse);\r\n      \r\n      const apiUrl = process.env.NEXT_PUBLIC_API_URL || '';\r\n      \r\n      const headers = {\r\n        'Content-Type': 'application/json',\r\n        ...(token ? { 'Authorization': `Bearer ${token}` } : {})\r\n      };\r\n\r\n      // Use broker endpoint to get broker's properties\r\n      const apiUrlWithParams = DEBUG_DISABLE_BROKER_FILTER \r\n        ? `${apiUrl}/properties?page=${page}&limit=${limit}`\r\n        : `${apiUrl}/brokers/${brokerIdToUse}`;\r\n      console.log('API URL with broker filter:', apiUrlWithParams);\r\n      console.log('Debug mode (no broker filter):', DEBUG_DISABLE_BROKER_FILTER);\r\n      \r\n      const response = await fetch(apiUrlWithParams, {\r\n        method: 'GET',\r\n        headers\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        console.log('API Response data:', data);\r\n        \r\n        // Handle broker endpoint response structure\r\n        let properties = [];\r\n        let paginationData = {\r\n          total: 0,\r\n          page: 1,\r\n          limit: 10,\r\n          totalPages: 0,\r\n          hasNextPage: false,\r\n          hasPrevPage: false\r\n        };\r\n\r\n        if (DEBUG_DISABLE_BROKER_FILTER) {\r\n          // Handle properties endpoint response\r\n          if (data.pagination) {\r\n            paginationData = {\r\n              total: data.pagination.total || 0,\r\n              page: data.pagination.page || 1,\r\n              limit: data.pagination.limit || 10,\r\n              totalPages: data.pagination.totalPages || 0,\r\n              hasNextPage: data.pagination.hasNextPage || false,\r\n              hasPrevPage: data.pagination.hasPrevPage || false\r\n            };\r\n          }\r\n          \r\n          // Handle different response structures for properties endpoint\r\n          if (Array.isArray(data?.data?.items)) {\r\n            properties = data.data.items;\r\n          } else if (Array.isArray(data?.data?.properties)) {\r\n            properties = data.data.properties;\r\n          } else if (Array.isArray(data?.data)) {\r\n            properties = data.data;\r\n          } else if (Array.isArray(data?.properties)) {\r\n            properties = data.properties;\r\n          } else if (Array.isArray(data)) {\r\n            properties = data;\r\n          }\r\n        } else {\r\n          // Handle broker endpoint response\r\n          if (data?.data?.broker) {\r\n            const broker = data.data.broker;\r\n            const brokerProperties = broker.properties || broker.propertiesListed?.items || [];\r\n            \r\n            // Store all properties for pagination\r\n            setAllProperties(brokerProperties);\r\n            \r\n            // Implement client-side pagination\r\n            const totalProperties = broker.propertyCount || brokerProperties.length;\r\n            const totalPages = Math.ceil(totalProperties / limit);\r\n            const startIndex = (page - 1) * limit;\r\n            const endIndex = startIndex + limit;\r\n            \r\n            // Get properties for current page\r\n            properties = brokerProperties.slice(startIndex, endIndex);\r\n            \r\n            // Set pagination data\r\n            paginationData = {\r\n              total: totalProperties,\r\n              page: page,\r\n              limit: limit,\r\n              totalPages: totalPages,\r\n              hasNextPage: page < totalPages,\r\n              hasPrevPage: page > 1\r\n            };\r\n          }\r\n        }\r\n\r\n        setPagination(paginationData);\r\n\r\n        // Map API response to expected format\r\n        const mappedProperties = properties.map((property) => ({\r\n          id: property._id || property.id || `api-${Date.now()}-${Math.random()}`,\r\n          title: property.title || property.name || 'Untitled Property',\r\n          description: property.description || property.propertyDescription || '',\r\n          propertyDescription: property.propertyDescription || property.description || '',\r\n          region: property.region || property.city || '',\r\n          address: property.address || '',\r\n          city: property.city || '',\r\n          price: property.price || 0,\r\n          priceUnit: property.priceUnit || 'INR',\r\n          propertySize: property.propertySize || property.areaSqft || property.area || undefined,\r\n          coordinates: property.coordinates || { lat: '', lng: '' },\r\n          bedrooms: property.bedrooms || undefined,\r\n          bathrooms: property.bathrooms || undefined,\r\n          furnishing: property.furnishing || 'Furnished',\r\n          amenities: Array.isArray(property.amenities) ? property.amenities : [],\r\n          nearbyAmenities: Array.isArray(property.nearbyAmenities) ? property.nearbyAmenities : [],\r\n          features: Array.isArray(property.features) ? property.features : [],\r\n          locationBenefits: Array.isArray(property.locationBenefits) ? property.locationBenefits : [],\r\n          images: Array.isArray(property.images) && property.images.length > 0 ? property.images : [DEFAULT_IMAGE],\r\n          videos: Array.isArray(property.videos) ? property.videos : [],\r\n          propertyType: property.propertyType || property.type || 'Residential',\r\n          subType: property.subType || 'Apartment',\r\n          status: property.status || 'Active',\r\n          isFeatured: property.isFeatured || false,\r\n          notes: property.notes || '',\r\n          broker: brokerIdToUse, // Use the current broker ID\r\n          rating: property.rating || '4.7',\r\n          currentPrice: property.price ? new Intl.NumberFormat('en-IN', { \r\n            style: 'currency', \r\n            currency: 'INR', \r\n            maximumFractionDigits: 0 \r\n          }).format(property.price) : '-'\r\n        }));\r\n\r\n        // Since we're using the broker endpoint, all properties should belong to the current broker\r\n        let finalProperties = mappedProperties;\r\n        \r\n        if (DEBUG_DISABLE_BROKER_FILTER) {\r\n          console.log('Debug mode: Showing all properties without broker filtering');\r\n        } else {\r\n          console.log('Using broker endpoint - all properties belong to current broker');\r\n        }\r\n\r\n        setItems(finalProperties);\r\n        console.log(`Found ${finalProperties.length} properties for broker ID: ${brokerIdToUse}`);\r\n        console.log('Properties data:', finalProperties);\r\n      } else {\r\n        const errorData = await response.json().catch(() => ({}));\r\n        setError(errorData.message || 'Failed to fetch properties');\r\n        // Don't show demo data - only show broker-specific properties\r\n        setItems([]);\r\n      }\r\n    } catch (err) {\r\n      console.error('Error fetching properties:', err);\r\n      setError('Error loading properties');\r\n      // Don't show demo data - only show broker-specific properties\r\n      setItems([]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  // Create new property via API\r\n  const createProperty = async (propertyData) => {\r\n    try {\r\n      setSubmitting(true);\r\n      \r\n      const token = typeof window !== 'undefined' \r\n        ? localStorage.getItem('token') || localStorage.getItem('authToken')\r\n        : null;\r\n      \r\n      const apiUrl = process.env.NEXT_PUBLIC_API_URL || '';\r\n      \r\n      const headers = {\r\n        'Content-Type': 'application/json',\r\n        ...(token ? { 'Authorization': `Bearer ${token}` } : {})\r\n      };\r\n\r\n      const response = await fetch(`${apiUrl}/properties`, {\r\n        method: 'POST',\r\n        headers,\r\n        body: JSON.stringify(propertyData)\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        console.log('Property created successfully:', data);\r\n        // Refresh the properties list\r\n        await fetchProperties(pagination.page, pagination.limit);\r\n        return { success: true, data };\r\n      } else {\r\n        const errorData = await response.json().catch(() => ({}));\r\n        throw new Error(errorData.message || 'Failed to create property');\r\n      }\r\n    } catch (err) {\r\n      console.error('Error creating property:', err);\r\n      throw err;\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  // Pagination functions\r\n  const handlePageChange = (newPage) => {\r\n    if (newPage >= 1 && newPage <= pagination.totalPages && brokerId) {\r\n      // For broker endpoint, use client-side pagination\r\n      if (!DEBUG_DISABLE_BROKER_FILTER && allProperties.length > 0) {\r\n        const startIndex = (newPage - 1) * pagination.limit;\r\n        const endIndex = startIndex + pagination.limit;\r\n        const pageProperties = allProperties.slice(startIndex, endIndex);\r\n        \r\n        // Map properties for display\r\n        const mappedProperties = pageProperties.map((property) => ({\r\n          id: property._id || property.id || `api-${Date.now()}-${Math.random()}`,\r\n          title: property.title || property.name || 'Untitled Property',\r\n          description: property.description || property.propertyDescription || '',\r\n          propertyDescription: property.propertyDescription || property.description || '',\r\n          region: property.region || property.city || '',\r\n          address: property.address || '',\r\n          city: property.city || '',\r\n          price: property.price || 0,\r\n          priceUnit: property.priceUnit || 'INR',\r\n          propertySize: property.propertySize || property.areaSqft || property.area || undefined,\r\n          coordinates: property.coordinates || { lat: '', lng: '' },\r\n          bedrooms: property.bedrooms || undefined,\r\n          bathrooms: property.bathrooms || undefined,\r\n          furnishing: property.furnishing || 'Furnished',\r\n          amenities: Array.isArray(property.amenities) ? property.amenities : [],\r\n          nearbyAmenities: Array.isArray(property.nearbyAmenities) ? property.nearbyAmenities : [],\r\n          features: Array.isArray(property.features) ? property.features : [],\r\n          locationBenefits: Array.isArray(property.locationBenefits) ? property.locationBenefits : [],\r\n          images: Array.isArray(property.images) && property.images.length > 0 ? property.images : [DEFAULT_IMAGE],\r\n          videos: Array.isArray(property.videos) ? property.videos : [],\r\n          propertyType: property.propertyType || property.type || 'Residential',\r\n          subType: property.subType || 'Apartment',\r\n          status: property.status || 'Active',\r\n          isFeatured: property.isFeatured || false,\r\n          notes: property.notes || '',\r\n          broker: brokerId,\r\n          rating: property.rating || '4.7',\r\n          currentPrice: property.price ? new Intl.NumberFormat('en-IN', { \r\n            style: 'currency', \r\n            currency: 'INR', \r\n            maximumFractionDigits: 0 \r\n          }).format(property.price) : '-'\r\n        }));\r\n        \r\n        setItems(mappedProperties);\r\n        \r\n        // Update pagination state\r\n        setPagination(prev => ({\r\n          ...prev,\r\n          page: newPage,\r\n          hasNextPage: newPage < prev.totalPages,\r\n          hasPrevPage: newPage > 1\r\n        }));\r\n      } else {\r\n        fetchProperties(newPage, pagination.limit);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleLimitChange = (newLimit) => {\r\n    if (brokerId) {\r\n      fetchProperties(1, newLimit);\r\n    }\r\n  };\r\n\r\n  // Set broker ID from token on component mount\r\n  useEffect(() => {\r\n    const token = typeof window !== 'undefined' \r\n      ? localStorage.getItem('token') || localStorage.getItem('authToken')\r\n      : null;\r\n    \r\n    console.log('Token found:', !!token);\r\n    if (token) {\r\n      console.log('Token:', token.substring(0, 50) + '...');\r\n      const currentBrokerId = getCurrentUserIdFromToken(token);\r\n      console.log('Extracted broker ID in useEffect:', currentBrokerId);\r\n      if (currentBrokerId) {\r\n        setBrokerId(currentBrokerId);\r\n        console.log('Set broker ID state to:', currentBrokerId);\r\n      } else {\r\n        console.error('Failed to extract broker ID from token');\r\n      }\r\n    } else {\r\n      console.error('No token found in localStorage');\r\n    }\r\n  }, []);\r\n\r\n  // Load properties on component mount\r\n  useEffect(() => {\r\n    console.log('useEffect triggered - brokerId:', brokerId);\r\n    // Only fetch properties if we have a broker ID\r\n    if (brokerId) {\r\n      console.log('Fetching properties for broker ID:', brokerId);\r\n      fetchProperties(pagination.page, pagination.limit);\r\n    } else {\r\n      console.log('No broker ID, not fetching properties');\r\n    }\r\n  }, [fetchProperties, brokerId]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setForm(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleAdd = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    try {\r\n      const propertyData = {\r\n        title: form.title || \"Untitled Property\",\r\n        description: form.description,\r\n        propertyDescription: form.propertyDescription,\r\n        region: form.region,\r\n        address: form.address,\r\n        city: form.city,\r\n        price: form.price ? Number(form.price) : undefined,\r\n        priceUnit: form.priceUnit,\r\n        propertySize: form.propertySize ? Number(form.propertySize) : undefined,\r\n        coordinates: {\r\n          lat: coordinates.lat ? Number(coordinates.lat) : undefined,\r\n          lng: coordinates.lng ? Number(coordinates.lng) : undefined\r\n        },\r\n        bedrooms: bedrooms ? Number(bedrooms) : undefined,\r\n        bathrooms: bathrooms ? Number(bathrooms) : undefined,\r\n        furnishing,\r\n        amenities,\r\n        nearbyAmenities,\r\n        features,\r\n        locationBenefits,\r\n        images: images.length ? images : [DEFAULT_IMAGE],\r\n        videos,\r\n        propertyType: form.propertyType || \"Residential\",\r\n        subType: form.subType,\r\n        status,\r\n        isFeatured,\r\n        notes,\r\n        broker: brokerId || undefined\r\n      };\r\n\r\n      await createProperty(propertyData);\r\n      \r\n      // Show success message\r\n      setSuccessMessage('Property created successfully!');\r\n      setTimeout(() => setSuccessMessage(''), 3000);\r\n      \r\n      // Reset form after successful creation\r\n      setForm({ title: \"\", description: \"\", propertyDescription: \"\", region: \"\", address: \"\", city: \"Agra\", price: \"\", priceUnit: \"INR\", propertySize: \"\", propertyType: \"Residential\", subType: \"Apartment\" });\r\n      setAmenities([]);\r\n      setAmenityInput(\"\");\r\n      setNearbyAmenities([]);\r\n      setNearbyAmenityInput(\"\");\r\n      setFeatures([]);\r\n      setFeatureInput(\"\");\r\n      setLocationBenefits([]);\r\n      setLocationBenefitInput(\"\");\r\n      setImages([]);\r\n      setImageInput(\"\");\r\n      setVideos([]);\r\n      setVideoInput(\"\");\r\n      setCoordinates({ lat: \"\", lng: \"\" });\r\n      setBedrooms(\"\");\r\n      setBathrooms(\"\");\r\n      setFurnishing(\"Furnished\");\r\n      setStatus(\"Pending Approval\");\r\n      setIsFeatured(false);\r\n      setNotes(\"\");\r\n      setBrokerId(\"\");\r\n      setIsModalOpen(false);\r\n      \r\n    } catch (err) {\r\n      console.error('Error creating property:', err);\r\n      setError(err.message || 'Failed to create property');\r\n    }\r\n  };\r\n\r\n  const addAmenity = () => {\r\n    const value = amenityInput.trim();\r\n    if (!value) return;\r\n    if (amenities.includes(value)) {\r\n      setAmenityInput(\"\");\r\n      return;\r\n    }\r\n    setAmenities(prev => [...prev, value]);\r\n    setAmenityInput(\"\");\r\n  };\r\n\r\n  const removeAmenity = (value) => {\r\n    setAmenities(prev => prev.filter(a => a !== value));\r\n  };\r\n\r\n  const addTag = (value, listSetter, list, clear) => {\r\n    const v = value.trim();\r\n    if (!v) return;\r\n    if (list.includes(v)) { clear(\"\"); return; }\r\n    listSetter([...list, v]);\r\n    clear(\"\");\r\n  };\r\n\r\n  return (\r\n    <ProtectedRoute>\r\n            <HeaderFile data={{ title: 'Dashboard', breadcrumb: [{ label: 'Home', href: '/' }, { label: 'Property', href: '/properties-management' }] }} />\r\n      \r\n      <div className=\" mx-auto  py-8\">\r\n        <div className=\"flex items-center justify-between mb-6\">\r\n          <div>\r\n            <h1 className=\"text-2xl font-semibold text-gray-900\">Properties Management</h1>\r\n            <p className=\"text-gray-600 text-sm\">Manage your properties and add new ones.</p>\r\n            {error && (\r\n              <div className=\"mt-2 p-3 bg-red-50 border border-red-200 rounded-lg\">\r\n                <p className=\"text-sm text-red-600\">{error}</p>\r\n                <button \r\n                  onClick={() => setError('')} \r\n                  className=\"mt-1 text-xs text-red-500 hover:text-red-700\"\r\n                >\r\n                  Dismiss\r\n                </button>\r\n              </div>\r\n            )}\r\n            {successMessage && (\r\n              <div className=\"mt-2 p-3 bg-green-50 border border-green-200 rounded-lg\">\r\n                <p className=\"text-sm text-green-600\">{successMessage}</p>\r\n                <button \r\n                  onClick={() => setSuccessMessage('')} \r\n                  className=\"mt-1 text-xs text-green-500 hover:text-green-700\"\r\n                >\r\n                  Dismiss\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className=\"flex items-center gap-3\">\r\n            <button\r\n              onClick={() => brokerId && fetchProperties(pagination.page, pagination.limit)}\r\n              disabled={loading || !brokerId}\r\n              className=\"inline-flex items-center gap-2 bg-gray-100 hover:bg-gray-200 text-gray-700 text-sm font-medium px-4 py-2 rounded-lg shadow-sm disabled:opacity-50 disabled:cursor-not-allowed\"\r\n            >\r\n              <svg className={`w-4 h-4 ${loading ? 'animate-spin' : ''}`} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\r\n              </svg>\r\n              {loading ? 'Loading...' : 'Refresh'}\r\n            </button>\r\n            <Link\r\n              href=\"/properties-management/new\"\r\n              className=\"inline-flex items-center gap-2 bg-green-900 hover:bg-green-900 text-white text-sm font-medium px-4 py-2 rounded-lg shadow-sm\"\r\n            >\r\n              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4v16m8-8H4\" />\r\n              </svg>\r\n              Add Property\r\n            </Link>\r\n          </div>\r\n        </div>\r\n\r\n        {(() => {\r\n          console.log('Render state - loading:', loading, 'brokerId:', brokerId, 'items.length:', items.length, 'pagination.total:', pagination.total);\r\n          return null;\r\n        })()}\r\n        \r\n        {loading ? (\r\n          <div className=\"flex items-center justify-center py-12\">\r\n            <div className=\"flex items-center gap-3\">\r\n              <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-green-600\"></div>\r\n              <span className=\"text-gray-600\">Loading properties...</span>\r\n            </div>\r\n          </div>\r\n        ) : !brokerId ? (\r\n          <div className=\"flex items-center justify-center py-12\">\r\n            <div className=\"text-center\">\r\n              <div className=\"text-gray-500 text-lg mb-2\">No broker ID found</div>\r\n              <div className=\"text-gray-400 text-sm\">Please login again to view your properties</div>\r\n            </div>\r\n          </div>\r\n        ) : items.length === 0 && pagination.total === 0 ? (\r\n          <div className=\"flex items-center justify-center py-12\">\r\n            <div className=\"text-center\">\r\n              <div className=\"text-gray-500 text-lg mb-2\">No properties found</div>\r\n              <div className=\"text-gray-400 text-sm\">You haven't created any properties yet</div>\r\n              <Link\r\n                href=\"/properties-management/new\"\r\n                className=\"inline-block mt-4 px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors\"\r\n              >\r\n                Create Your First Property\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        ) : items.length === 0 && pagination.total > 0 ? (\r\n          <div className=\"flex items-center justify-center py-12\">\r\n            <div className=\"text-center\">\r\n              <div className=\"text-gray-500 text-lg mb-2\">Loading properties...</div>\r\n              <div className=\"text-gray-400 text-sm\">Please wait while we load your properties</div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"flex flex-col lg:flex-row gap-6\">\r\n            {/* Left column - 9/12 width for property cards */}\r\n            <div className=\"w-full lg:w-9/12\">\r\n              <div className=\"space-y-6\">\r\n                {items.map((property) => (\r\n                <Link key={property.id} href={`/property-details/${property.id}`} className=\"block\">\r\n                  <div className=\"bg-white border border-gray-200 rounded-xl shadow-sm hover:shadow-md transition-shadow\">\r\n                    <div className=\"flex\">\r\n                      {/* Image Section - Left */}\r\n                      <div className=\"relative w-[400px] h-[300px] flex-shrink-0\">\r\n                        {/* Image carousel */}\r\n                        <div className=\"relative w-full h-full overflow-hidden rounded-l-xl\">\r\n                          <div className=\"absolute inset-0 transition-opacity duration-700 ease-in-out opacity-100\">\r\n                            <img src={(property.images && property.images[0]) || DEFAULT_IMAGE} alt={property.title} className=\"block w-full h-full object-cover\" />\r\n                          </div>\r\n                        </div>\r\n                        {/* Tag overlay - top-left */}\r\n                        <div className=\"absolute top-4 left-4\">\r\n                          <span className=\"bg-[#0A421E] text-white px-3 py-1 rounded-full text-xs font-medium\">\r\n                            {property.propertyType}\r\n                          </span>\r\n                        </div>\r\n                        {/* Rating - top-right */}\r\n                        <div className=\"absolute top-4 right-4 flex items-center bg-white/90 backdrop-blur rounded-full px-2 py-1 shadow-sm\">\r\n                          <svg className=\"w-4 h-4 text-yellow-400 mr-1\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                            <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\r\n                          </svg>\r\n                          <span className=\"text-xs font-medium text-gray-700\">{property.rating || '4.7'}</span>\r\n                        </div>\r\n                        {/* Price pill bottom-left */}\r\n                        <div className=\"absolute bottom-4 left-4 z-10\">\r\n                          <span className=\"px-3 py-1 rounded-full text-sm font-semibold\"\r\n                            style={{\r\n                              backgroundColor: '#FDC700'\r\n                            }}\r\n                          >\r\n                            {property.currentPrice !== '-' ? property.currentPrice : 'Price on Request'}\r\n                          </span>\r\n                        </div>\r\n                        {/* Share icon bottom-right */}\r\n                        <button aria-label=\"Share\" className=\"absolute bottom-4 right-4 w-10 h-10 rounded-full bg-white shadow-md flex items-center justify-center text-gray-500 hover:text-gray-700 z-10 cursor-pointer\">\r\n                          <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.367 2.684 3 3 0 00-5.367-2.684z\" />\r\n                          </svg>\r\n                        </button>\r\n                      </div>\r\n                      \r\n                      {/* Details Section - Right */}\r\n                      <div className=\"flex-1 p-6 flex flex-col\">\r\n                        {/* Title */}\r\n                        <h3 className=\"mb-2 flex items-center gap-2\" style={{  fontSize: '14px', lineHeight: '20px', fontWeight: '600', color: '#171A1FFF' }}>\r\n                          {property.title}\r\n                          <svg className=\"w-3.5 h-3.5 text-[#0A421E]\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" strokeWidth=\"2.5\" strokeLinecap=\"round\">\r\n                            <path d=\"M7 17l10-10M7 7h10v10\" />\r\n                          </svg>\r\n                        </h3>\r\n                        \r\n                        {/* Description */}\r\n                        <p className=\"mb-4\" style={{ fontFamily: 'Inter', fontSize: '12px', lineHeight: '16px', fontWeight: '400', color: '#565D6DFF', width: '418px' }}>\r\n                          {property.description || `A spacious and well-lit property in a prime location, perfect for families. Enjoy modern amenities and easy access to city facilities.`}\r\n                        </p>\r\n                        \r\n                        {/* Location Details */}\r\n                        <div className=\"flex flex-col gap-2 mb-4\">\r\n                          <div className=\"flex items-center text-xs text-gray-600\">\r\n                            <svg className=\"w-4 h-4 mr-1 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4\" />\r\n                            </svg>\r\n                            {property.city || 'City'}\r\n                          </div>\r\n                          <div className=\"flex items-center text-xs text-gray-600\">\r\n                            <svg className=\"w-4 h-4 mr-1 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 22s-7-4.5-7-12a7 7 0 1114 0c0 7.5-7 12-7 12z\" />\r\n                              <circle cx=\"12\" cy=\"10\" r=\"3\" strokeWidth=\"2\" />\r\n                            </svg>\r\n                            {property.region || 'Location'}\r\n                          </div>\r\n                        </div>\r\n\r\n                        {/* Features */}\r\n                        <div className=\"mb-3\">\r\n                          <div className=\"text-xs font-semibold text-gray-900 mb-2\">Features</div>\r\n                          <div className=\"flex flex-wrap gap-2\">\r\n                            {property.bedrooms && property.bedrooms > 0 && (\r\n                              <span className=\"inline-flex items-center gap-1 px-2.5 py-1\" style={{ background: '#EDFDF4FF', borderRadius: '9999px', borderWidth: '1px', borderColor: '#00000000', borderStyle: 'solid' }}>\r\n                                <svg className=\"w-4 h-4\" style={{ color: '#19191FFF' }} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" strokeWidth=\"2\">\r\n                                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M3 12h18M3 12l-1 8a2 2 0 002 2h16a2 2 0 002-2l-1-8M3 12V9a2 2 0 012-2h5m0 0h6a2 2 0 012 2v3m0 0v3a2 2 0 01-2 2h-6v0M9 21h6\" />\r\n                                </svg>\r\n                                <span style={{ fontFamily: 'Inter', fontSize: '12px', lineHeight: '16px', fontWeight: '600', color: '#19191FFF' }}>{property.bedrooms} bd</span>\r\n                              </span>\r\n                            )}\r\n                            {property.bathrooms && property.bathrooms > 0 && (\r\n                              <span className=\"inline-flex items-center gap-1 px-2.5 py-1\" style={{ background: '#EDFDF4FF', borderRadius: '9999px', borderWidth: '1px', borderColor: '#00000000', borderStyle: 'solid' }}>\r\n                                <svg className=\"w-4 h-4\" style={{ color: '#19191FFF' }} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" strokeWidth=\"2\">\r\n                                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M8 7V5a2 2 0 012-2h4a2 2 0 012 2v2m0 0h4a2 2 0 012 2v8a2 2 0 01-2 2H6a2 2 0 01-2-2V9a2 2 0 012-2h8zm0 0v4\" />\r\n                                </svg>\r\n                                <span style={{ fontFamily: 'Inter', fontSize: '12px', lineHeight: '16px', fontWeight: '600', color: '#19191FFF' }}>{property.bathrooms} bt</span>\r\n                              </span>\r\n                            )}\r\n                            {property.propertySize && property.propertySize > 0 && (\r\n                              <span className=\"inline-flex items-center gap-1 px-2.5 py-1\" style={{ background: '#EDFDF4FF', borderRadius: '9999px', borderWidth: '1px', borderColor: '#00000000', borderStyle: 'solid' }}>\r\n                                <svg className=\"w-4 h-4\" style={{ color: '#19191FFF' }} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" strokeWidth=\"2\">\r\n                                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M4 8V4m0 0h4M4 4l5 5m11-1V4m0 0h-4m4 0l-5 5M4 16v4m0 0h4m-4 0l5-5m11 5l-5-5m5 5v-4m0 4h-4\" />\r\n                                </svg>\r\n                                <span style={{ fontFamily: 'Inter', fontSize: '12px', lineHeight: '16px', fontWeight: '600', color: '#19191FFF' }}>{property.propertySize} sqft</span>\r\n                              </span>\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n\r\n                        {/* Amenities */}\r\n                        <div className=\"mt-auto\">\r\n                          <div className=\"text-xs font-semibold text-gray-900 mb-2\">Amenities</div>\r\n                          <div className=\"flex flex-wrap gap-2 text-[11px]\">\r\n                            {(Array.isArray(property.amenities) && property.amenities.length > 0 ? property.amenities : ['Gym', 'Parking', 'Security']).map((amenity, idx) => (\r\n                              <span\r\n                                key={idx}\r\n                                className=\"inline-flex items-center px-2 py-1 rounded-full bg-gray-100 text-gray-700 border border-gray-200\"\r\n                              >\r\n                                {amenity}\r\n                              </span>\r\n                            ))}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </Link>\r\n              ))}\r\n              </div>\r\n              \r\n              {/* Pagination Component */}\r\n              {!loading && pagination.total > 0 && (\r\n                <div className=\"mt-8 flex flex-col sm:flex-row items-center justify-between gap-4\">\r\n                  {/* Pagination Info */}\r\n                  <div className=\"text-sm text-gray-600\">\r\n                    Showing {((pagination.page - 1) * pagination.limit) + 1} to {Math.min(pagination.page * pagination.limit, pagination.total)} of {pagination.total} properties\r\n                  </div>\r\n\r\n                  {/* Pagination Controls - match broker/lead detail style */}\r\n                  <div className=\"flex items-center gap-2\">\r\n                    {/* Previous */}\r\n                    <button\r\n                      onClick={() => handlePageChange(pagination.page - 1)}\r\n                      disabled={!pagination.hasPrevPage}\r\n                      className=\"w-8 h-8 flex items-center justify-center rounded-[8px] border border-gray-300 text-gray-600 hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                      aria-label=\"Previous page\"\r\n                    >\r\n                      <svg className=\"w-4 h-4\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\"><path d=\"M15 18l-6-6 6-6\"/></svg>\r\n                    </button>\r\n\r\n                    {/* Page Numbers */}\r\n                    <div className=\"flex items-center\">\r\n                      {Array.from({ length: Math.min(5, pagination.totalPages) }, (_, i) => {\r\n                        let pageNum;\r\n                        if (pagination.totalPages <= 5) {\r\n                          pageNum = i + 1;\r\n                        } else if (pagination.page <= 3) {\r\n                          pageNum = i + 1;\r\n                        } else if (pagination.page >= pagination.totalPages - 2) {\r\n                          pageNum = pagination.totalPages - 4 + i;\r\n                        } else {\r\n                          pageNum = pagination.page - 2 + i;\r\n                        }\r\n                        return (\r\n                          <button\r\n                            key={pageNum}\r\n                            onClick={() => handlePageChange(pageNum)}\r\n                            className={`w-8 h-8 flex items-center justify-center rounded-[8px] mx-1 text-[12px] ${\r\n                              pagination.page === pageNum\r\n                                ? 'bg-green-900 text-white'\r\n                                : 'border border-gray-300 text-gray-700 hover:bg-gray-50'\r\n                            }`}\r\n                          >\r\n                            {pageNum}\r\n                          </button>\r\n                        );\r\n                      })}\r\n                    </div>\r\n\r\n                    {/* Next */}\r\n                    <button\r\n                      onClick={() => handlePageChange(pagination.page + 1)}\r\n                      disabled={!pagination.hasNextPage}\r\n                      className=\"w-8 h-8 flex items-center justify-center rounded-[8px] border border-gray-300 text-gray-600 hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                      aria-label=\"Next page\"\r\n                    >\r\n                      <svg className=\"w-4 h-4\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\"><path d=\"M9 18l6-6-6-6\"/></svg>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n            \r\n            {/* Right column - 3/12 width - match lead details right cards style */}\r\n            <div className=\"w-full lg:w-3/12\">\r\n             \r\n\r\n              {/* Tips - now below quick actions */}\r\n              <div className=\"bg-green-50 rounded-[10px] shadow-[0_0_1px_#171a1f12,0_0_2px_#171a1f1F] border border-gray-200 p-5\">\r\n                <h3 className=\"text-[14px] font-semibold text-gray-900 mb-3\">Property Management Tips</h3>\r\n                <div className=\"space-y-4\">\r\n                  <div className=\"flex items-start gap-3\">\r\n                    <div className=\"flex-shrink-0 w-7 h-7 bg-white rounded-full flex items-center justify-center\">\r\n                      <svg className=\"w-3.5 h-3.5 text-green-900\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n                      </svg>\r\n                    </div>\r\n                    <div>\r\n                      <h4 className=\"text-[13px] font-medium text-gray-800\">Add high-quality images</h4>\r\n                      <p className=\"text-[12px] text-gray-600 mt-1\">Properties with 5+ images get 70% more inquiries</p>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div className=\"flex items-start gap-3\">\r\n                    <div className=\"flex-shrink-0 w-7 h-7 bg-white rounded-full flex items-center justify-center\">\r\n                      <svg className=\"w-3.5 h-3.5 text-green-900\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\" />\r\n                      </svg>\r\n                    </div>\r\n                    <div>\r\n                      <h4 className=\"text-[13px] font-medium text-gray-800\">Complete all details</h4>\r\n                      <p className=\"text-[12px] text-gray-600 mt-1\">Properties with complete information get 40% more views</p>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div className=\"flex items-start gap-3\">\r\n                    <div className=\"flex-shrink-0 w-7 h-7 bg-white rounded-full flex items-center justify-center\">\r\n                      <svg className=\"w-3.5 h-3.5 text-green-900\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                      </svg>\r\n                    </div>\r\n                    <div>\r\n                      <h4 className=\"text-[13px] font-medium text-gray-800\">Respond quickly</h4>\r\n                      <p className=\"text-[12px] text-gray-600 mt-1\">Responding within 24 hours increases conversion by 50%</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        \r\n        {isModalOpen && (\r\n          <div className=\"fixed inset-0 z-50 bg-black/50 flex items-center justify-center p-4\">\r\n            <div className=\"bg-white rounded-2xl shadow-2xl w-full max-w-lg relative border border-gray-100\">\r\n              <button onClick={() => setIsModalOpen(false)} className=\"absolute top-4 right-4 text-gray-400 hover:text-gray-600\">\r\n                <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n                </svg>\r\n              </button>\r\n              <form onSubmit={handleAdd} className=\"p-6 space-y-4\">\r\n                <h2 className=\"text-xl font-semibold text-gray-900\">Add Property</h2>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Title</label>\r\n                  <input name=\"title\" value={form.title} onChange={handleChange} className=\"w-full border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-green-600\" placeholder=\"Property title\" />\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Description</label>\r\n                  <textarea name=\"description\" value={form.description} onChange={handleChange} rows={3} className=\"w-full border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-green-600\" placeholder=\"Short description\" />\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Region</label>\r\n                  <input name=\"region\" value={form.region} onChange={handleChange} className=\"w-full border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-green-600\" placeholder=\"City, State\" />\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Detailed Description</label>\r\n                  <textarea name=\"propertyDescription\" value={form.propertyDescription} onChange={handleChange} rows={4} className=\"w-full border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-green-600\" placeholder=\"Long description\" />\r\n                </div>\r\n                <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Address</label>\r\n                    <input name=\"address\" value={form.address} onChange={handleChange} className=\"w-full border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-green-600\" placeholder=\"Street address\" />\r\n                  </div>\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">City</label>\r\n                    <input name=\"city\" value={form.city} onChange={handleChange} className=\"w-full border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-green-600\" placeholder=\"City\" />\r\n                  </div>\r\n                </div>\r\n                <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Price</label>\r\n                    <input type=\"number\" name=\"price\" value={form.price} onChange={handleChange} className=\"w-full border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-green-600\" placeholder=\"e.g. 42000000\" />\r\n                  </div>\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Price Unit</label>\r\n                    <select name=\"priceUnit\" value={form.priceUnit} onChange={handleChange} className=\"w-full border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-green-600\">\r\n                      <option>INR</option>\r\n                      <option>USD</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n                <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-4\">\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Property Size (sqft)</label>\r\n                    <input type=\"number\" name=\"propertySize\" value={form.propertySize} onChange={handleChange} className=\"w-full border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-green-600\" />\r\n                  </div>\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Bedrooms</label>\r\n                    <input type=\"number\" value={bedrooms} onChange={(e)=>setBedrooms(e.target.value)} className=\"w-full border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-green-600\" />\r\n                  </div>\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Bathrooms</label>\r\n                    <input type=\"number\" value={bathrooms} onChange={(e)=>setBathrooms(e.target.value)} className=\"w-full border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-green-600\" />\r\n                  </div>\r\n                </div>\r\n                <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-4\">\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Property Type</label>\r\n                    <select name=\"propertyType\" value={form.propertyType} onChange={handleChange} className=\"w-full border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-green-600\">\r\n                      <option>Residential</option>\r\n                      <option>Commercial</option>\r\n                      <option>Industrial</option>\r\n                      <option>Land</option>\r\n                    </select>\r\n                  </div>\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Sub Type</label>\r\n                    <select name=\"subType\" value={form.subType} onChange={handleChange} className=\"w-full border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-green-600\">\r\n                      <option>Apartment</option>\r\n                      <option>Villa</option>\r\n                      <option>Office</option>\r\n                      <option>Shop</option>\r\n                      <option>Land</option>\r\n                      <option>Other</option>\r\n                    </select>\r\n                  </div>\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Furnishing</label>\r\n                    <select value={furnishing} onChange={(e)=>setFurnishing(e.target.value)} className=\"w-full border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-green-600\">\r\n                      <option>Furnished</option>\r\n                      <option>Semi-Furnished</option>\r\n                      <option>Unfurnished</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n                <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Latitude</label>\r\n                    <input type=\"number\" step=\"any\" value={coordinates.lat} onChange={(e)=>setCoordinates({ ...coordinates, lat: e.target.value })} className=\"w-full border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-green-600\" />\r\n                  </div>\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Longitude</label>\r\n                    <input type=\"number\" step=\"any\" value={coordinates.lng} onChange={(e)=>setCoordinates({ ...coordinates, lng: e.target.value })} className=\"w-full border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-green-600\" />\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Amenities</label>\r\n                  <div className=\"flex gap-2\">\r\n                    <input\r\n                      value={amenityInput}\r\n                      onChange={(e) => setAmenityInput(e.target.value)}\r\n                      onKeyDown={(e) => { if (e.key === 'Enter') { e.preventDefault(); addAmenity(); } }}\r\n                      className=\"flex-1 border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-green-600\"\r\n                      placeholder=\"Type amenity and press Add or Enter\"\r\n                    />\r\n                    <button type=\"button\" onClick={addAmenity} className=\"px-3 py-2 rounded-lg bg-green-700 text-white hover:bg-green-800\">Add</button>\r\n                  </div>\r\n                  {amenities.length > 0 && (\r\n                    <div className=\"mt-2 flex flex-wrap gap-2\">\r\n                      {amenities.map((a) => (\r\n                        <span key={a} className=\"inline-flex items-center gap-1 text-xs bg-gray-100 text-gray-700 px-2 py-1 rounded-full\">\r\n                          {a}\r\n                          <button type=\"button\" onClick={() => removeAmenity(a)} className=\"text-gray-500 hover:text-gray-700\">\r\n                            ×\r\n                          </button>\r\n                        </span>\r\n                      ))}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Nearby Amenities</label>\r\n                  <div className=\"flex gap-2\">\r\n                    <input value={nearbyAmenityInput} onChange={(e)=>setNearbyAmenityInput(e.target.value)} onKeyDown={(e)=>{ if (e.key==='Enter') { e.preventDefault(); addTag(nearbyAmenityInput, setNearbyAmenities, nearbyAmenities, setNearbyAmenityInput); } }} className=\"flex-1 border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-green-600\" placeholder=\"Add nearby amenity\" />\r\n                    <button type=\"button\" onClick={()=>addTag(nearbyAmenityInput, setNearbyAmenities, nearbyAmenities, setNearbyAmenityInput)} className=\"px-3 py-2 rounded-lg bg-green-700 text-white hover:bg-green-800\">Add</button>\r\n                  </div>\r\n                  {nearbyAmenities.length>0 && (\r\n                    <div className=\"mt-2 flex flex-wrap gap-2\">\r\n                      {nearbyAmenities.map((a)=> (\r\n                        <span key={a} className=\"inline-flex items-center gap-1 text-xs bg-gray-100 text-gray-700 px-2 py-1 rounded-full\">{a}<button type=\"button\" onClick={()=>setNearbyAmenities(nearbyAmenities.filter(x=>x!==a))} className=\"text-gray-500 hover:text-gray-700\">×</button></span>\r\n                      ))}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Features</label>\r\n                  <div className=\"flex gap-2\">\r\n                    <input value={featureInput} onChange={(e)=>setFeatureInput(e.target.value)} onKeyDown={(e)=>{ if (e.key==='Enter') { e.preventDefault(); addTag(featureInput, setFeatures, features, setFeatureInput); } }} className=\"flex-1 border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-green-600\" placeholder=\"Add feature\" />\r\n                    <button type=\"button\" onClick={()=>addTag(featureInput, setFeatures, features, setFeatureInput)} className=\"px-3 py-2 rounded-lg bg-green-700 text-white hover:bg-green-800\">Add</button>\r\n                  </div>\r\n                  {features.length>0 && (\r\n                    <div className=\"mt-2 flex flex-wrap gap-2\">\r\n                      {features.map((a)=> (\r\n                        <span key={a} className=\"inline-flex items-center gap-1 text-xs bg-gray-100 text-gray-700 px-2 py-1 rounded-full\">{a}<button type=\"button\" onClick={()=>setFeatures(features.filter(x=>x!==a))} className=\"text-gray-500 hover:text-gray-700\">×</button></span>\r\n                      ))}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Location Benefits</label>\r\n                  <div className=\"flex gap-2\">\r\n                    <input value={locationBenefitInput} onChange={(e)=>setLocationBenefitInput(e.target.value)} onKeyDown={(e)=>{ if (e.key==='Enter') { e.preventDefault(); addTag(locationBenefitInput, setLocationBenefits, locationBenefits, setLocationBenefitInput); } }} className=\"flex-1 border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-green-600\" placeholder=\"Add location benefit\" />\r\n                    <button type=\"button\" onClick={()=>addTag(locationBenefitInput, setLocationBenefits, locationBenefits, setLocationBenefitInput)} className=\"px-3 py-2 rounded-lg bg-green-700 text-white hover:bg-green-800\">Add</button>\r\n                  </div>\r\n                  {locationBenefits.length>0 && (\r\n                    <div className=\"mt-2 flex flex-wrap gap-2\">\r\n                      {locationBenefits.map((a)=> (\r\n                        <span key={a} className=\"inline-flex items-center gap-1 text-xs bg-gray-100 text-gray-700 px-2 py-1 rounded-full\">{a}<button type=\"button\" onClick={()=>setLocationBenefits(locationBenefits.filter(x=>x!==a))} className=\"text-gray-500 hover:text-gray-700\">×</button></span>\r\n                      ))}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Images (URLs)</label>\r\n                  <div className=\"flex gap-2\">\r\n                    <input value={imageInput} onChange={(e)=>setImageInput(e.target.value)} onKeyDown={(e)=>{ if (e.key==='Enter') { e.preventDefault(); addTag(imageInput, setImages, images, setImageInput); } }} className=\"flex-1 border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-green-600\" placeholder=\"https://...\" />\r\n                    <button type=\"button\" onClick={()=>addTag(imageInput, setImages, images, setImageInput)} className=\"px-3 py-2 rounded-lg bg-green-700 text-white hover:bg-green-800\">Add</button>\r\n                  </div>\r\n                  {images.length>0 && (\r\n                    <div className=\"mt-2 flex flex-wrap gap-2\">\r\n                      {images.map((a)=> (\r\n                        <span key={a} className=\"inline-flex items-center gap-1 text-xs bg-gray-100 text-gray-700 px-2 py-1 rounded-full\">{a}<button type=\"button\" onClick={()=>setImages(images.filter(x=>x!==a))} className=\"text-gray-500 hover:text-gray-700\">×</button></span>\r\n                      ))}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Videos (URLs)</label>\r\n                  <div className=\"flex gap-2\">\r\n                    <input value={videoInput} onChange={(e)=>setVideoInput(e.target.value)} onKeyDown={(e)=>{ if (e.key==='Enter') { e.preventDefault(); addTag(videoInput, setVideos, videos, setVideoInput); } }} className=\"flex-1 border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-green-600\" placeholder=\"https://...\" />\r\n                    <button type=\"button\" onClick={()=>addTag(videoInput, setVideos, videos, setVideoInput)} className=\"px-3 py-2 rounded-lg bg-green-700 text-white hover:bg-green-800\">Add</button>\r\n                  </div>\r\n                  {videos.length>0 && (\r\n                    <div className=\"mt-2 flex flex-wrap gap-2\">\r\n                      {videos.map((a)=> (\r\n                        <span key={a} className=\"inline-flex items-center gap-1 text-xs bg-gray-100 text-gray-700 px-2 py-1 rounded-full\">{a}<button type=\"button\" onClick={()=>setVideos(videos.filter(x=>x!==a))} className=\"text-gray-500 hover:text-gray-700\">×</button></span>\r\n                      ))}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-4\">\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Status</label>\r\n                    <select value={status} onChange={(e)=>setStatus(e.target.value)} className=\"w-full border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-green-600\">\r\n                      <option>Active</option>\r\n                      <option>Sold</option>\r\n                      <option>Expired</option>\r\n                      <option>Pending Approval</option>\r\n                      <option>Rejected</option>\r\n                    </select>\r\n                  </div>\r\n                  <div className=\"flex items-end\">\r\n                    <label className=\"flex items-center gap-2 text-sm text-gray-700\">\r\n                      <input type=\"checkbox\" checked={isFeatured} onChange={(e)=>setIsFeatured(e.target.checked)} />\r\n                      Featured\r\n                    </label>\r\n                  </div>\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Broker Id (required)</label>\r\n                    <input value={brokerId} onChange={(e)=>setBrokerId(e.target.value)} className=\"w-full border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-green-600\" placeholder=\"Mongo ObjectId\" />\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Notes</label>\r\n                  <textarea value={notes} onChange={(e)=>setNotes(e.target.value)} rows={2} className=\"w-full border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-green-600\" placeholder=\"Internal notes\" />\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Property Type</label>\r\n                  <select name=\"propertyType\" value={form.propertyType} onChange={handleChange} className=\"w-full border rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-green-600\">\r\n                    <option>Residential</option>\r\n                    <option>Commercial</option>\r\n                    <option>Industrial</option>\r\n                    <option>Land</option>\r\n                  </select>\r\n                </div>\r\n                <div className=\"pt-2 flex justify-end gap-3\">\r\n                  <button type=\"button\" onClick={() => setIsModalOpen(false)} className=\"px-4 py-2 rounded-lg border text-gray-700\" disabled={submitting}>Cancel</button>\r\n                  <button type=\"submit\" className=\"px-4 py-2 rounded-lg bg-green-700 text-white hover:bg-green-800 disabled:opacity-50 disabled:cursor-not-allowed flex items-center gap-2\" disabled={submitting}>\r\n                    {submitting ? (\r\n                      <>\r\n                        <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white\"></div>\r\n                        Adding...\r\n                      </>\r\n                    ) : (\r\n                      'Add'\r\n                    )}\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </ProtectedRoute>\r\n  );\r\n};\r\n\r\nexport default PropertiesManagement;\r\n\r\n"],"names":[],"mappings":"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"}