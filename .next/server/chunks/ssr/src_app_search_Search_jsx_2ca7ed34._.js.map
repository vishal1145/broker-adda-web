{"version":3,"sources":["turbopack:///[project]/src/app/search/Search.jsx","turbopack:///[project]/src/app/search/components/PropertiesComponent.jsx","turbopack:///[project]/src/app/search/components/TabsBar.jsx","turbopack:///[project]/src/app/search/components/LeadsComponent.jsx","turbopack:///[project]/src/app/search/components/BrokersComponent.jsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport PropertiesComponent from './components/PropertiesComponent';\r\nimport LeadsComponent from './components/LeadsComponent';\r\nimport BrokersComponent from './components/BrokersComponent';\r\nimport HeaderFile from '../components/Header';\r\n\r\nconst Search = () => {\r\n  const [activeTab, setActiveTab] = useState('brokers');\r\n\r\n  // Read query param without useSearchParams to avoid Suspense requirement\r\n  useEffect(() => {\r\n    if (typeof window === 'undefined') return;\r\n    try {\r\n      const sp = new URLSearchParams(window.location.search);\r\n      const t = sp.get('tab');\r\n      if (t === 'leads' || t === 'brokers' || t === 'properties') {\r\n        setActiveTab(t);\r\n      }\r\n    } catch {}\r\n  }, []);\r\n\r\n  // Listen for URL changes (back/forward buttons)\r\n  useEffect(() => {\r\n    if (typeof window === 'undefined') return;\r\n    const handlePopState = () => {\r\n      try {\r\n        const sp = new URLSearchParams(window.location.search);\r\n        const t = sp.get('tab');\r\n        if (t === 'leads' || t === 'brokers' || t === 'properties') {\r\n          setActiveTab(t);\r\n        }\r\n      } catch {}\r\n    };\r\n    window.addEventListener('popstate', handlePopState);\r\n    return () => window.removeEventListener('popstate', handlePopState);\r\n  }, []);\r\n\r\n  // Update URL when tab changes\r\n  const handleTabChange = (tab) => {\r\n    setActiveTab(tab);\r\n    if (typeof window !== 'undefined') {\r\n      const url = new URL(window.location);\r\n      url.searchParams.set('tab', tab);\r\n      window.history.pushState({}, '', url);\r\n    }\r\n  };\r\n\r\n  const getPageTitle = () => {\r\n    switch (activeTab) {\r\n      case 'properties':\r\n        return 'Properties';\r\n      case 'leads':\r\n        return 'Leads';\r\n      case 'brokers':\r\n        return 'Brokers';\r\n      default:\r\n        return 'Search';\r\n    }\r\n  };\r\n\r\n  const renderContent = () => {\r\n    switch (activeTab) {\r\n      case 'properties':\r\n        return <PropertiesComponent activeTab={activeTab} setActiveTab={setActiveTab} />;\r\n      case 'leads':\r\n        return <LeadsComponent activeTab={activeTab} setActiveTab={setActiveTab} />;\r\n      case 'brokers':\r\n        return <BrokersComponent activeTab={activeTab} setActiveTab={setActiveTab} />;\r\n      default:\r\n        return <PropertiesComponent activeTab={activeTab} setActiveTab={setActiveTab} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-white\">\r\n      <HeaderFile data={{\r\n        title: 'Search',\r\n        breadcrumb: [\r\n          { label: 'Home', href: '/' },\r\n          { label: 'Search', href: '/search' }\r\n        ]\r\n      }} />\r\n\r\n      <div className=\"w-full mx-auto  py-8\">\r\n        {/* Render Active Component */}\r\n        {renderContent()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","\r\n'use client';\r\n\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport Link from 'next/link';\r\nimport Select from 'react-select';\r\nimport TabsBar from './TabsBar';\r\n\r\nconst PropertiesComponent = ({ activeTab, setActiveTab }) => {\r\n  const [filters, setFilters] = useState({\r\n    categories: [],\r\n    transactionType: [],\r\n    priceRange: [5000000, 20000000],\r\n    bedrooms: [],\r\n    status: [],\r\n    amenities: []\r\n  });\r\n\r\n  const [sortBy, setSortBy] = useState('default');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [imageIndexById, setImageIndexById] = useState({});\r\n  const [propertyItems, setPropertyItems] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [itemsPerPage] = useState(6);\r\n  const [showSecondaryFilters, setShowSecondaryFilters] = useState(false);\r\n  const [secondaryFilters, setSecondaryFilters] = useState({\r\n    bathrooms: null,\r\n    furnishingType: null,\r\n    facingDirection: null,\r\n    possessionStatus: null,\r\n    postedBy: null,\r\n    verificationStatus: null,\r\n    propertyAge: null\r\n  });\r\n  const timersRef = useRef({});\r\n\r\n  // Trigger skeleton loader when switching between tabs from header\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    const t = setTimeout(() => setIsLoading(false), 500);\r\n    return () => clearTimeout(t);\r\n  }, [activeTab]);\r\n\r\n  // Fetch properties from API and map to UI shape\r\n  useEffect(() => {\r\n    const fetchProperties = async () => {\r\n      try {\r\n        const apiUrl = process.env.NEXT_PUBLIC_API_URL || '';\r\n        const res = await fetch(`${apiUrl}/properties`);\r\n        if (!res.ok) throw new Error('Failed to fetch properties');\r\n        const data = await res.json().catch(() => ({}));\r\n\r\n        let list = [];\r\n        if (Array.isArray(data?.data?.items)) list = data.data.items;\r\n        else if (Array.isArray(data?.data?.properties)) list = data.data.properties;\r\n        else if (Array.isArray(data?.data)) list = data.data;\r\n        else if (Array.isArray(data?.properties)) list = data.properties;\r\n        else if (Array.isArray(data)) list = data;\r\n\r\n        const mapped = list.map((p, idx) => {\r\n          const id = p._id || p.id || `${idx}`;\r\n          const title = p.title || p.name || 'Property';\r\n          const propertyType = p.propertyType || p.type || '';\r\n          const subType = p.subType || '';\r\n          const city = p.city || '';\r\n          const regionRaw = p.region;\r\n          const region = Array.isArray(regionRaw)\r\n            ? regionRaw.map(r => (typeof r === 'string' ? r : r?.name)).filter(Boolean)\r\n            : (typeof regionRaw === 'string' ? regionRaw : regionRaw?.name);\r\n          const bedrooms = typeof p.bedrooms === 'number' ? p.bedrooms : undefined;\r\n          const bathrooms = typeof p.bathrooms === 'number' ? p.bathrooms : undefined;\r\n          const areaSqft = p.areaSqft || p.area || undefined;\r\n          const amenities = Array.isArray(p.amenities) ? p.amenities : [];\r\n          const images = Array.isArray(p.images) && p.images.length > 0 ? p.images : [];\r\n          const image = images[0] || '/images/pexels-binyaminmellish-106399.jpg';\r\n          const rating = p.rating || '4.7';\r\n          const price = typeof p.price === 'number' ? p.price : undefined;\r\n          const currentPrice = price ? new Intl.NumberFormat('en-IN', { style: 'currency', currency: 'INR', maximumFractionDigits: 0 }).format(price) : '-';\r\n          const status = p.status || '';\r\n          const address = p.address || '';\r\n\r\n          const description = p.description || p.propertyDescription || '';\r\n\r\n          return {\r\n            id,\r\n            name: title,\r\n            type: propertyType || subType || 'Property',\r\n            details: subType || propertyType || '',\r\n            description,\r\n            bedrooms,\r\n            bathrooms,\r\n            areaSqft,\r\n            city,\r\n            region,\r\n            currentPrice,\r\n            originalPrice: undefined,\r\n            rating,\r\n            image,\r\n            images,\r\n            amenities,\r\n            status,\r\n            address,\r\n          };\r\n        });\r\n\r\n        setPropertyItems(mapped);\r\n      } catch (err) {\r\n        setPropertyItems([]);\r\n      }\r\n    };\r\n    fetchProperties();\r\n  }, []);\r\n\r\n  // Auto-rotate property images per card (independent timers per card)\r\n  useEffect(() => {\r\n    // clear old timers\r\n    Object.values(timersRef.current).forEach((t) => clearInterval(t));\r\n    timersRef.current = {};\r\n    // create timers per property with random stagger to avoid sync\r\n    (propertyItems || []).forEach((p, idx) => {\r\n      const imgs = Array.isArray(p.images) ? p.images : [p.image];\r\n      if (!imgs || imgs.length <= 1) return;\r\n      const delay = 2800 + Math.floor(Math.random() * 1700); // 2.8s - 4.5s\r\n      timersRef.current[p.id] = setInterval(() => {\r\n        setImageIndexById((prev) => ({\r\n          ...prev,\r\n          [p.id]: ((prev[p.id] ?? 0) + 1) % imgs.length,\r\n        }));\r\n      }, delay);\r\n    });\r\n    return () => {\r\n      Object.values(timersRef.current).forEach((t) => clearInterval(t));\r\n      timersRef.current = {};\r\n    };\r\n  }, [propertyItems]);\r\n\r\n  const reactSelectStyles = {\r\n    control: (base) => ({\r\n      ...base,\r\n      fontSize: 12,\r\n      borderColor: '#d1d5db',\r\n      boxShadow: 'none',\r\n      minHeight: 38,\r\n      ':hover': { borderColor: '#0A421E' }\r\n    }),\r\n    option: (base, state) => ({\r\n      ...base,\r\n      fontSize: 12,\r\n      backgroundColor: state.isSelected ? '#0A421E' : state.isFocused ? '#ECFDF5' : 'white',\r\n      color: state.isSelected ? 'white' : '#111827'\r\n    }),\r\n    singleValue: (base) => ({ ...base, color: '#111827', fontSize: 12 }),\r\n    placeholder: (base) => ({ ...base, color: '#6b7280', fontSize: 12 }),\r\n    input: (base) => ({ ...base, fontSize: 12 }),\r\n    indicatorSeparator: () => ({ display: 'none' })\r\n  };\r\n\r\n  const categories = ['Apartment', 'Villa', 'Plot', 'Commercial', 'Office', 'Shop', 'Industrial'];\r\n  const transactionTypeOptions = ['Buy', 'Rent', 'Lease', 'Sell'];\r\n  const bedroomOptions = ['1', '2', '3', '4', '5+'];\r\n  const statusOptions = ['Available', 'Sold', 'Rented', 'Pending Approval'];\r\n  const amenitiesOptions = ['Gym', 'Swimming Pool', 'Parking', 'Security', 'Balcony'];\r\n\r\n  // Using API-backed propertyItems state instead of hardcoded list\r\n\r\n  const handleCategoryChange = (category) => {\r\n    setFilters(prev => ({\r\n      ...prev,\r\n      categories: prev.categories[0] === category ? [] : [category]\r\n    }));\r\n  };\r\n\r\n  const handleTransactionTypeChange = (type) => {\r\n    setFilters(prev => ({\r\n      ...prev,\r\n      transactionType: prev.transactionType[0] === type ? [] : [type]\r\n    }));\r\n  };\r\n\r\n  const handleBedroomChange = (bedroom) => {\r\n    setFilters(prev => ({\r\n      ...prev,\r\n      bedrooms: prev.bedrooms.includes(bedroom)\r\n        ? prev.bedrooms.filter(b => b !== bedroom)\r\n        : [...prev.bedrooms, bedroom]\r\n    }));\r\n  };\r\n\r\n  const handleStatusChange = (status) => {\r\n    setFilters(prev => ({\r\n      ...prev,\r\n      status: prev.status[0] === status ? [] : [status]\r\n    }));\r\n  };\r\n\r\n  const handleAmenityChange = (amenity) => {\r\n    setFilters(prev => ({\r\n      ...prev,\r\n      amenities: prev.amenities.includes(amenity)\r\n        ? prev.amenities.filter(a => a !== amenity)\r\n        : [...prev.amenities, amenity]\r\n    }));\r\n  };\r\n\r\n  const resetFilters = () => {\r\n    setFilters({\r\n      categories: [],\r\n      transactionType: [],\r\n      priceRange: [5000000, 20000000],\r\n      bedrooms: [],\r\n      status: [],\r\n      amenities: []\r\n    });\r\n  };\r\n\r\n  const handlePriceChange = (index, value) => {\r\n    const newRange = [...filters.priceRange];\r\n    newRange[index] = parseInt(value);\r\n    setFilters(prev => ({\r\n      ...prev,\r\n      priceRange: newRange\r\n    }));\r\n  };\r\n\r\n  const formatPrice = (price) => {\r\n    return new Intl.NumberFormat('en-IN', {\r\n      style: 'currency',\r\n      currency: 'INR',\r\n      minimumFractionDigits: 0,\r\n      maximumFractionDigits: 0\r\n    }).format(price);\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <div className=\"grid grid-cols-12 gap-8\">\r\n      {/* Filter Sidebar - 3 columns */}\r\n      <div className=\"col-span-3\">\r\n        {isLoading ? (\r\n          <div className=\"bg-white rounded-lg p-6\">\r\n            <div className=\"space-y-6\">\r\n              {/* Filter Header Skeleton */}\r\n              <div className=\"flex items-center mb-6 pb-4 border-b border-gray-200\">\r\n                <div className=\"w-5 h-5 bg-gray-200 rounded mr-2\"></div>\r\n                <div className=\"h-6 bg-gray-200 rounded w-32\"></div>\r\n              </div>\r\n              \r\n              {/* Category Filter Skeleton */}\r\n              <div className=\"mb-6 pb-6 border-b border-gray-200\">\r\n                <div className=\"h-4 bg-gray-200 rounded w-16 mb-4\"></div>\r\n                <div className=\"space-y-3\">\r\n                  {[1,2,3,4,5].map((i) => (\r\n                    <div key={i} className=\"flex items-center\">\r\n                      <div className=\"w-4 h-4 bg-gray-200 rounded\"></div>\r\n                      <div className=\"ml-3 h-4 bg-gray-200 rounded w-20\"></div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n              \r\n              {/* Price Filter Skeleton */}\r\n              <div className=\"mb-6 pb-6 border-b border-gray-200\">\r\n                <div className=\"h-4 bg-gray-200 rounded w-12 mb-4\"></div>\r\n                <div className=\"h-4 bg-gray-200 rounded w-32 mb-4\"></div>\r\n                <div className=\"h-2 bg-gray-200 rounded\"></div>\r\n              </div>\r\n              \r\n              {/* Bedrooms Filter Skeleton */}\r\n              <div className=\"mb-6 pb-6 border-b border-gray-200\">\r\n                <div className=\"h-4 bg-gray-200 rounded w-20 mb-4\"></div>\r\n                <div className=\"space-y-3\">\r\n                  {[1,2,3,4].map((i) => (\r\n                    <div key={i} className=\"flex items-center\">\r\n                      <div className=\"w-4 h-4 bg-gray-200 rounded\"></div>\r\n                      <div className=\"ml-3 h-4 bg-gray-200 rounded w-16\"></div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n              \r\n              {/* Amenities Filter Skeleton */}\r\n              <div>\r\n                <div className=\"h-4 bg-gray-200 rounded w-20 mb-4\"></div>\r\n                <div className=\"space-y-3\">\r\n                  {[1,2,3,4,5].map((i) => (\r\n                    <div key={i} className=\"flex items-center\">\r\n                      <div className=\"w-4 h-4 bg-gray-200 rounded\"></div>\r\n                      <div className=\"ml-3 h-4 bg-gray-200 rounded w-24\"></div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"bg-white rounded-lg p-4 shadow-sm border border-gray-200 space-y-5\">\r\n\r\n          {/* Filter Results Heading */}\r\n          <div className=\"flex items-center gap-2 mb-4 pb-4 border-b border-gray-200\">\r\n            <svg className=\"w-5 h-5 text-gray-800\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.293A1 1 0 013 6.586V4z\" />\r\n              </svg>\r\n            <h2 style={{ fontSize: '20px', lineHeight: '28px', fontWeight: '600', color: '#171A1FFF' }}>Filter Results</h2>\r\n          </div>\r\n\r\n\r\n          {/* Property Type Filter */}\r\n          <div className=\"mb-5\">\r\n            <h3 className=\"block mb-3\" style={{ fontFamily: 'Inter', fontSize: '13px', lineHeight: '16px', fontWeight: '500', color: '#565D6DFF' }}>Property Type</h3>\r\n            <div className=\"flex flex-wrap gap-2\">\r\n              {categories.map((category) => {\r\n                const selected = filters.categories[0] === category;\r\n                return (\r\n                  <button\r\n                    key={category}\r\n                    type=\"button\"\r\n                    onClick={() => handleCategoryChange(category)}\r\n                    style={{\r\n                      fontFamily: 'Inter',\r\n                      fontSize: '11px',\r\n                      lineHeight: '20px',\r\n                      fontWeight: '500',\r\n                      color: '#171A1FFF',\r\n                      background: selected ? '#B8BECAFF' : '#F3F4F6FF',\r\n                      borderRadius: '6px',\r\n                      transition: 'all 0.2s',\r\n                    }}\r\n                    className={`px-3 py-2 transition-colors ${\r\n                      selected \r\n                        ? 'hover:bg-[#8791A5FF] hover:active:bg-[#8791A5FF]' \r\n                        : 'hover:bg-[#B8BECAFF]'\r\n                    }`}\r\n                  >\r\n                    {category}\r\n                  </button>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Transaction Type Filter */}\r\n          <div className=\"mb-5\">\r\n            <h3 className=\"block mb-3\" style={{ fontFamily: 'Inter', fontSize: '13px', lineHeight: '16px', fontWeight: '500', color: '#565D6DFF' }}>Transaction Type</h3>\r\n            <div className=\"flex flex-wrap gap-2\">\r\n              {transactionTypeOptions.map((type) => {\r\n                const selected = filters.transactionType[0] === type;\r\n                return (\r\n                  <button\r\n                    key={type}\r\n                    type=\"button\"\r\n                    onClick={() => handleTransactionTypeChange(type)}\r\n                    style={{\r\n                      fontFamily: 'Inter',\r\n                      fontSize: '11px',\r\n                      lineHeight: '20px',\r\n                      fontWeight: '500',\r\n                      color: '#171A1FFF',\r\n                      background: selected ? '#B8BECAFF' : '#F3F4F6FF',\r\n                      borderRadius: '6px',\r\n                      transition: 'all 0.2s',\r\n                    }}\r\n                    className={`px-3 py-2 transition-colors ${\r\n                      selected \r\n                        ? 'hover:bg-[#8791A5FF] hover:active:bg-[#8791A5FF]' \r\n                        : 'hover:bg-[#B8BECAFF]'\r\n                    }`}\r\n                  >\r\n                    {type}\r\n                  </button>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Region/Location Filter */}\r\n          <div className=\"mb-5\">\r\n            <h3 className=\"block mb-2\" style={{ fontFamily: 'Inter', fontSize: '13px', lineHeight: '16px', fontWeight: '500', color: '#565D6DFF' }}>Region/Location</h3>\r\n            <Select\r\n              instanceId=\"property-region-select\"\r\n              styles={reactSelectStyles}\r\n              className=\"cursor-pointer\"\r\n              options={[{ value: 'tajganj', label: 'Tajganj' }, { value: 'agra', label: 'Agra' }]}\r\n              placeholder=\"Select Region\"\r\n              isSearchable\r\n              isClearable\r\n            />\r\n          </div>\r\n\r\n          {/* Price/Budget Range (INR) Filter */}\r\n          <div className=\"mb-5\">\r\n            <h3 className=\"block mb-3\" style={{ fontFamily: 'Inter', fontSize: '13px', lineHeight: '16px', fontWeight: '500', color: '#565D6DFF' }}>Price/Budget Range (INR)</h3>\r\n            <div className=\"flex gap-2\">\r\n              <input\r\n                type=\"number\"\r\n                value={filters.priceRange[0]}\r\n                onChange={(e) => handlePriceChange(0, parseInt(e.target.value) || 0)}\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-1 focus:ring-green-900 focus:outline-none text-xs\"\r\n              />\r\n                  <input\r\n                type=\"number\"\r\n                value={filters.priceRange[1]}\r\n                onChange={(e) => handlePriceChange(1, parseInt(e.target.value) || 0)}\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-1 focus:ring-green-900 focus:outline-none text-xs\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Bedrooms (BHK) Filter */}\r\n          <div className=\"mb-5\">\r\n            <h3 className=\"block mb-3\" style={{ fontFamily: 'Inter', fontSize: '13px', lineHeight: '16px', fontWeight: '500', color: '#565D6DFF' }}>Bedrooms (BHK)</h3>\r\n            <div className=\"flex flex-wrap gap-2\">\r\n              {bedroomOptions.map((bedroom) => {\r\n                const selected = filters.bedrooms.includes(bedroom);\r\n                return (\r\n                  <button\r\n                    key={bedroom}\r\n                    type=\"button\"\r\n                    onClick={() => handleBedroomChange(bedroom)}\r\n                    style={{\r\n                      fontFamily: 'Inter',\r\n                      fontSize: '11px',\r\n                      lineHeight: '20px',\r\n                      fontWeight: '500',\r\n                      color: '#171A1FFF',\r\n                      background: selected ? '#B8BECAFF' : '#F3F4F6FF',\r\n                      borderRadius: '6px',\r\n                      transition: 'all 0.2s',\r\n                    }}\r\n                    className={`px-3 py-2 transition-colors ${\r\n                      selected \r\n                        ? 'hover:bg-[#8791A5FF] hover:active:bg-[#8791A5FF]' \r\n                        : 'hover:bg-[#B8BECAFF]'\r\n                    }`}\r\n                  >\r\n                    {bedroom}\r\n                  </button>\r\n                );\r\n              })}\r\n              </div>\r\n            </div>\r\n\r\n          {/* Status Filter */}\r\n          <div className=\"mb-5\">\r\n            <h3 className=\"block mb-3\" style={{ fontFamily: 'Inter', fontSize: '13px', lineHeight: '16px', fontWeight: '500', color: '#565D6DFF' }}>Status</h3>\r\n            <div className=\"flex flex-wrap gap-2\">\r\n              {statusOptions.map((status) => {\r\n                const selected = filters.status[0] === status;\r\n                return (\r\n                  <button\r\n                    key={status}\r\n                    type=\"button\"\r\n                    onClick={() => handleStatusChange(status)}\r\n                  style={{\r\n                      fontFamily: 'Inter',\r\n                      fontSize: '11px',\r\n                      lineHeight: '20px',\r\n                      fontWeight: '500',\r\n                      color: '#171A1FFF',\r\n                      background: selected ? '#B8BECAFF' : '#F3F4F6FF',\r\n                      borderRadius: '6px',\r\n                      transition: 'all 0.2s',\r\n                    }}\r\n                    className={`px-3 py-2 transition-colors ${\r\n                      selected \r\n                        ? 'hover:bg-[#8791A5FF] hover:active:bg-[#8791A5FF]' \r\n                        : 'hover:bg-[#B8BECAFF]'\r\n                    }`}\r\n                  >\r\n                    {status}\r\n                  </button>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n\r\n          {/* More Filters Toggle */}\r\n          <div className=\"pt-4 border-t border-gray-200\">\r\n            <button\r\n              onClick={() => setShowSecondaryFilters(!showSecondaryFilters)}\r\n              className=\"flex items-center justify-between w-full text-sm font-medium text-gray-700 hover:text-gray-900\"\r\n              style={{ fontFamily: 'Inter', fontSize: '13px', lineHeight: '20px', fontWeight: '500', color: '#171A1FFF' }}\r\n            >\r\n              <span>More Filters</span>\r\n              <svg className=\"w-4 h-4 transition-transform\" style={{ transform: showSecondaryFilters ? 'rotate(180deg)' : 'rotate(0deg)' }} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 9l-7 7-7-7\" />\r\n              </svg>\r\n            </button>\r\n          </div>\r\n\r\n          {/* Secondary Filters Content */}\r\n          {showSecondaryFilters && (\r\n            <div className=\"space-y-5 pt-4\">\r\n              {/* Property Size/Area (Sq. Ft.) */}\r\n              <div>\r\n                <h3 className=\"block mb-2\" style={{ fontFamily: 'Inter', fontSize: '13px', lineHeight: '16px', fontWeight: '500', color: '#565D6DFF' }}>Property Size/Area (Sq. Ft.)</h3>\r\n                <div className=\"flex gap-2\">\r\n                  <input\r\n                    type=\"number\"\r\n                    placeholder=\"1000\"\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-1 focus:ring-green-900 focus:outline-none text-xs\"\r\n                  />\r\n                <input\r\n                    type=\"number\"\r\n                    placeholder=\"2500\"\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-1 focus:ring-green-900 focus:outline-none text-xs\"\r\n                />\r\n              </div>\r\n              </div>\r\n\r\n              {/* Bathrooms */}\r\n              <div>\r\n                <h3 className=\"block mb-3\" style={{ fontFamily: 'Inter', fontSize: '13px', lineHeight: '16px', fontWeight: '500', color: '#565D6DFF' }}>Bathrooms</h3>\r\n                <div className=\"flex flex-wrap gap-2\">\r\n                  {['1', '2', '3', '4+'].map((bath) => {\r\n                    const selected = secondaryFilters.bathrooms === bath;\r\n                    return (\r\n                      <button\r\n                        key={bath}\r\n                        type=\"button\"\r\n                        onClick={() => setSecondaryFilters(prev => ({ ...prev, bathrooms: prev.bathrooms === bath ? null : bath }))}\r\n                        style={{\r\n                          fontFamily: 'Inter',\r\n                          fontSize: '11px',\r\n                          lineHeight: '20px',\r\n                          fontWeight: '500',\r\n                          color: '#171A1FFF',\r\n                          background: selected ? '#B8BECAFF' : '#F3F4F6FF',\r\n                          borderRadius: '6px',\r\n                          transition: 'all 0.2s',\r\n                        }}\r\n                        className={`px-3 py-2 transition-colors ${\r\n                          selected \r\n                            ? 'hover:bg-[#8791A5FF] hover:active:bg-[#8791A5FF]' \r\n                            : 'hover:bg-[#B8BECAFF]'\r\n                        }`}\r\n                      >\r\n                        {bath}\r\n                      </button>\r\n                    );\r\n                  })}\r\n            </div>\r\n          </div>\r\n\r\n              {/* Furnishing Type */}\r\n              <div>\r\n                <h3 className=\"block mb-3\" style={{ fontFamily: 'Inter', fontSize: '13px', lineHeight: '16px', fontWeight: '500', color: '#565D6DFF' }}>Furnishing Type</h3>\r\n                <div className=\"flex flex-wrap gap-2\">\r\n                  {['Furnished', 'Semi-Furnished', 'Unfurnished'].map((type) => {\r\n                    const selected = secondaryFilters.furnishingType === type;\r\n                    return (\r\n                      <button\r\n                        key={type}\r\n                        type=\"button\"\r\n                        onClick={() => setSecondaryFilters(prev => ({ ...prev, furnishingType: prev.furnishingType === type ? null : type }))}\r\n                        style={{\r\n                          fontFamily: 'Inter',\r\n                          fontSize: '11px',\r\n                          lineHeight: '20px',\r\n                          fontWeight: '500',\r\n                          color: '#171A1FFF',\r\n                          background: selected ? '#B8BECAFF' : '#F3F4F6FF',\r\n                          borderRadius: '6px',\r\n                          transition: 'all 0.2s',\r\n                        }}\r\n                        className={`px-3 py-2 transition-colors ${\r\n                          selected \r\n                            ? 'hover:bg-[#8791A5FF] hover:active:bg-[#8791A5FF]' \r\n                            : 'hover:bg-[#B8BECAFF]'\r\n                        }`}\r\n                      >\r\n                        {type}\r\n                      </button>\r\n                    );\r\n                  })}\r\n            </div>\r\n          </div>\r\n\r\n              {/* Amenities (Checkboxes) */}\r\n          <div>\r\n                <h3 className=\"block mb-3\" style={{ fontFamily: 'Inter', fontSize: '13px', lineHeight: '16px', fontWeight: '500', color: '#565D6DFF' }}>Amenities</h3>\r\n                <div className=\"grid grid-cols-2 gap-2\">\r\n                  {['Parking', 'Security', 'Power Backup', 'Gym', 'Lift', 'Water Supply', 'Garden', 'Swimming Pool'].map((amenity) => (\r\n                <label key={amenity} className=\"flex items-center cursor-pointer\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={filters.amenities.includes(amenity)}\r\n                    onChange={() => handleAmenityChange(amenity)}\r\n                    className=\"w-4 h-4 text-green-900 accent-green-900 border-gray-300 rounded focus:ring-green-900\"\r\n                  />\r\n                      <span className=\"ml-2\" style={{ fontFamily: 'Inter', fontSize: '13px', lineHeight: '16px', fontWeight: '400', color: '#171A1FFF' }}>{amenity}</span>\r\n                </label>\r\n              ))}\r\n                </div>\r\n              </div>\r\n\r\n              {/* Facing Direction */}\r\n              <div>\r\n                <h3 className=\"block mb-3\" style={{ fontFamily: 'Inter', fontSize: '13px', lineHeight: '16px', fontWeight: '500', color: '#565D6DFF' }}>Facing Direction</h3>\r\n                <div className=\"flex flex-wrap gap-2\">\r\n                  {['North', 'East', 'South', 'West'].map((direction) => {\r\n                    const selected = secondaryFilters.facingDirection === direction;\r\n                    return (\r\n                      <button\r\n                        key={direction}\r\n                        type=\"button\"\r\n                        onClick={() => setSecondaryFilters(prev => ({ ...prev, facingDirection: prev.facingDirection === direction ? null : direction }))}\r\n                        style={{\r\n                          fontFamily: 'Inter',\r\n                          fontSize: '11px',\r\n                          lineHeight: '20px',\r\n                          fontWeight: '500',\r\n                          color: '#171A1FFF',\r\n                          background: selected ? '#B8BECAFF' : '#F3F4F6FF',\r\n                          borderRadius: '6px',\r\n                          transition: 'all 0.2s',\r\n                        }}\r\n                        className={`px-3 py-2 transition-colors ${\r\n                          selected \r\n                            ? 'hover:bg-[#8791A5FF] hover:active:bg-[#8791A5FF]' \r\n                            : 'hover:bg-[#B8BECAFF]'\r\n                        }`}\r\n                      >\r\n                        {direction}\r\n                      </button>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n\r\n              {/* Possession Status */}\r\n              <div>\r\n                <h3 className=\"block mb-3\" style={{ fontFamily: 'Inter', fontSize: '13px', lineHeight: '16px', fontWeight: '500', color: '#565D6DFF' }}>Possession Status</h3>\r\n                <div className=\"flex flex-wrap gap-2\">\r\n                  {['Ready to Move', 'Under Construction', 'Upcoming'].map((status) => {\r\n                    const selected = secondaryFilters.possessionStatus === status;\r\n                    return (\r\n                      <button\r\n                        key={status}\r\n                        type=\"button\"\r\n                        onClick={() => setSecondaryFilters(prev => ({ ...prev, possessionStatus: prev.possessionStatus === status ? null : status }))}\r\n                        style={{\r\n                          fontFamily: 'Inter',\r\n                          fontSize: '11px',\r\n                          lineHeight: '20px',\r\n                          fontWeight: '500',\r\n                          color: '#171A1FFF',\r\n                          background: selected ? '#B8BECAFF' : '#F3F4F6FF',\r\n                          borderRadius: '6px',\r\n                          transition: 'all 0.2s',\r\n                        }}\r\n                        className={`px-3 py-2 transition-colors ${\r\n                          selected \r\n                            ? 'hover:bg-[#8791A5FF] hover:active:bg-[#8791A5FF]' \r\n                            : 'hover:bg-[#B8BECAFF]'\r\n                        }`}\r\n                      >\r\n                        {status}\r\n                      </button>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n\r\n              {/* Posted By */}\r\n              <div>\r\n                <h3 className=\"block mb-3\" style={{ fontFamily: 'Inter', fontSize: '13px', lineHeight: '16px', fontWeight: '500', color: '#565D6DFF' }}>Posted By</h3>\r\n                <div className=\"flex flex-wrap gap-2\">\r\n                  {['Broker', 'Builder', 'Owner', 'Admin'].map((postedBy) => {\r\n                    const selected = secondaryFilters.postedBy === postedBy;\r\n                    return (\r\n                      <button\r\n                        key={postedBy}\r\n                        type=\"button\"\r\n                        onClick={() => setSecondaryFilters(prev => ({ ...prev, postedBy: prev.postedBy === postedBy ? null : postedBy }))}\r\n                        style={{\r\n                          fontFamily: 'Inter',\r\n                          fontSize: '11px',\r\n                          lineHeight: '20px',\r\n                          fontWeight: '500',\r\n                          color: '#171A1FFF',\r\n                          background: selected ? '#B8BECAFF' : '#F3F4F6FF',\r\n                          borderRadius: '6px',\r\n                          transition: 'all 0.2s',\r\n                        }}\r\n                        className={`px-3 py-2 transition-colors ${\r\n                          selected \r\n                            ? 'hover:bg-[#8791A5FF] hover:active:bg-[#8791A5FF]' \r\n                            : 'hover:bg-[#B8BECAFF]'\r\n                        }`}\r\n                      >\r\n                        {postedBy}\r\n                      </button>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n\r\n              {/* Date Posted */}\r\n              <div>\r\n                <h3 className=\"block mb-2\" style={{ fontFamily: 'Inter', fontSize: '13px', lineHeight: '16px', fontWeight: '500', color: '#565D6DFF' }}>Date Posted</h3>\r\n                <div className=\"relative\">\r\n                  <svg className=\"w-5 h-5 absolute left-3 top-1/2 -translate-y-1/2 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\r\n                  </svg>\r\n                  <input\r\n                    type=\"date\"\r\n                    placeholder=\"Pick a date\"\r\n                    className=\"w-full pl-10 pr-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-900 focus:border-green-900 text-sm\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              {/* Verification Status */}\r\n              <div>\r\n                <h3 className=\"block mb-3\" style={{ fontFamily: 'Inter', fontSize: '13px', lineHeight: '16px', fontWeight: '500', color: '#565D6DFF' }}>Verification Status</h3>\r\n                <div className=\"flex flex-wrap gap-2\">\r\n                  {['Verified', 'Unverified'].map((status) => {\r\n                    const selected = secondaryFilters.verificationStatus === status;\r\n                    return (\r\n                      <button\r\n                        key={status}\r\n                        type=\"button\"\r\n                        onClick={() => setSecondaryFilters(prev => ({ ...prev, verificationStatus: prev.verificationStatus === status ? null : status }))}\r\n                        style={{\r\n                          fontFamily: 'Inter',\r\n                          fontSize: '11px',\r\n                          lineHeight: '20px',\r\n                          fontWeight: '500',\r\n                          color: '#171A1FFF',\r\n                          background: selected ? '#B8BECAFF' : '#F3F4F6FF',\r\n                          borderRadius: '6px',\r\n                          transition: 'all 0.2s',\r\n                        }}\r\n                        className={`px-3 py-2 transition-colors ${\r\n                          selected \r\n                            ? 'hover:bg-[#8791A5FF] hover:active:bg-[#8791A5FF]' \r\n                            : 'hover:bg-[#B8BECAFF]'\r\n                        }`}\r\n                      >\r\n                        {status}\r\n                      </button>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n\r\n              {/* Property Age */}\r\n              <div>\r\n                <h3 className=\"block mb-3\" style={{ fontFamily: 'Inter', fontSize: '13px', lineHeight: '16px', fontWeight: '500', color: '#565D6DFF' }}>Property Age</h3>\r\n                <div className=\"flex flex-wrap gap-2\">\r\n                  {['New', '<5 Years', '<10 Years', '>10 Years'].map((age) => {\r\n                    const selected = secondaryFilters.propertyAge === age;\r\n                    return (\r\n                      <button\r\n                        key={age}\r\n                        type=\"button\"\r\n                        onClick={() => setSecondaryFilters(prev => ({ ...prev, propertyAge: prev.propertyAge === age ? null : age }))}\r\n                        style={{\r\n                          fontFamily: 'Inter',\r\n                          fontSize: '12px',\r\n                          lineHeight: '20px',\r\n                          fontWeight: '500',\r\n                          color: '#171A1FFF',\r\n                          background: selected ? '#B8BECAFF' : '#F3F4F6FF',\r\n                          borderRadius: '6px',\r\n                          transition: 'all 0.2s',\r\n                        }}\r\n                        className={`px-3 py-2 transition-colors ${\r\n                          selected \r\n                            ? 'hover:bg-[#8791A5FF] hover:active:bg-[#8791A5FF]' \r\n                            : 'hover:bg-[#B8BECAFF]'\r\n                        }`}\r\n                      >\r\n                        {age}\r\n                      </button>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Action Buttons - Always Visible */}\r\n          <div className=\"pt-4 border-t border-gray-200 mt-5\">\r\n            <div className=\"flex gap-3\">\r\n              <button\r\n                onClick={() => {\r\n                  setFilters({\r\n                    categories: [],\r\n                    transactionType: [],\r\n                    priceRange: [5000000, 20000000],\r\n                    bedrooms: [],\r\n                    status: [],\r\n                    amenities: []\r\n                  });\r\n                  setSecondaryFilters({\r\n                    bathrooms: null,\r\n                    furnishingType: null,\r\n                    facingDirection: null,\r\n                    possessionStatus: null,\r\n                    postedBy: null,\r\n                    verificationStatus: null,\r\n                    propertyAge: null\r\n                  });\r\n                }}\r\n                style={{\r\n                  fontFamily: 'Inter',\r\n                  fontSize: '14px',\r\n                  lineHeight: '22px',\r\n                  fontWeight: '500',\r\n                  color: '#171A1FFF'\r\n                }}\r\n                className=\"flex-1 px-3 py-2 border border-gray-300 rounded-lg bg-white hover:bg-white hover:border-gray-300 active:bg-white transition-colors\"\r\n              >\r\n                Reset\r\n              </button>\r\n              <button\r\n                onClick={() => {\r\n                  setShowSecondaryFilters(false);\r\n                  // Apply filters logic here\r\n                }}\r\n                className=\"flex-1 px-3 py-2 bg-green-900 rounded-lg text-sm font-medium text-white hover:bg-green-800 transition-colors\"\r\n                style={{\r\n                  fontFamily: 'Inter',\r\n                  fontSize: '14px',\r\n                  lineHeight: '22px',\r\n                  fontWeight: '500'\r\n                }}\r\n              >\r\n                Apply Filters\r\n              </button>\r\n            </div>\r\n          </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Properties Grid - 9 columns */}\r\n      <div className=\"col-span-9\">\r\n        {/* Tabs Bar */}\r\n        <TabsBar activeTab={activeTab} setActiveTab={setActiveTab} />\r\n\r\n        {/* Properties Grid */}\r\n        {isLoading ? (\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n            {[1,2,3,4,5,6].map((i) => (\r\n              <div key={i} className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\r\n                {/* Image Skeleton */}\r\n                <div className=\"w-full h-48 bg-gray-200\"></div>\r\n                \r\n                {/* Content Skeleton */}\r\n                <div className=\"p-4\">\r\n                  <div className=\"flex justify-between items-center mb-1\">\r\n                    <div className=\"h-3 bg-gray-200 rounded w-16\"></div>\r\n                    <div className=\"h-3 bg-gray-200 rounded w-12\"></div>\r\n                  </div>\r\n                  <div className=\"h-4 bg-gray-200 rounded w-24 mb-1\"></div>\r\n                  <div className=\"h-3 bg-gray-200 rounded w-16 mb-2\"></div>\r\n                  \r\n                  <div className=\"flex items-center gap-2 mb-4\">\r\n                    <div className=\"h-4 bg-gray-200 rounded w-20\"></div>\r\n                    <div className=\"h-4 bg-gray-200 rounded w-16\"></div>\r\n                  </div>\r\n                  \r\n                  <div className=\"h-8 bg-gray-200 rounded w-full\"></div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <>\r\n          {/* Results Heading */}\r\n          <div className=\"mb-6\">\r\n            <h2 className=\"text-[18px] font-semibold text-gray-900\">\r\n              Property Search Results ({propertyItems.length} Found)\r\n            </h2>\r\n          </div>\r\n\r\n          <div className=\"space-y-6\">\r\n            {/* Property cards - horizontal layout */}\r\n            {propertyItems.slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage).map((property) => (\r\n            <Link key={property.id} href={`/property-details/${property.id}`} className=\"block\">\r\n              <div className=\"bg-white border border-gray-200 rounded-xl shadow-sm hover:shadow-md transition-shadow\">\r\n                <div className=\"flex\">\r\n                  {/* Image Section - Left */}\r\n                  <div className=\"relative w-[400px] h-[300px] flex-shrink-0\">\r\n                {/* Image carousel */}\r\n                    <div className=\"relative w-full h-full overflow-hidden rounded-l-xl\">\r\n                  {(() => {\r\n                    const imgs = Array.isArray(property.images) ? property.images : [property.image];\r\n                    const idx = imageIndexById[property.id] ?? 0;\r\n                    return (\r\n                      <>\r\n                        {imgs.map((src, i) => (\r\n                          <div key={i} className={`absolute inset-0 transition-opacity duration-700 ease-in-out ${idx === i ? 'opacity-100' : 'opacity-0'}`}>\r\n                            <img src={src} alt={`${property.name}-${i}`} className=\"block w-full h-full object-cover\" />\r\n                          </div>\r\n                        ))}\r\n                      </>\r\n                    );\r\n                  })()}\r\n                </div>\r\n                    {/* Tag overlay - top-left */}\r\n                    <div className=\"absolute top-4 left-4\">\r\n                  <span className=\"bg-[#0A421E] text-white px-2 py-0.5 rounded-full text-xs font-medium\">\r\n                    {property.type}\r\n                  </span>\r\n                </div>\r\n                    {/* Rating - top-right */}\r\n                    <div className=\"absolute top-4 right-4 flex items-center bg-white/90 backdrop-blur rounded-full px-2 py-1 shadow-sm\">\r\n                  <svg className=\"w-4 h-4 text-yellow-400 mr-1\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                    <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\r\n                  </svg>\r\n                  <span className=\"text-xs font-medium text-gray-700\">{property.rating}</span>\r\n                </div>\r\n                {/* Price pill bottom-left */}\r\n                    <div className=\"absolute bottom-4 left-4 z-10\">\r\n                      <span className=\"px-2 py-0.5 rounded-full text-sm font-semibold\"\r\n                    style={{\r\n                          backgroundColor: '#FDC700'\r\n                    }}\r\n                  >\r\n                    {property.currentPrice}\r\n                  </span>\r\n                </div>\r\n                {/* Share icon bottom-right */}\r\n                    <button aria-label=\"Share\" className=\"absolute bottom-4 right-4 w-10 h-10 rounded-full bg-white shadow-md flex items-center justify-center text-gray-500 hover:text-gray-700 z-10 cursor-pointer\">\r\n                  <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.367 2.684 3 3 0 00-5.367-2.684z\" />\r\n                  </svg>\r\n                </button>\r\n              </div>\r\n              \r\n                  {/* Details Section - Right */}\r\n                  <div className=\"flex-1 p-6 flex flex-col\">\r\n                    {/* Title */}\r\n                    <h3 className=\"mb-2 flex items-center gap-2\" style={{  fontSize: '16px', lineHeight: '22px', fontWeight: '600', color: '#171A1FFF' }}>\r\n                      {property.name}\r\n                      <svg className=\"w-3.5 h-3.5 text-[#0A421E]\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" strokeWidth=\"2.5\" strokeLinecap=\"round\">\r\n                        <path d=\"M7 17l10-10M7 7h10v10\" />\r\n                      </svg>\r\n                    </h3>\r\n                    \r\n                    {/* Description */}\r\n                    <p className=\"mb-4\" style={{ fontFamily: 'Inter', fontSize: '12px', lineHeight: '16px', fontWeight: '400', color: '#565D6DFF', width: '418px' }}>\r\n                      {property.description || `A spacious and well-lit property in a prime location, perfect for families. Enjoy modern amenities and easy access to city facilities.`}\r\n                    </p>\r\n                    \r\n                    {/* Location Details */}\r\n                    <div className=\"flex flex-col gap-2 mb-4\">\r\n                      <div className=\"flex items-center text-[12px] text-gray-600\">\r\n                        <svg className=\"w-4 h-4 mr-1 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4\" />\r\n                        </svg>\r\n                        {property.city || 'Agra'}\r\n                </div>\r\n                      <div className=\"flex items-center text-[12px] text-gray-600\">\r\n                        <svg className=\"w-4 h-4 mr-1 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 22s-7-4.5-7-12a7 7 0 1114 0c0 7.5-7 12-7 12z\" />\r\n                    <circle cx=\"12\" cy=\"10\" r=\"3\" strokeWidth=\"2\" />\r\n                  </svg>\r\n                  {Array.isArray(property.region)\r\n                    ? property.region.map(r => (typeof r === 'string' ? r : r?.name)).filter(Boolean).join(', ')\r\n                          : (typeof property.region === 'string' ? property.region : property.region?.name) || 'Electronic City, Noida, Uttar Pradesh, India'}\r\n                </div>\r\n                </div>\r\n\r\n                    {/* Features */}\r\n                    <div className=\"mb-3\">\r\n                      <div className=\"text-[12px] font-semibold text-gray-900 mb-2\">Features</div>\r\n                      <div className=\"flex flex-wrap gap-2\">\r\n                        {property.bedrooms && (\r\n                          <span className=\"inline-flex items-center gap-1 px-2.5 py-1\" style={{ background: '#EDFDF4FF', borderRadius: '9999px', borderWidth: '1px', borderColor: '#00000000', borderStyle: 'solid' }}>\r\n                            <svg className=\"w-4 h-4\" style={{ color: '#19191FFF' }} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" strokeWidth=\"2\">\r\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M3 12h18M3 12l-1 8a2 2 0 002 2h16a2 2 0 002-2l-1-8M3 12V9a2 2 0 012-2h5m0 0h6a2 2 0 012 2v3m0 0v3a2 2 0 01-2 2h-6v0M9 21h6\" />\r\n                    </svg>\r\n                            <span style={{ fontFamily: 'Inter', fontSize: '12px', lineHeight: '16px', fontWeight: '600', color: '#19191FFF' }}>{property.bedrooms} bd</span>\r\n                  </span>\r\n                        )}\r\n                        {property.bathrooms && (\r\n                          <span className=\"inline-flex items-center gap-1 px-2.5 py-1\" style={{ background: '#EDFDF4FF', borderRadius: '9999px', borderWidth: '1px', borderColor: '#00000000', borderStyle: 'solid' }}>\r\n                            <svg className=\"w-4 h-4\" style={{ color: '#19191FFF' }} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" strokeWidth=\"2\">\r\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M8 7V5a2 2 0 012-2h4a2 2 0 012 2v2m0 0h4a2 2 0 012 2v8a2 2 0 01-2 2H6a2 2 0 01-2-2V9a2 2 0 012-2h8zm0 0v4\" />\r\n                    </svg>\r\n                            <span style={{ fontFamily: 'Inter', fontSize: '12px', lineHeight: '16px', fontWeight: '600', color: '#19191FFF' }}>{property.bathrooms} bt</span>\r\n                    </span>\r\n                  )}\r\n                      </div>\r\n                </div>\r\n\r\n                    {/* Amenities */}\r\n                    <div className=\"mt-auto\">\r\n                      <div className=\"text-[12px] font-semibold text-gray-900 mb-2\">Amenities</div>\r\n                  <div className=\"flex flex-wrap gap-2 text-[11px]\">\r\n                        {(Array.isArray(property.amenities) && property.amenities.length > 0 ? property.amenities : ['Gym', 'Parking', 'Security', 'Swimming Pool', 'Clubhouse']).map((amenity, idx) => (\r\n                      <span\r\n                        key={idx}\r\n                            className=\"inline-flex items-center px-1.5 py-0.5 rounded-full bg-gray-100 text-gray-700 border border-gray-200\"\r\n                      >\r\n                        {amenity}\r\n                      </span>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n                  </div>\r\n              </div>\r\n              </div>\r\n            </Link>\r\n          ))}\r\n          </div>\r\n\r\n          {/* Pagination */}\r\n          {propertyItems.length > 0 && (\r\n            <div className=\"flex items-center justify-between mt-6\">\r\n              <p className=\"text-sm text-gray-600\">\r\n                Showing {((currentPage - 1) * itemsPerPage) + 1}-{Math.min(currentPage * itemsPerPage, propertyItems.length)} of {propertyItems.length} results\r\n              </p>\r\n              {Math.ceil(propertyItems.length / itemsPerPage) > 1 && (\r\n                <div className=\"flex items-center gap-2\">\r\n                  <button\r\n                    onClick={() => setCurrentPage(prev => Math.max(1, prev - 1))}\r\n                    disabled={currentPage === 1}\r\n                    className={`w-8 h-8 rounded-md border flex items-center justify-center ${\r\n                      currentPage === 1\r\n                        ? 'bg-gray-100 border-gray-300 text-gray-400 cursor-not-allowed'\r\n                        : 'bg-white border-gray-300 text-gray-700 hover:bg-gray-50'\r\n                    }`}\r\n                  >\r\n                    <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M15 19l-7-7 7-7\" />\r\n                    </svg>\r\n                  </button>\r\n                  {Array.from({ length: Math.ceil(propertyItems.length / itemsPerPage) }, (_, i) => i + 1).map((page) => (\r\n                    <button\r\n                      key={page}\r\n                      onClick={() => setCurrentPage(page)}\r\n                      className={`w-8 h-8 rounded-md border ${\r\n                        currentPage === page\r\n                          ? 'bg-[#0A421E] text-white border-[#0A421E]'\r\n                          : 'bg-white border-gray-300 text-gray-700 hover:bg-gray-50'\r\n                      }`}\r\n                    >\r\n                      {page}\r\n                    </button>\r\n                  ))}\r\n                  <button\r\n                    onClick={() => setCurrentPage(prev => Math.min(Math.ceil(propertyItems.length / itemsPerPage), prev + 1))}\r\n                    disabled={currentPage >= Math.ceil(propertyItems.length / itemsPerPage)}\r\n                    className={`w-8 h-8 rounded-md border flex items-center justify-center ${\r\n                      currentPage >= Math.ceil(propertyItems.length / itemsPerPage)\r\n                        ? 'bg-gray-100 border-gray-300 text-gray-400 cursor-not-allowed'\r\n                        : 'bg-white border-gray-300 text-gray-700 hover:bg-gray-50'\r\n                    }`}\r\n                  >\r\n                    <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 5l7 7-7 7\" />\r\n                    </svg>\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n          </>\r\n        )}\r\n      </div>\r\n      </div>\r\n\r\n      <style jsx>{`\r\n        .slider-single {\r\n          background: transparent;\r\n        }\r\n        .slider-single::-webkit-slider-thumb {\r\n          appearance: none;\r\n          width: 20px;\r\n          height: 20px;\r\n          border-radius: 50%;\r\n          background: white;\r\n          cursor: pointer;\r\n          border: 2px solid #0A421E;\r\n          box-shadow: 0 2px 4px rgba(0,0,0,0.2);\r\n        }\r\n        .slider-single::-moz-range-thumb {\r\n          width: 20px;\r\n          height: 20px;\r\n          border-radius: 50%;\r\n          background: white;\r\n          cursor: pointer;\r\n          border: 2px solid #0A421E;\r\n          box-shadow: 0 2px 4px rgba(0,0,0,0.2);\r\n        }\r\n        .slider-single::-webkit-slider-track {\r\n          background: transparent;\r\n        }\r\n        .slider-single::-moz-range-track {\r\n          background: transparent;\r\n        }\r\n      `}</style>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PropertiesComponent;\r\n\r\n","'use client'\r\nimport React from 'react'\r\nimport { useRouter } from 'next/navigation'\r\n\r\nconst TabsBar = ({ activeTab, setActiveTab }) => {\r\n  const router = useRouter()\r\n\r\n  const handleTabClick = (tabId) => {\r\n    setActiveTab(tabId)\r\n    \r\n    // Update URL with tab query parameter\r\n    if (typeof window !== 'undefined') {\r\n      const url = new URL(window.location)\r\n      url.searchParams.set('tab', tabId)\r\n      router.push(url.toString(), { scroll: false })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\" bg-white mb-4\">\r\n      <div className=\"flex items-center justify-between px-2\">\r\n        {/* ==== Left Tabs ==== */}\r\n      <div className=\"flex items-center bg-[#F3F4F6FF]  overflow-hidden\">\r\n  {[\r\n    { id: 'brokers', label: 'Broker' },\r\n    { id: 'leads', label: 'Lead Enquiry' },\r\n    { id: 'properties', label: 'Property Details' },\r\n  ].map((tab) => (\r\n    <button\r\n      key={tab.id}\r\n      onClick={() => handleTabClick(tab.id)}\r\n      className={`px-4 py-2 font-inter text-sm font-medium leading-[22px] transition-colors\r\n        ${\r\n          activeTab === tab.id\r\n            ? 'bg-[#0A421E] text-white'\r\n            : 'bg-transparent text-[#565D6D] hover:text-[#171A1F]'\r\n        }`}\r\n    >\r\n      {tab.label}\r\n    </button>\r\n  ))}\r\n</div>\r\n\r\n        {/* ==== Right Controls ==== */}\r\n        <div className=\"flex items-center gap-2\">\r\n          {/* Sort By */}\r\n          <button\r\n  className=\"flex items-center justify-center gap-2 w-[183.3px] h-10 px-3 rounded-md border border-[#DEE1E6FF] bg-white\r\n             font-inter text-sm leading-[22px] font-medium text-[#171A1FFF]\r\n             hover:bg-white hover:text-[#171A1FFF]\r\n             active:bg-white active:text-[#171A1FFF]\r\n             disabled:opacity-40 transition-colors\"\r\n>\r\n  <svg\r\n    className=\"w-4 h-4 fill-[#171A1FFF]\"\r\n    viewBox=\"0 0 24 24\"\r\n    stroke=\"currentColor\"\r\n    strokeWidth=\"2\"\r\n  >\r\n    <path\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n      d=\"M7 16V4m0 0L3 8m4-4l4 4m6 0v12m0 0l4-4m-4 4l-4-4\"\r\n    />\r\n  </svg>\r\n  <span>Sort by: Relevance</span>\r\n</button>\r\n\r\n\r\n          {/* Filter */}\r\n          <button className=\"p-2 text-[#171A1FFF] hover:text-gray-900 transition-colors\">\r\n            <svg\r\n              className=\"w-4 h-4\"\r\n              fill=\"none\"\r\n              stroke=\"currentColor\"\r\n              viewBox=\"0 0 24 24\"\r\n            >\r\n              <path\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                strokeWidth={2}\r\n                d=\"M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.293A1 1 0 013 6.586V4z\"\r\n              />\r\n            </svg>\r\n          </button>\r\n\r\n          {/* Grid */}\r\n          <button className=\"p-2 text-[#171A1FFF] hover:text-gray-900 transition-colors\">\r\n            <svg\r\n              className=\"w-4 h-4\"\r\n              fill=\"none\"\r\n              stroke=\"currentColor\"\r\n              viewBox=\"0 0 24 24\"\r\n            >\r\n              <path\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                strokeWidth={2}\r\n                d=\"M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z\"\r\n              />\r\n            </svg>\r\n          </button>\r\n\r\n          {/* Calendar */}\r\n          <button className=\"p-2 text-[#171A1FFF] hover:text-gray-900 transition-colors\">\r\n            <svg\r\n              className=\"w-4 h-4\"\r\n              fill=\"none\"\r\n              stroke=\"currentColor\"\r\n              viewBox=\"0 0 24 24\"\r\n            >\r\n              <path\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                strokeWidth={2}\r\n                d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\"\r\n              />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      {/* Horizontal divider below tabs */}\r\n      <div className=\"border-b border-gray-200 my-4\"></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TabsBar\r\n","'use client';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useSearchParams } from 'next/navigation';\r\nimport Select, { components } from 'react-select';\r\nimport Link from 'next/link';\r\nimport TabsBar from './TabsBar';\r\n\r\nconst LeadsComponent = ({ activeTab, setActiveTab }) => {\r\n  const [leadFilters, setLeadFilters] = useState({\r\n    leadStatus: [],\r\n    leadType: [],\r\n    requirement: [],\r\n    budgetRange: [50000, 500000],\r\n    city: '',\r\n    location: '',\r\n    dateAdded: {\r\n      start: '2024-06-01',\r\n      end: ''\r\n    },\r\n    datePosted: '',\r\n    brokerAgent: [],\r\n    priority: []\r\n  });\r\n\r\n  const [sortBy, setSortBy] = useState('date-added-newest');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [uiLoading, setUiLoading] = useState(false);\r\n  const [leads, setLeads] = useState([]);\r\n  const [allLeads, setAllLeads] = useState([]);\r\n  const [leadsError, setLeadsError] = useState('');\r\n  const [totalLeads, setTotalLeads] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [leadsPerPage] = useState(9);\r\n  const [regions, setRegions] = useState([]);\r\n  const [regionsLoading, setRegionsLoading] = useState(false);\r\n  const [cities, setCities] = useState([\r\n    { value: 'Agra', label: 'Agra' },\r\n    { value: 'Noida', label: 'Noida' }\r\n  ]);\r\n  const [brokersOptions, setBrokersOptions] = useState([]);\r\n  const [brokersLoading, setBrokersLoading] = useState(false);\r\n  const [showSecondaryFilters, setShowSecondaryFilters] = useState(false);\r\n\r\n  const searchParams = useSearchParams();\r\n\r\n  // Trigger skeleton loader when switching between tabs from header\r\n  useEffect(() => {\r\n    setUiLoading(true);\r\n    const t = setTimeout(() => setUiLoading(false), 500);\r\n    return () => clearTimeout(t);\r\n  }, [activeTab]);\r\n\r\n  // Initialize city from URL param ?regionCity=...\r\n  useEffect(() => {\r\n    try {\r\n      const regionCity = searchParams?.get('regionCity');\r\n      if (regionCity) {\r\n        setLeadFilters(prev => ({ ...prev, city: regionCity, location: '' }));\r\n        setCurrentPage(1);\r\n      }\r\n    } catch {}\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  // Fetch leads from API\r\n  const fetchLeads = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      setLeadsError('');\r\n      \r\n      // Use environment variable for API URL following app pattern\r\n      const apiUrl = process.env.NEXT_PUBLIC_API_URL || '';\r\n\r\n      // Build base query parameters; fetch large pages to aggregate client-side\r\n      const params = new URLSearchParams();\r\n      const aggLimit = 100;\r\n      params.set('limit', String(aggLimit));\r\n      params.set('page', '1');\r\n      \r\n      // Add status filters to API call\r\n      if (leadFilters.leadStatus.length > 0) {\r\n        leadFilters.leadStatus.forEach(status => {\r\n          // API expects exact UI status names (case-sensitive)\r\n          params.append('status', status);\r\n        });\r\n      }\r\n\r\n      // Add property type (single-select) to API call\r\n      if (leadFilters.leadType.length === 1) {\r\n        params.set('propertyType', leadFilters.leadType[0]);\r\n      }\r\n\r\n      // Requirement (single-select) - ask backend to filter\r\n      if (leadFilters.requirement.length === 1) {\r\n        params.set('requirement', leadFilters.requirement[0]);\r\n      }\r\n\r\n      // Region/location - send region ID to API\r\n      if (leadFilters.location) params.set('regionId', leadFilters.location);\r\n\r\n      console.log('API URL:', `${apiUrl}/leads?${params.toString()}`);\r\n      console.log('Status filters:', leadFilters.leadStatus);\r\n      console.log('Property Type filters:', leadFilters.leadType);\r\n\r\n      // Add createdBy if a broker is selected (single-select)\r\n      if ((leadFilters.brokerAgent || []).length > 0) {\r\n        params.set('createdBy', String((leadFilters.brokerAgent || [])[0]));\r\n      }\r\n      // Prepare headers with Authorization if token exists\r\n      const token = typeof window !== 'undefined' ? (localStorage.getItem('token') || localStorage.getItem('authToken') || '') : '';\r\n      const headers = { 'Content-Type': 'application/json', ...(token ? { Authorization: `Bearer ${token}` } : {}) };\r\n      const response = await fetch(`${apiUrl}/leads?${params.toString()}`, { headers });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        console.log('API Response:', data);\r\n        let items = [];\r\n        let totalCount = 0;\r\n        \r\n        // Handle different response structures\r\n        console.log('Raw API response:', data);\r\n        \r\n        const paginationTotal = data?.data?.pagination?.totalItems || data?.pagination?.totalItems || 0;\r\n\r\n        if (Array.isArray(data?.data?.items)) {\r\n          items = data.data.items;\r\n          totalCount = paginationTotal || data.data.total || data.total || items.length;\r\n          console.log('Using data.data.items structure');\r\n        } else if (Array.isArray(data?.data?.leads)) {\r\n          items = data.data.leads;\r\n          totalCount = paginationTotal || data.data.total || data.total || items.length;\r\n          console.log('Using data.data.leads structure');\r\n        } else if (Array.isArray(data?.data)) {\r\n          items = data.data;\r\n          totalCount = paginationTotal || data.total || items.length;\r\n          console.log('Using data.data structure');\r\n        } else if (Array.isArray(data?.leads)) {\r\n          items = data.leads;\r\n          totalCount = paginationTotal || data.total || items.length;\r\n          console.log('Using data.leads structure');\r\n        } else if (Array.isArray(data)) {\r\n          items = data;\r\n          totalCount = paginationTotal || items.length;\r\n          console.log('Using direct data array structure');\r\n        } else {\r\n          console.log('No valid data structure found, checking for other possibilities...');\r\n          // Check for other possible structures\r\n          if (data?.data && typeof data.data === 'object') {\r\n            console.log('data.data is object:', data.data);\r\n            // Try to find array in the object\r\n            const possibleArrays = Object.values(data.data).filter(Array.isArray);\r\n            if (possibleArrays.length > 0) {\r\n              items = possibleArrays[0];\r\n              totalCount = items.length;\r\n              console.log('Found array in data.data object:', items);\r\n            }\r\n          }\r\n        }\r\n\r\n        // Final fallback - if no items found, try to extract from any array in the response\r\n        if (items.length === 0) {\r\n          console.log('No items found, trying final fallback...');\r\n          const findArraysInObject = (obj) => {\r\n            const arrays = [];\r\n            for (const key in obj) {\r\n              if (Array.isArray(obj[key])) {\r\n                arrays.push(obj[key]);\r\n              } else if (typeof obj[key] === 'object' && obj[key] !== null) {\r\n                arrays.push(...findArraysInObject(obj[key]));\r\n              }\r\n            }\r\n            return arrays;\r\n          };\r\n          \r\n          const allArrays = findArraysInObject(data);\r\n          if (allArrays.length > 0) {\r\n            // Use the largest array found\r\n            const largestArray = allArrays.reduce((a, b) => a.length > b.length ? a : b);\r\n            items = largestArray;\r\n            totalCount = items.length;\r\n            console.log('Found array in fallback:', items);\r\n          }\r\n        }\r\n\r\n        // If API has more pages, aggregate them all so we can filter across the full dataset\r\n        try {\r\n          const grandTotal = totalCount || items.length;\r\n          const currentCount = items.length;\r\n          const totalPages = Math.max(1, Math.ceil(grandTotal / aggLimit));\r\n          const aggregated = [...items];\r\n          for (let p = 2; p <= totalPages; p++) {\r\n            const moreParams = new URLSearchParams(params);\r\n            moreParams.set('page', String(p));\r\n            const moreRes = await fetch(`${apiUrl}/leads?${moreParams.toString()}`, { headers });\r\n            if (!moreRes.ok) break;\r\n            const moreData = await moreRes.json();\r\n            let pageItems = [];\r\n            if (Array.isArray(moreData?.data?.items)) pageItems = moreData.data.items;\r\n            else if (Array.isArray(moreData?.data?.leads)) pageItems = moreData.data.leads;\r\n            else if (Array.isArray(moreData?.data)) pageItems = moreData.data;\r\n            else if (Array.isArray(moreData?.leads)) pageItems = moreData.leads;\r\n            else if (Array.isArray(moreData)) pageItems = moreData;\r\n            else if (moreData?.data && typeof moreData.data === 'object') {\r\n              const poss = Object.values(moreData.data).filter(Array.isArray);\r\n              if (poss.length > 0) pageItems = poss[0];\r\n            }\r\n            if (Array.isArray(pageItems) && pageItems.length > 0) aggregated.push(...pageItems);\r\n          }\r\n          items = aggregated;\r\n          totalCount = Math.max(grandTotal, items.length);\r\n        } catch {}\r\n\r\n        console.log('Final leads data (aggregated):', items.length);\r\n        console.log('Total count from API (reported):', totalCount);\r\n        console.log('Sample lead statuses:', items.map(lead => ({ id: lead._id || lead.id, status: lead.status })));\r\n        console.log('Sample lead types:', items.map(lead => ({ id: lead._id || lead.id, propertyType: lead.propertyType, requirement: lead.requirement, req: lead.req })));\r\n        console.log('Active filters:', leadFilters);\r\n        console.log('API Response structure:', data);\r\n        // Store full dataset for dependent dropdowns (city -> region)\r\n        setAllLeads(items);\r\n        \r\n        \r\n        // Apply client-side filtering\r\n        let filteredItems = items;\r\n        \r\n        // Filter by Lead Status (client-side fallback if API filtering doesn't work properly)\r\n        if (leadFilters.leadStatus.length > 0) {\r\n          filteredItems = filteredItems.filter(lead => {\r\n            const leadStatus = lead.status || '';\r\n            return leadFilters.leadStatus.some(filterStatus => {\r\n              // Match exact status names (case-insensitive)\r\n              return leadStatus.toLowerCase() === filterStatus.toLowerCase();\r\n            });\r\n          });\r\n        }\r\n        \r\n        // Client-side backup: filter by property type (single-select)\r\n        if (leadFilters.leadType.length === 1) {\r\n          const selectedType = leadFilters.leadType[0].toLowerCase();\r\n          filteredItems = filteredItems.filter(lead => (lead.propertyType || '').toLowerCase() === selectedType);\r\n        }\r\n\r\n        // Client-side backup if backend didn't apply requirement\r\n        if (leadFilters.requirement.length === 1) {\r\n          const selectedReq = leadFilters.requirement[0].toLowerCase();\r\n          const beforeCount = filteredItems.length;\r\n          const filtered = filteredItems.filter(lead => (lead.requirement || lead.req || '').toLowerCase() === selectedReq);\r\n          // Only override if backend didn't filter (sizes equal)\r\n          if (beforeCount === filteredItems.length) {\r\n            filteredItems = filtered;\r\n          }\r\n        }\r\n        \r\n        // Filter by Priority\r\n        if (leadFilters.priority.length > 0) {\r\n          filteredItems = filteredItems.filter(lead => {\r\n            const leadPriority = lead.priority || lead.priorityLevel || '';\r\n            const priorityLower = leadPriority.toLowerCase();\r\n            return leadFilters.priority.some(filterPriority => {\r\n              const filterPriorityLower = filterPriority.toLowerCase();\r\n              return priorityLower.includes(filterPriorityLower);\r\n            });\r\n          });\r\n        }\r\n        \r\n        // Skip client-side broker filtering if backend is already filtering via createdBy\r\n        \r\n        // Filter by City (robust matching across fields)\r\n        if (leadFilters.city) {\r\n          const cityLower = leadFilters.city.toLowerCase();\r\n          filteredItems = filteredItems.filter(lead => {\r\n            const city = (lead.city || '').toString().toLowerCase();\r\n            const location = (lead.location || '').toString().toLowerCase();\r\n            const primaryRegion = (typeof lead.primaryRegion === 'string' ? lead.primaryRegion : lead.primaryRegion?.name || '').toString().toLowerCase();\r\n            const secondaryRegion = (typeof lead.secondaryRegion === 'string' ? lead.secondaryRegion : lead.secondaryRegion?.name || '').toString().toLowerCase();\r\n            const regionsArr = Array.isArray(lead.regions) ? lead.regions : [];\r\n\r\n            const match = (val) => !!val && (val === cityLower || val.includes(cityLower));\r\n            const regionsMatch = regionsArr.some(r => {\r\n              const name = (typeof r === 'string' ? r : r?.name || '').toString().toLowerCase();\r\n              return match(name);\r\n            });\r\n            return match(city) || match(location) || match(primaryRegion) || match(secondaryRegion) || regionsMatch;\r\n          });\r\n        }\r\n\r\n        // Filter by Region (robust matching by ID or name)\r\n        if (leadFilters.location) {\r\n          const regionFilterValue = leadFilters.location;\r\n          const isRegionID = typeof regionFilterValue === 'string' || typeof regionFilterValue === 'number';\r\n          \r\n          filteredItems = filteredItems.filter(lead => {\r\n            // Check if lead has matching region ID\r\n            const primaryRegionID = lead.primaryRegion?._id || lead.primaryRegion?.id || lead.primaryRegion;\r\n            const secondaryRegionID = lead.secondaryRegion?._id || lead.secondaryRegion?.id || lead.secondaryRegion;\r\n            \r\n            // Check if IDs match\r\n            if (isRegionID && String(regionFilterValue) === String(primaryRegionID) || String(regionFilterValue) === String(secondaryRegionID)) {\r\n              return true;\r\n            }\r\n            \r\n            // Fallback: check names (case-insensitive)\r\n            const regionLower = String(regionFilterValue).toLowerCase();\r\n            const primaryRegion = (typeof lead.primaryRegion === 'string' ? lead.primaryRegion : lead.primaryRegion?.name || '').toString().toLowerCase();\r\n            const secondaryRegion = (typeof lead.secondaryRegion === 'string' ? lead.secondaryRegion : lead.secondaryRegion?.name || '').toString().toLowerCase();\r\n            const location = (lead.location || '').toString().toLowerCase();\r\n\r\n            return primaryRegion.includes(regionLower) || secondaryRegion.includes(regionLower) || location.includes(regionLower);\r\n          });\r\n        }\r\n        \r\n        console.log('=== LEAD FILTERING DEBUG ===');\r\n        console.log('Total items from API:', items.length);\r\n        console.log('Current filters:', leadFilters);\r\n        console.log('Filtered items count:', filteredItems.length);\r\n        console.log('Filter results - Status filter:', leadFilters.leadStatus.length > 0 ? `Applied (${leadFilters.leadStatus.join(', ')})` : 'Not applied');\r\n        console.log('Filter results - Property Type filter:', leadFilters.leadType.length > 0 ? `Applied (${leadFilters.leadType.join(', ')})` : 'Not applied');\r\n        console.log('Filter results - Requirement filter:', leadFilters.requirement.length > 0 ? `Applied (${leadFilters.requirement.join(', ')})` : 'Not applied');\r\n        console.log('Filter results - Priority filter:', leadFilters.priority.length > 0 ? 'Applied (Client-side)' : 'Not applied');\r\n        console.log('Filter results - Location filter:', leadFilters.location ? `Applied (Region ID: ${leadFilters.location})` : 'Not applied');\r\n        if (items.length > 0 && filteredItems.length === 0) {\r\n          console.log('WARNING: Items from API but filtered out. Sample item:', items[0]);\r\n        }\r\n        \r\n        // Client-side pagination after filtering\r\n        const start = (currentPage - 1) * leadsPerPage;\r\n        const pagedItems = filteredItems.slice(start, start + leadsPerPage);\r\n        setLeads(pagedItems);\r\n        setTotalLeads(filteredItems.length);\r\n      } else {\r\n        const errorData = await response.json().catch(() => ({ message: 'Unknown error' }));\r\n        console.error('API Error:', response.status, errorData);\r\n        setLeadsError(`Failed to load leads: ${errorData.message || 'Server error'}`);\r\n        setLeads([]);\r\n        setTotalLeads(0);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching leads:', error);\r\n      setLeadsError('Error loading leads');\r\n      setLeads([]);\r\n      setTotalLeads(0);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Fetch leads when component mounts or filters change\r\n  useEffect(() => {\r\n    fetchLeads();\r\n  }, [leadFilters, sortBy, currentPage]);\r\n\r\n  // Reset UI loading when filters change (but don't show loading for filter changes)\r\n  useEffect(() => {\r\n    setUiLoading(false);\r\n  }, [leadFilters]);\r\n\r\n  // Fetch all brokers to populate Broker/Agent filter dropdown\r\n  useEffect(() => {\r\n    const fetchAllBrokers = async () => {\r\n      try {\r\n        setBrokersLoading(true);\r\n        const apiUrl = process.env.NEXT_PUBLIC_API_URL || '';\r\n        const limit = 100;\r\n        let page = 1;\r\n        let aggregated = [];\r\n        let total = 0;\r\n        for (let i = 0; i < 5; i++) {\r\n          const params = new URLSearchParams();\r\n          params.set('limit', String(limit));\r\n          params.set('page', String(page));\r\n          const res = await fetch(`${apiUrl}/brokers?${params.toString()}`);\r\n          if (!res.ok) break;\r\n          const data = await res.json().catch(() => ({}));\r\n          let items = [];\r\n          if (Array.isArray(data?.data?.items)) items = data.data.items;\r\n          else if (Array.isArray(data?.data?.brokers)) items = data.data.brokers;\r\n          else if (Array.isArray(data?.data)) items = data.data;\r\n          else if (Array.isArray(data?.brokers)) items = data.brokers;\r\n          else if (Array.isArray(data)) items = data;\r\n          if (!Array.isArray(items) || items.length === 0) break;\r\n          aggregated = aggregated.concat(items);\r\n          total = data?.data?.pagination?.totalItems || data?.pagination?.totalItems || aggregated.length;\r\n          if (aggregated.length >= total) break;\r\n          page += 1;\r\n        }\r\n        const opts = aggregated\r\n          .map(b => ({\r\n            value: b._id || b.id || b.userId || b.brokerId || '',\r\n            label: b.name || b.fullName || b.firmName || b.email || 'Unknown'\r\n          }))\r\n          .filter(o => o.value);\r\n        setBrokersOptions(opts);\r\n      } catch {\r\n        setBrokersOptions([]);\r\n      } finally {\r\n        setBrokersLoading(false);\r\n      }\r\n    };\r\n    fetchAllBrokers();\r\n  }, []);\r\n\r\n  // Fetch regions for dropdown (API-sourced)\r\n  useEffect(() => {\r\n    const fetchRegions = async () => {\r\n      try {\r\n        setRegionsLoading(true);\r\n        const apiUrl = process.env.NEXT_PUBLIC_API_URL || '';\r\n        \r\n        // If city is selected, fetch regions for that city\r\n        let url = `${apiUrl}/regions`;\r\n        if (leadFilters.city) {\r\n          url += `?city=${encodeURIComponent(leadFilters.city)}`;\r\n        }\r\n        \r\n        const res = await fetch(url);\r\n        const data = await res.json().catch(() => ({}));\r\n        let list = [];\r\n        if (Array.isArray(data?.data?.regions)) list = data.data.regions;\r\n        else if (Array.isArray(data?.regions)) list = data.regions;\r\n        else if (Array.isArray(data?.data)) list = data.data;\r\n        else if (Array.isArray(data)) list = data;\r\n        const mapped = list\r\n          .map(r => ({\r\n            id: r._id || r.id || r.value || r.name || String(r),\r\n            name: r.name || r.label || String(r)\r\n          }))\r\n          .filter(r => r.name && r.name !== '');\r\n        setRegions(mapped);\r\n      } catch {\r\n        setRegions([]);\r\n      } finally {\r\n        setRegionsLoading(false);\r\n      }\r\n    };\r\n    fetchRegions();\r\n  }, [leadFilters.city]); // Re-fetch when city changes\r\n\r\n  const leadStatusOptions = [\r\n    'New', \r\n    'Assigned', \r\n    'In Progress', \r\n    'Closed', \r\n    'Rejected'\r\n  ];\r\n  const leadTypeOptions = ['Residential', 'Commercial', 'Plot', 'Other'];\r\n  const requirementOptions = ['Buy', 'Rent', 'Sell', 'Lease'];\r\n  const priorityOptions = ['High', 'Medium', 'Low'];\r\n\r\n  const resetFilters = () => {\r\n    setLeadFilters({\r\n      leadStatus: [],\r\n      leadType: [],\r\n      requirement: [],\r\n      budgetRange: [5000000, 15000000],\r\n      city: '',\r\n      location: '',\r\n      dateAdded: { start: '', end: '' },\r\n      brokerAgent: [],\r\n      priority: []\r\n    });\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  // Pagination calculations\r\n  const totalPages = Math.ceil(totalLeads / leadsPerPage);\r\n  const startIndex = (currentPage - 1) * leadsPerPage;\r\n  const endIndex = Math.min(startIndex + leadsPerPage, totalLeads);\r\n\r\n  // Pagination handlers\r\n  const handlePageChange = (page) => {\r\n    setCurrentPage(page);\r\n  };\r\n\r\n  const handlePreviousPage = () => {\r\n    if (currentPage > 1) {\r\n      setCurrentPage(currentPage - 1);\r\n    }\r\n  };\r\n\r\n  const handleNextPage = () => {\r\n    if (currentPage < totalPages) {\r\n      setCurrentPage(currentPage + 1);\r\n    }\r\n  };\r\n\r\n  const reactSelectStyles = {\r\n    control: (base, state) => ({\r\n      ...base,\r\n      minHeight: 38,\r\n      fontSize: 12,\r\n      borderColor: state.isFocused ? '#eab308' : '#d1d5db', // yellow-500 focus\r\n      boxShadow: 'none',\r\n      cursor: 'pointer',\r\n      ':hover': { borderColor: state.isFocused ? '#eab308' : '#cbd5e1' }\r\n    }),\r\n    option: (base, state) => ({\r\n      ...base,\r\n      fontSize: 12,\r\n      backgroundColor: state.isSelected\r\n        ? '#14532d' // green-900\r\n        : state.isFocused\r\n          ? '#fffbeb' // yellow-50\r\n          : 'white',\r\n      color: state.isSelected ? 'white' : '#111827',\r\n      cursor: 'pointer'\r\n    }),\r\n    singleValue: (base) => ({ ...base, color: '#111827', fontSize: 12 }),\r\n    placeholder: (base) => ({ ...base, color: '#6b7280', fontSize: 12 }),\r\n    input: (base) => ({ ...base, fontSize: 12 }),\r\n    indicatorSeparator: () => ({ display: 'none' })\r\n  };\r\n\r\n  // Helper function to get region names from lead data\r\n  const getRegionNames = (lead) => {\r\n    let primary = '';\r\n    let secondary = '';\r\n    \r\n    // Handle different possible region field structures\r\n    if (lead.primaryRegion) {\r\n      primary = typeof lead.primaryRegion === 'string' ? lead.primaryRegion : lead.primaryRegion.name;\r\n    } else if (lead.region) {\r\n      primary = typeof lead.region === 'string' ? lead.region : lead.region.name;\r\n    } else if (lead.regions && Array.isArray(lead.regions) && lead.regions.length > 0) {\r\n      primary = lead.regions[0];\r\n    }\r\n    \r\n    if (lead.secondaryRegion) {\r\n      secondary = typeof lead.secondaryRegion === 'string' ? lead.secondaryRegion : lead.secondaryRegion.name;\r\n    } else if (lead.regions && Array.isArray(lead.regions) && lead.regions.length > 1) {\r\n      secondary = lead.regions[1];\r\n    }\r\n    \r\n    return { primary, secondary };\r\n  };\r\n\r\n  // Helper function to get avatar color\r\n  const getAvatarColor = (seed) => {\r\n    if (!seed) return { bg: 'bg-gray-200', text: 'text-gray-600' };\r\n    \r\n    const colors = [\r\n      { bg: 'bg-red-100', text: 'text-red-600' },\r\n      { bg: 'bg-blue-100', text: 'text-blue-600' },\r\n      { bg: 'bg-green-100', text: 'text-green-600' },\r\n      { bg: 'bg-yellow-100', text: 'text-yellow-600' },\r\n      { bg: 'bg-purple-100', text: 'text-purple-600' },\r\n      { bg: 'bg-pink-100', text: 'text-pink-600' },\r\n      { bg: 'bg-indigo-100', text: 'text-indigo-600' },\r\n      { bg: 'bg-orange-100', text: 'text-orange-600' }\r\n    ];\r\n    \r\n    let hash = 0;\r\n    for (let i = 0; i < seed.length; i++) {\r\n      hash = seed.charCodeAt(i) + ((hash << 5) - hash);\r\n    }\r\n    return colors[Math.abs(hash) % colors.length];\r\n  };\r\n\r\n\r\n  const handleLeadStatusChange = (status) => {\r\n    // Single-select behavior: either the clicked status or none\r\n    setLeadFilters(prev => ({\r\n      ...prev,\r\n      leadStatus: (prev.leadStatus[0] === status) ? [] : [status]\r\n    }));\r\n  };\r\n\r\n  const handleLeadTypeChange = (type) => {\r\n    // Single-select behavior\r\n    setLeadFilters(prev => ({\r\n      ...prev,\r\n      leadType: (prev.leadType[0] === type) ? [] : [type]\r\n    }));\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  const handleRequirementChange = (req) => {\r\n    // Single-select behavior\r\n    setLeadFilters(prev => ({\r\n      ...prev,\r\n      requirement: (prev.requirement[0] === req) ? [] : [req]\r\n    }));\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  const handlePriorityChange = (priority) => {\r\n    setLeadFilters(prev => ({\r\n      ...prev,\r\n      priority: prev.priority.includes(priority)\r\n        ? prev.priority.filter(p => p !== priority)\r\n        : [...prev.priority, priority]\r\n    }));\r\n  };\r\n\r\n  const handleLeadBudgetChange = (value) => {\r\n    setLeadFilters(prev => ({\r\n      ...prev,\r\n      budgetRange: [parseInt(value), 20000000]\r\n    }));\r\n  };\r\n\r\n  const handleBudgetMinInput = (value) => {\r\n    const min = Math.max(1000000, Math.min(parseInt(value || 0), leadFilters.budgetRange[1]));\r\n    setLeadFilters(prev => ({ ...prev, budgetRange: [min, prev.budgetRange[1]] }));\r\n  };\r\n\r\n  const handleBudgetMaxInput = (value) => {\r\n    const max = Math.min(20000000, Math.max(parseInt(value || 0), leadFilters.budgetRange[0]));\r\n    setLeadFilters(prev => ({ ...prev, budgetRange: [prev.budgetRange[0], max] }));\r\n  };\r\n\r\n  const formatPrice = (price) => {\r\n    return new Intl.NumberFormat('en-US', {\r\n      style: 'currency',\r\n      currency: 'USD',\r\n      minimumFractionDigits: 0\r\n    }).format(price);\r\n  };\r\n\r\n  const getStatusColor = (status) => {\r\n    switch (status) {\r\n      case 'Open':\r\n        return 'bg-emerald-50 text-[#0A421E]';\r\n      case 'In Progress':\r\n        return 'bg-[#ECFDF5] text-[#0A421E]';\r\n      case 'Closed':\r\n        return 'bg-gray-100 text-gray-800';\r\n      default:\r\n        return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  // Gradient ribbon styles for status to match provided images\r\n  const getStatusRibbonStyle = (status) => {\r\n    if (!status) {\r\n      return { background: 'linear-gradient(90deg, #F59E0B 0%, #EF4444 100%)' };\r\n    }\r\n    \r\n    const statusLower = status.toLowerCase().trim();\r\n    \r\n    switch (statusLower) {\r\n      case 'open':\r\n      case 'new':\r\n        return {\r\n          background: 'linear-gradient(90deg, #F59E0B 0%, #EF4444 100%)',\r\n        };\r\n      case 'assigned':\r\n        return {\r\n          background: 'linear-gradient(90deg, #3B82F6 0%, #1D4ED8 100%)',\r\n        };\r\n      case 'in progress':\r\n      case 'inprogress':\r\n        return {\r\n          background: 'linear-gradient(90deg, #8B5CF6 0%, #7C3AED 100%)',\r\n        };\r\n      case 'closed':\r\n      case 'completed':\r\n        return {\r\n          background: 'linear-gradient(90deg, #10B981 0%, #059669 100%)',\r\n        };\r\n      case 'rejected':\r\n      case 'cancelled':\r\n        return {\r\n          background: 'linear-gradient(90deg, #EF4444 0%, #DC2626 100%)',\r\n        };\r\n      case 'transferred':\r\n        return {\r\n          background: 'linear-gradient(90deg, #F97316 0%, #EA580C 100%)',\r\n        };\r\n      case 'active':\r\n        return {\r\n          background: 'linear-gradient(90deg, #10B981 0%, #047857 100%)',\r\n        };\r\n      default:\r\n        console.log('Unknown status:', status);\r\n        return { background: 'linear-gradient(90deg, #F59E0B 0%, #EF4444 100%)' };\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"grid grid-cols-12 gap-8\">\r\n      {/* Filter Sidebar - 3 columns */}\r\n      <div className=\"col-span-3\">\r\n        {false ? (\r\n          <div className=\"bg-white rounded-lg p-6\">\r\n            <div className=\"space-y-6\">\r\n              {/* Filter Header Skeleton */}\r\n              <div className=\"flex items-center mb-6 pb-4 border-b border-gray-200\">\r\n                <div className=\"w-5 h-5 bg-gray-200 rounded mr-2\"></div>\r\n                <div className=\"h-6 bg-gray-200 rounded w-32\"></div>\r\n              </div>\r\n              \r\n              \r\n              \r\n              {/* Lead Type Filter Skeleton */}\r\n              <div className=\"mb-6 pb-6 border-b border-gray-200\">\r\n                <div className=\"h-4 bg-gray-200 rounded w-16 mb-4\"></div>\r\n                <div className=\"space-y-3\">\r\n                  {[1,2,3,4,5].map((i) => (\r\n                    <div key={i} className=\"flex items-center\">\r\n                      <div className=\"w-4 h-4 bg-gray-200 rounded\"></div>\r\n                      <div className=\"ml-3 h-4 bg-gray-200 rounded w-20\"></div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n              \r\n              {/* Budget Range Filter Skeleton */}\r\n              <div className=\"mb-6 pb-6 border-b border-gray-200\">\r\n                <div className=\"h-4 bg-gray-200 rounded w-24 mb-4\"></div>\r\n                <div className=\"h-4 bg-gray-200 rounded w-32 mb-4\"></div>\r\n                <div className=\"h-2 bg-gray-200 rounded\"></div>\r\n              </div>\r\n              \r\n              {/* Location Filter Skeleton */}\r\n              <div className=\"mb-6 pb-6 border-b border-gray-200\">\r\n                <div className=\"h-4 bg-gray-200 rounded w-16 mb-4\"></div>\r\n                <div className=\"h-8 bg-gray-200 rounded w-full\"></div>\r\n              </div>\r\n              \r\n              {/* Date Added Filter Skeleton */}\r\n              <div className=\"mb-6 pb-6 border-b border-gray-200\">\r\n                <div className=\"h-4 bg-gray-200 rounded w-20 mb-4\"></div>\r\n                <div className=\"space-y-2\">\r\n                  <div className=\"h-8 bg-gray-200 rounded w-full\"></div>\r\n                  <div className=\"h-8 bg-gray-200 rounded w-full\"></div>\r\n                </div>\r\n              </div>\r\n              \r\n              {/* Broker/Agent Filter Skeleton */}\r\n              <div className=\"mb-6 pb-6 border-b border-gray-200\">\r\n                <div className=\"h-4 bg-gray-200 rounded w-24 mb-4\"></div>\r\n                <div className=\"h-8 bg-gray-200 rounded w-full\"></div>\r\n              </div>\r\n              \r\n              {/* Priority Filter Skeleton */}\r\n              <div>\r\n                <div className=\"h-4 bg-gray-200 rounded w-16 mb-4\"></div>\r\n                <div className=\"space-y-3\">\r\n                  {[1,2,3].map((i) => (\r\n                    <div key={i} className=\"flex items-center\">\r\n                      <div className=\"w-4 h-4 bg-gray-200 rounded\"></div>\r\n                      <div className=\"ml-3 h-4 bg-gray-200 rounded w-16\"></div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"pt-5\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={resetFilters}\r\n                className=\"w-full text-white bg-green-900 cursor-pointer flex items-center justify-center px-4 py-2 rounded-lg transition-all duration-200 shadow\"\r\n                aria-label=\"Reset filters\"\r\n              >\r\n                <i className=\"fa-solid fa-arrows-rotate text-sm mr-2 text-white\" aria-hidden=\"true\"></i>\r\n                Reset Filters\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"bg-white rounded-lg p-4 shadow-sm border border-gray-200 space-y-5\">\r\n\r\n          {/* Filter Results Heading */}\r\n          <div className=\"flex items-center gap-2 mb-4 pb-4 border-b border-gray-200\">\r\n            <svg className=\"w-5 h-5 text-gray-800\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.293A1 1 0 013 6.586V4z\" />\r\n              </svg>\r\n            <h2 style={{ fontSize: '20px', lineHeight: '28px', fontWeight: '600', color: '#171A1FFF' }}>Filter Results</h2>\r\n          </div>\r\n\r\n          {/* Requirement Filter */}\r\n          <div>\r\n            <h3 className=\"block mb-3\" style={{ fontFamily: 'Inter', fontSize: '13px', lineHeight: '16px', fontWeight: '500', color: '#565D6DFF' }}>Requirement</h3>\r\n            <div className=\"flex flex-wrap gap-2\">\r\n              {requirementOptions.map((req) => {\r\n                const selected = leadFilters.requirement?.includes(req);\r\n                return (\r\n                  <button\r\n                    key={req}\r\n                    type=\"button\"\r\n                    onClick={() => handleRequirementChange(req)}\r\n                    style={{\r\n                      fontFamily: 'Inter',\r\n                      fontSize: '12px',\r\n                      lineHeight: '16px',\r\n                      fontWeight: '500',\r\n                      color: '#171A1FFF',\r\n                      background: selected ? '#B8BECAFF' : '#F3F4F6FF',\r\n                      borderRadius: '6px',\r\n                      transition: 'all 0.2s',\r\n                    }}\r\n                    className={`px-2 py-1.5 inline-block transition-colors ${\r\n                      selected \r\n                        ? 'hover:bg-[#8791A5FF] hover:active:bg-[#8791A5FF]' \r\n                        : 'hover:bg-[#B8BECAFF]'\r\n                    }`}\r\n                  >\r\n                    {req}\r\n                  </button>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Property Type Filter */}\r\n              <div>\r\n            <h3 className=\"block mb-3\" style={{ fontFamily: 'Inter', fontSize: '13px', lineHeight: '16px', fontWeight: '500', color: '#565D6DFF' }}>Property Type</h3>\r\n            <div className=\"flex flex-wrap gap-2\">\r\n              {leadTypeOptions.map((type) => {\r\n                const selected = leadFilters.leadType?.includes(type);\r\n                return (\r\n                  <button\r\n                    key={type}\r\n                    type=\"button\"\r\n                    onClick={() => handleLeadTypeChange(type)}\r\n                    style={{\r\n                      fontFamily: 'Inter',\r\n                      fontSize: '12px',\r\n                      lineHeight: '16px',\r\n                      fontWeight: '500',\r\n                      color: '#171A1FFF',\r\n                      background: selected ? '#B8BECAFF' : '#F3F4F6FF',\r\n                      borderRadius: '6px',\r\n                      transition: 'all 0.2s',\r\n                    }}\r\n                    className={`px-2 py-1.5 inline-block transition-colors ${\r\n                      selected \r\n                        ? 'hover:bg-[#8791A5FF] hover:active:bg-[#8791A5FF]' \r\n                        : 'hover:bg-[#B8BECAFF]'\r\n                    }`}\r\n                  >\r\n                    {type}\r\n                  </button>\r\n                );\r\n              })}\r\n              </div>\r\n          </div>\r\n\r\n          {/* Region/Area Filter */}\r\n              <div>\r\n            <h3 className=\"block mb-2\" style={{ fontFamily: 'Inter', fontSize: '13px', lineHeight: '16px', fontWeight: '500', color: '#565D6DFF' }}>Region/Area</h3>\r\n                  <Select\r\n                    instanceId=\"leads-region-select\"\r\n                    styles={reactSelectStyles}\r\n                    className=\"cursor-pointer\"\r\n              options={regions.map(r => ({ value: r.id, label: r.name }))}\r\n              value={(() => {\r\n                if (!leadFilters.location) return null;\r\n                const region = regions.find(r => r.id === leadFilters.location || r.name === leadFilters.location);\r\n                return region ? { value: region.id, label: region.name } : { value: leadFilters.location, label: leadFilters.location };\r\n              })()}\r\n                    onChange={(opt) => {\r\n                      setLeadFilters(prev => ({ ...prev, location: opt?.value || '' }));\r\n                      setCurrentPage(1);\r\n                    }}\r\n                    isSearchable\r\n                    isClearable\r\n                    placeholder=\"Select Region\"\r\n                  />\r\n          </div>\r\n\r\n          {/* Status Filter */}\r\n          <div>\r\n            <h3 className=\"block mb-3\" style={{ fontFamily: 'Inter', fontSize: '13px', lineHeight: '16px', fontWeight: '500', color: '#565D6DFF' }}>Status</h3>\r\n            <div className=\"flex flex-wrap gap-2\">\r\n              {['New', 'Assigned', 'In Progress', 'Closed', 'Rejected'].map((status) => {\r\n                const selected = leadFilters.leadStatus?.includes(status);\r\n                return (\r\n                  <button\r\n                    key={status}\r\n                    type=\"button\"\r\n                    onClick={() => {\r\n                      handleLeadStatusChange(status);\r\n                      setCurrentPage(1);\r\n                    }}\r\n                    style={{\r\n                      fontFamily: 'Inter',\r\n                      fontSize: '12px',\r\n                      lineHeight: '16px',\r\n                      fontWeight: '500',\r\n                      color: '#171A1FFF',\r\n                      background: selected ? '#B8BECAFF' : '#F3F4F6FF',\r\n                      borderRadius: '6px',\r\n                      transition: 'all 0.2s',\r\n                    }}\r\n                    className={`px-2 py-1.5 inline-block transition-colors ${\r\n                      selected \r\n                        ? 'hover:bg-[#8791A5FF] hover:active:bg-[#8791A5FF]' \r\n                        : 'hover:bg-[#B8BECAFF]'\r\n                    }`}\r\n                  >\r\n                    {status}\r\n                  </button>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Budget Range Filter */}\r\n          <div>\r\n            <h3 className=\"block mb-3\" style={{ fontFamily: 'Inter', fontSize: '13px', lineHeight: '16px', fontWeight: '500', color: '#565D6DFF' }}>Budget Range</h3>\r\n              <div className=\"relative\">\r\n              <div className=\"flex justify-between text-sm text-gray-700 mb-2\">\r\n                <span>${leadFilters.budgetRange[0].toLocaleString()}</span>\r\n                <span>${leadFilters.budgetRange[1].toLocaleString()}</span>\r\n              </div>\r\n              <div className=\"relative h-2 bg-green-50 rounded-lg\">\r\n                <div \r\n                  className=\"h-2 bg-green-700 rounded-lg absolute\"\r\n                  style={{\r\n                    left: `${((leadFilters.budgetRange[0] - 50000) / (500000 - 50000)) * 100}%`,\r\n                    width: `${((leadFilters.budgetRange[1] - leadFilters.budgetRange[0]) / (500000 - 50000)) * 100}%`\r\n                  }}\r\n                ></div>\r\n                <input\r\n                  type=\"range\"\r\n                  min=\"50000\"\r\n                  max=\"500000\"\r\n                  step=\"10000\"\r\n                  value={leadFilters.budgetRange[0]}\r\n                  onChange={(e) => {\r\n                    const val = parseInt(e.target.value);\r\n                    setLeadFilters(prev => ({ \r\n                      ...prev, \r\n                      budgetRange: [val, prev.budgetRange[1]]\r\n                    }));\r\n                  }}\r\n                  className=\"w-full h-3 bg-transparent rounded-lg appearance-none cursor-pointer absolute top-0 slider-min\"\r\n                />\r\n                <input\r\n                  type=\"range\"\r\n                  min=\"50000\"\r\n                  max=\"500000\"\r\n                  step=\"10000\"\r\n                  value={leadFilters.budgetRange[1]}\r\n                  onChange={(e) => {\r\n                    const val = parseInt(e.target.value);\r\n                    setLeadFilters(prev => ({ \r\n                      ...prev, \r\n                      budgetRange: [prev.budgetRange[0], val]\r\n                    }));\r\n                  }}\r\n                  className=\"w-full h-3 bg-transparent rounded-lg appearance-none cursor-pointer absolute top-0 slider-max\"\r\n                />\r\n              </div>\r\n              </div>\r\n          </div>\r\n\r\n          {/* Date Posted Filter */}\r\n          <div>\r\n            <h3 className=\"block mb-3\" style={{ fontFamily: 'Inter', fontSize: '13px', lineHeight: '16px', fontWeight: '500', color: '#565D6DFF' }}>Date Posted</h3>\r\n            <div className=\"flex flex-wrap gap-2\">\r\n              {['Today', 'Last 7 Days', 'Last 30 Days', 'Custom Range'].map((dateOption) => {\r\n                const selected = leadFilters.datePosted === dateOption;\r\n                return (\r\n                  <button\r\n                    key={dateOption}\r\n                    type=\"button\"\r\n                    onClick={() => {\r\n                      setLeadFilters(prev => ({\r\n                        ...prev,\r\n                        datePosted: prev.datePosted === dateOption ? '' : dateOption\r\n                      }));\r\n                      setCurrentPage(1);\r\n                    }}\r\n                    style={{\r\n                      fontFamily: 'Inter',\r\n                      fontSize: '12px',\r\n                      lineHeight: '16px',\r\n                      fontWeight: '500',\r\n                      color: '#171A1FFF',\r\n                      background: selected ? '#B8BECAFF' : '#F3F4F6FF',\r\n                      borderRadius: '6px',\r\n                      transition: 'all 0.2s',\r\n                    }}\r\n                    className={`px-3 py-1.5 inline-flex whitespace-nowrap transition-colors items-center justify-center gap-2 focus:outline-none focus:ring-0 ${\r\n                      selected \r\n                        ? 'hover:bg-[#8791A5FF] hover:active:bg-[#8791A5FF]' \r\n                        : 'hover:bg-[#B8BECAFF]'\r\n                    }`}\r\n                  >\r\n                    {dateOption}\r\n                    {dateOption === 'Custom Range' && (\r\n                      <svg className=\"w-3 h-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\r\n                      </svg>\r\n                    )}\r\n                  </button>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Secondary Filters Toggle */}\r\n          <div className=\"pt-4 border-t border-gray-200\">\r\n            <button\r\n              onClick={() => setShowSecondaryFilters(!showSecondaryFilters)}\r\n              className=\"flex items-center justify-between w-full text-[12px] font-medium text-gray-700 hover:text-gray-900\"\r\n            >\r\n              <span>Secondary Filters</span>\r\n              <svg className=\"w-4 h-4 transition-transform\" style={{ transform: showSecondaryFilters ? 'rotate(180deg)' : 'rotate(0deg)' }} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 9l-7 7-7-7\" />\r\n              </svg>\r\n            </button>\r\n          </div>\r\n\r\n          {/* Secondary Filters Content */}\r\n          {showSecondaryFilters && (\r\n            <div className=\"space-y-5 pt-4\">\r\n              {/* Preferred Location (Primary) */}\r\n              <div>\r\n                <label className=\"block mb-2\" style={{ fontFamily: 'Inter', fontSize: '13px', lineHeight: '16px', fontWeight: '500', color: '#565D6DFF' }}>Preferred Location (Primary)</label>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"e.g., Downtown, Financial District\"\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-1 focus:ring-green-900 focus:outline-none text-xs\"\r\n                />\r\n              </div>\r\n\r\n              {/* Preferred Location (Secondary) (Optional) */}\r\n              <div>\r\n                <label className=\"block mb-2\" style={{ fontFamily: 'Inter', fontSize: '13px', lineHeight: '16px', fontWeight: '500', color: '#565D6DFF' }}>Preferred Location (Secondary) (Optional)</label>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"e.g., Mid-levels, Causeway Bay\"\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-1 focus:ring-green-900 focus:outline-none text-xs\"\r\n                />\r\n              </div>\r\n\r\n              {/* Broker Assigned */}\r\n              <div>\r\n                <label className=\"block mb-2\" style={{ fontFamily: 'Inter', fontSize: '13px', lineHeight: '16px', fontWeight: '500', color: '#565D6DFF' }}>Broker Assigned</label>\r\n            {(() => {\r\n              if (brokersLoading) return <div className=\"h-8 bg-gray-200 rounded animate-pulse\" />;\r\n              return (\r\n                <Select\r\n                      instanceId=\"broker-assigned-select\"\r\n                  styles={reactSelectStyles}\r\n                  className=\"cursor-pointer\"\r\n                  options={brokersOptions}\r\n                  value={(() => {\r\n                    const sel = (leadFilters.brokerAgent || [])[0];\r\n                    return brokersOptions.find(o => o.value === sel) || null;\r\n                  })()}\r\n                      onChange={(opt) => {\r\n                        setLeadFilters(prev => ({ ...prev, brokerAgent: opt?.value ? [opt.value] : [] }));\r\n                        setCurrentPage(1);\r\n                      }}\r\n                  isSearchable\r\n                      placeholder=\"Select Broker\"\r\n                />\r\n              );\r\n            })()}\r\n          </div>\r\n\r\n              {/* Customer Name/Contact */}\r\n              <div>\r\n                <label className=\"block mb-2\" style={{ fontFamily: 'Inter', fontSize: '13px', lineHeight: '16px', fontWeight: '500', color: '#565D6DFF' }}>Customer Name/Contact</label>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Search by name or contact\"\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-1 focus:ring-green-900 focus:outline-none text-xs\"\r\n                />\r\n              </div>\r\n\r\n              {/* Lead Source */}\r\n              <div>\r\n                <label className=\"block mb-2\" style={{ fontFamily: 'Inter', fontSize: '13px', lineHeight: '16px', fontWeight: '500', color: '#565D6DFF' }}>Lead Source</label>\r\n              <button\r\n                  className=\"w-full px-3 py-2 text-sm text-left border border-gray-300 rounded-lg bg-white hover:bg-gray-50\"\r\n              >\r\n                  Select Lead Sources\r\n              </button>\r\n          </div>\r\n\r\n             \r\n\r\n              {/* Verification Status */}\r\n              <div className=\"flex items-center justify-between\">\r\n                <label className=\"block\" style={{ fontFamily: 'Inter', fontSize: '13px', lineHeight: '16px', fontWeight: '500', color: '#565D6DFF' }}>Verification Status: Verified</label>\r\n                <div className=\"relative inline-block w-[44px] h-6\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    className=\"peer sr-only\"\r\n                    defaultChecked\r\n                  />\r\n                  <div className=\"absolute inset-0 bg-gray-200 rounded-full cursor-pointer transition-colors duration-200 ease-in-out peer-checked:bg-[#0D542B]\">\r\n                    <div className=\"absolute top-[2px] left-[2px] w-5 h-5 bg-white rounded-full shadow-sm transform transition-transform duration-200 peer-checked:translate-x-[20px]\"></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n          \r\n              {/* Sort By */}\r\n              <div>\r\n                <label className=\"block mb-2\" style={{ fontFamily: 'Inter', fontSize: '13px', lineHeight: '16px', fontWeight: '500', color: '#565D6DFF' }}>Sort By</label>\r\n            <Select\r\n                  instanceId=\"sort-select\"\r\n                  styles={reactSelectStyles}\r\n                  className=\"cursor-pointer\"\r\n              options={[\r\n                    { value: 'newest', label: 'Newest' },\r\n                    { value: 'oldest', label: 'Oldest' },\r\n                { value: 'name-asc', label: 'Name (A-Z)' },\r\n                { value: 'name-desc', label: 'Name (Z-A)' }\r\n              ]}\r\n                  placeholder=\"Newest\"\r\n            />\r\n          </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Action Buttons - Always Visible */}\r\n          <div className=\"pt-4\">\r\n            <div className=\"flex gap-3\">\r\n              <button\r\n                onClick={() => {\r\n                  setSecondaryFilters({\r\n                    companyName: '',\r\n                    language: '',\r\n                    brokerStatus: [],\r\n                    responseRate: [],\r\n                    joinedDate: '',\r\n                    sortBy: 'rating-high'\r\n                  });\r\n                  // Reset primary filters as well\r\n                  setBrokerFilters({\r\n                    region: [],\r\n                    brokerType: [],\r\n                    ratingRange: [0, 5],\r\n                    experienceRange: [0, 999],\r\n                    showVerifiedOnly: false\r\n                  });\r\n                }}\r\n                style={{\r\n                  fontFamily: 'Inter',\r\n                  fontSize: '14px',\r\n                  lineHeight: '22px',\r\n                  fontWeight: '500',\r\n                  color: '#171A1FFF'\r\n                }}\r\n                className=\"flex-1 px-3 py-2 border border-gray-300 rounded-lg bg-white hover:bg-white hover:border-gray-300 active:bg-white transition-colors\"\r\n              >\r\n                Reset\r\n              </button>\r\n              <button\r\n                onClick={() => {\r\n                  // Apply filters logic here\r\n                  setShowSecondaryFilters(false);\r\n                }}\r\n                className=\"flex-1 px-3 py-2 bg-green-900 rounded-lg text-sm font-medium text-white hover:bg-green-800 transition-colors\"\r\n                style={{\r\n                  fontFamily: 'Inter',\r\n                  fontSize: '14px',\r\n                  lineHeight: '22px',\r\n                  fontWeight: '500'\r\n                }}\r\n              >\r\n                Apply Filters\r\n              </button>\r\n            </div>\r\n          </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Leads Grid - 9 columns */}\r\n      <div className=\"col-span-9\">\r\n        {/* Tabs Bar */}\r\n        <TabsBar activeTab={activeTab} setActiveTab={setActiveTab} />\r\n\r\n        {/* Header with heading */}\r\n        <div className=\"mb-6\">\r\n            <h2 className=\"text-[18px] font-semibold text-gray-900\">\r\n            Lead Search Results ({totalLeads} Found)\r\n          </h2>\r\n        </div>\r\n\r\n        {/* Leads Grid */}\r\n        {isLoading ? (\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n            {[1,2,3,4,5,6,7,8,9].map((i) => (\r\n              <div key={i} className=\"bg-white border border-gray-200 rounded-lg p-6\">\r\n                {/* Profile and Status Skeleton */}\r\n                <div className=\"flex items-center justify-between mb-4\">\r\n                  <div className=\"flex items-center\">\r\n                    <div className=\"w-18 h-18 bg-gray-200 rounded-full\"></div>\r\n                    <div className=\"ml-3\">\r\n                      <div className=\"h-5 bg-gray-200 rounded w-24\"></div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"h-6 bg-gray-200 rounded w-16\"></div>\r\n                </div>\r\n\r\n                {/* Lead Details Skeleton */}\r\n                <div className=\"space-y-2 mb-4\">\r\n                  <div className=\"flex justify-between\">\r\n                    <div className=\"h-3 bg-gray-200 rounded w-8\"></div>\r\n                    <div className=\"h-3 bg-gray-200 rounded w-12\"></div>\r\n                  </div>\r\n                  <div className=\"flex justify-between\">\r\n                    <div className=\"h-3 bg-gray-200 rounded w-16\"></div>\r\n                    <div className=\"h-3 bg-gray-200 rounded w-20\"></div>\r\n                  </div>\r\n                  <div className=\"flex justify-between\">\r\n                    <div className=\"h-3 bg-gray-200 rounded w-12\"></div>\r\n                    <div className=\"h-3 bg-gray-200 rounded w-24\"></div>\r\n                  </div>\r\n                  <div className=\"flex justify-between\">\r\n                    <div className=\"h-3 bg-gray-200 rounded w-10\"></div>\r\n                    <div className=\"h-3 bg-gray-200 rounded w-32\"></div>\r\n                  </div>\r\n                  <div className=\"flex justify-between\">\r\n                    <div className=\"h-3 bg-gray-200 rounded w-14\"></div>\r\n                    <div className=\"h-3 bg-gray-200 rounded w-16\"></div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Interested Regions Skeleton */}\r\n                <div className=\"mb-4\">\r\n                  <div className=\"h-4 bg-gray-200 rounded w-32 mb-2\"></div>\r\n                  <div className=\"flex flex-wrap gap-1\">\r\n                    <div className=\"h-6 bg-gray-200 rounded-full w-16\"></div>\r\n                    <div className=\"h-6 bg-gray-200 rounded-full w-20\"></div>\r\n                    <div className=\"h-6 bg-gray-200 rounded-full w-18\"></div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Action Buttons Skeleton */}\r\n                <div className=\"space-y-3\">\r\n                  <div className=\"h-8 bg-gray-200 rounded w-full\"></div>\r\n                  <div className=\"flex justify-end gap-4\">\r\n                    <div className=\"h-8 w-8 bg-gray-200 rounded\"></div>\r\n                    <div className=\"h-8 w-8 bg-gray-200 rounded\"></div>\r\n                    <div className=\"h-8 w-8 bg-gray-200 rounded\"></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : leadsError ? (\r\n          <div className=\"text-center py-12\">\r\n            <div className=\"text-red-600 mb-4\">\r\n              <svg className=\"w-12 h-12 mx-auto mb-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z\" />\r\n              </svg>\r\n              <p className=\"text-lg font-medium\">{leadsError}</p>\r\n              <button \r\n                onClick={fetchLeads}\r\n                className=\"mt-4 bg-[#0A421E] text-white px-4 py-2 rounded-md hover:bg-[#0b4f24] transition-colors\"\r\n              >\r\n                Try Again\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ) : (leads.length === 0 && !isLoading) ? (\r\n          <div className=\"text-center py-12\">\r\n            <div className=\"text-gray-500 mb-4\">\r\n              <svg className=\"w-12 h-12 mx-auto mb-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\r\n              </svg>\r\n              <p className=\"text-lg font-medium\">No leads found</p>\r\n              <p className=\"text-sm text-gray-400\">\r\n                {leadFilters.leadStatus.length > 0 \r\n                  ? `No leads found with status: ${leadFilters.leadStatus.join(', ')}`\r\n                  : 'Try adjusting your filters or search criteria'\r\n                }\r\n              </p>\r\n              {leadFilters.leadStatus.length > 0 && (\r\n                <button \r\n                  onClick={resetFilters}\r\n                  className=\"mt-4 bg-[#0A421E] text-white px-4 py-2 rounded-md hover:bg-[#0b4f24] transition-colors\"\r\n                >\r\n                  Clear Filters\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n            {leads.map((lead, index) => {\r\n              const { primary, secondary } = getRegionNames(lead);\r\n              const brokerImage = lead.createdBy?.brokerImage || lead.createdBy?.profileImage || lead.createdBy?.image;\r\n              const brokerName = lead.createdBy?.name || lead.createdBy?.fullName || lead.createdBy?.email || 'Unknown';\r\n              \r\n              // Helper function to format region names\r\n              const regionName = (region) => {\r\n                if (!region) return null;\r\n                if (typeof region === 'string') return region;\r\n                if (typeof region === 'object') {\r\n                  return region.name || region.city || region.state || null;\r\n                }\r\n                return null;\r\n              };\r\n\r\n              // Helper function for ago\r\n              const ago = (dateString) => {\r\n                if (!dateString) return '';\r\n                const date = new Date(dateString);\r\n                const now = new Date();\r\n                const diffMs = now.getTime() - date.getTime();\r\n                const diffMins = Math.floor(diffMs / 60000);\r\n                const diffHours = Math.floor(diffMins / 60);\r\n                const diffDays = Math.floor(diffHours / 24);\r\n                if (diffMins < 1) return 'Just now';\r\n                if (diffMins < 60) return `${diffMins}m ago`;\r\n                if (diffHours < 24) return `${diffHours}h ago`;\r\n                if (diffDays < 7) return `${diffDays}d ago`;\r\n                return date.toLocaleDateString();\r\n              };\r\n\r\n              // Helper function for INR formatting\r\n              const INR = new Intl.NumberFormat('en-IN', {\r\n                maximumFractionDigits: 0,\r\n              });\r\n              \r\n              return (\r\n                <Link\r\n                  key={lead._id || lead.id || index}\r\n                  href={`/lead-details/${lead._id || lead.id || index}`}\r\n                  className=\"block h-full\"\r\n                >\r\n                  <article\r\n                    className=\"group h-full relative rounded-2xl border border-gray-200 bg-white shadow-sm transition-all duration-300 overflow-hidden hover:-translate-y-1 hover:shadow-lg cursor-pointer\"\r\n                  >\r\n                    <div className=\"p-6\">\r\n                    {/* Top Section - Main Title */}\r\n                    <div className=\"mb-4\">\r\n                      <h3 className=\"text-[16px] leading-[22px] font-bold mb-2\" style={{  color: '#323743' }}>\r\n                        {lead.propertyType || \"Property\"} for {lead.requirement || lead.req || \"inquiry\"}\r\n                      </h3>\r\n                      \r\n                      {/* Tags and Time */}\r\n                      <div className=\"flex items-center justify-between gap-2 flex-nowrap\">\r\n                        <div className=\"flex items-center gap-2 flex-wrap\">\r\n                          <span className=\"inline-flex items-center justify-center rounded-full h-[18px] px-[4px] whitespace-nowrap\" style={{ fontFamily: 'Inter', fontSize: '11px', lineHeight: '16px', fontWeight: '600', background: '#0D542B', color: '#FFFFFF' }}>\r\n                            {lead.requirement || lead.req || \"\"}\r\n                          </span>\r\n                          <span className=\"inline-flex items-center justify-center rounded-full h-[18px] px-[4px] whitespace-nowrap\" style={{ fontFamily: 'Inter', fontSize: '11px', lineHeight: '16px', fontWeight: '600', background: '#FDC700', color: '#1b1d20ff' }}>\r\n                            {lead.propertyType || \"\"}\r\n                          </span>\r\n                      </div>\r\n                        {lead.createdAt && (\r\n                          <div className=\"flex items-center gap-1.5 text-[12px] leading-5 font-normal whitespace-nowrap flex-shrink-0\" style={{ color: '#565D6D' }}>\r\n                            <svg\r\n                              className=\"h-4 w-4\"\r\n                              viewBox=\"0 0 24 24\"\r\n                              fill=\"none\"\r\n                              stroke=\"currentColor\"\r\n                              strokeWidth=\"2\"\r\n                            >\r\n                              <circle cx=\"12\" cy=\"12\" r=\"10\" />\r\n                              <path d=\"M12 6v6l4 2\" />\r\n                            </svg>\r\n                            {ago(lead.createdAt)}\r\n                  </div>\r\n                        )}\r\n                </div>\r\n                    </div>\r\n\r\n                    {/* Horizontal Divider */}\r\n                    <div className=\"border-t border-gray-200 my-4\"></div>\r\n\r\n                    {/* Middle Section - Property Details */}\r\n                    <div className=\"space-y-3 mb-4\">\r\n                      {/* Preferred Location */}\r\n                      <div className=\"flex items-center gap-2\">\r\n                        <svg\r\n                          className=\"h-4 w-4 flex-shrink-0 text-[#565D6D]\"\r\n                          viewBox=\"0 0 24 24\"\r\n                          fill=\"none\"\r\n                          stroke=\"currentColor\"\r\n                          strokeWidth=\"2\"\r\n                        >\r\n                          <path d=\"M21 10c0 7-9 13-9 13S3 17 3 10a9 9 0 0 1 18 0z\" />\r\n                          <circle cx=\"12\" cy=\"10\" r=\"3\" />\r\n                        </svg>\r\n                        <div className=\"flex items-center flex-wrap gap-1\">\r\n                          <span className=\"font-inter text-[12px] leading-5 font-medium text-[#171A1FFF]\">Preferred:</span>\r\n                          <span className=\"font-inter text-[12px] leading-5 font-normal capitalize text-[#565D6DFF]\">\r\n                            {regionName(lead.primaryRegion) || primary || \"—\"}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n\r\n                      {/* Secondary Location */}\r\n                      {(lead.secondaryRegion || secondary) && (\r\n                        <div className=\"flex items-center gap-2\">\r\n                          <svg\r\n                            className=\"h-4 w-4 flex-shrink-0 text-[#565D6D]\"\r\n                            viewBox=\"0 0 24 24\"\r\n                            fill=\"none\"\r\n                            stroke=\"currentColor\"\r\n                            strokeWidth=\"2\"\r\n                          >\r\n                            <path d=\"M21 10c0 7-9 13-9 13S3 17 3 10a9 9 0 0 1 18 0z\" />\r\n                            <circle cx=\"12\" cy=\"10\" r=\"3\" />\r\n                          </svg>\r\n                          <div className=\"flex items-center flex-wrap gap-1\">\r\n                            <span className=\"font-inter text-[12px] leading-5 font-medium text-[#171A1FFF]\">Secondary:</span>\r\n                            <span className=\"font-inter text-[12px] leading-5 font-normal capitalize text-[#565D6DFF]\">\r\n                              {regionName(lead.secondaryRegion) || secondary || \"—\"}\r\n                            </span>\r\n                </div>\r\n                        </div>\r\n                      )}\r\n\r\n                      {/* Budget */}\r\n                      <div className=\"flex items-center gap-2\">\r\n                        <svg\r\n                          className=\"h-4 w-4 flex-shrink-0 text-[#565D6D]\"\r\n                          viewBox=\"0 0 24 24\"\r\n                          fill=\"none\"\r\n                          stroke=\"currentColor\"\r\n                          strokeWidth=\"2\"\r\n                        >\r\n                          <rect x=\"3\" y=\"8\" width=\"18\" height=\"12\" rx=\"2\" />\r\n                          <path d=\"M3 12h18M9 8v8\" />\r\n                        </svg>\r\n                        <div className=\"flex items-center flex-wrap gap-1\">\r\n                          <span className=\"font-inter text-[12px] leading-5 font-medium text-[#171A1FFF]\">Budget:</span>\r\n                          <span className=\"text-[12px] leading-5 font-normal\" style={{ color: '#565D6D' }}>\r\n                            {typeof lead.budget === \"number\"\r\n                              ? \"₹\" + INR.format(lead.budget).replace(\"₹\", \"\")\r\n                              : lead.budget || \"—\"}\r\n                      </span>\r\n                </div>\r\n                </div>\r\n                </div>\r\n\r\n                    {/* Bottom Section - Broker Profile and Actions */}\r\n                    <div className=\"pt-4\">\r\n                      <div className=\"flex items-center justify-between\">\r\n                        <div className=\"flex items-center gap-3\">\r\n                          {/* Avatar */}\r\n                          <div className=\"relative w-12 h-12 text-sm font-semibold\" style={{ color: '#323743' }}>\r\n                            {brokerImage ? (\r\n                              <>\r\n                                <div className=\"w-12 h-12 rounded-full bg-[#E5FCE4FF] overflow-hidden\">\r\n                                  <img\r\n                                    src={brokerImage}\r\n                                    alt={brokerName}\r\n                                    className=\"w-full h-full object-cover\"\r\n                                    onError={(e) => {\r\n                                      e.currentTarget.style.display = 'none';\r\n                                    }}\r\n                                  />\r\n                                </div>\r\n                                <div className=\"absolute bottom-0 right-0 w-3 h-3 rounded-full bg-[#1DD75BFF] border-[1.5px] border-white translate-x-1/4 translate-y-1/8\"></div>\r\n                              </>\r\n                            ) : (\r\n                              <>\r\n                                <div className=\"w-12 h-12 rounded-full bg-[#E5FCE4FF] flex items-center justify-center\">\r\n                                  {brokerName\r\n                                    .split(' ')\r\n                                    .map((n) => n[0])\r\n                                    .slice(0, 2)\r\n                                    .join('')\r\n                                    .toUpperCase()}\r\n                                </div>\r\n                                <div className=\"absolute bottom-0 right-0 w-3 h-3 rounded-full bg-[#1DD75BFF] border-[1.5px] border-white translate-x-1/2 translate-y-1/2\"></div>\r\n                              </>\r\n                            )}\r\n              </div>\r\n\r\n                          {/* Name and icons */}\r\n                          <div>\r\n                            <div className=\"flex items-center gap-2\">\r\n                              <p className=\"font-inter text-[12px] leading-5 font-medium text-[#171A1FFF]\">\r\n                                {brokerName}\r\n                              </p>\r\n                            </div>\r\n\r\n                            {/* Connect / Chat */}\r\n                            <div className=\"flex items-center gap-3 mt-1\">\r\n                              <span className=\"flex items-center gap-2\">\r\n                                <svg className=\"w-5 h-5 fill-none stroke-[#171A1FFF]\" viewBox=\"0 0 24 24\" strokeWidth=\"2\">\r\n                                  <path d=\"M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z\" />\r\n                                </svg>\r\n                                <span className=\"font-inter text-xs leading-5 font-normal text-[#565D6DFF]\">Connect</span>\r\n                    </span>\r\n\r\n                              <span className=\"flex items-center gap-2\">\r\n                                <svg className=\"w-5 h-5 fill-none stroke-[#171A1FFF]\" viewBox=\"0 0 24 24\" strokeWidth=\"2\">\r\n                                  <path d=\"M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z\" />\r\n                                </svg>\r\n                                <span className=\"font-inter text-xs leading-5 font-normal text-[#565D6DFF]\">Chat</span>\r\n                        </span>\r\n                </div>\r\n              </div>\r\n              </div>\r\n            </div>\r\n                    </div>\r\n                  </div>\r\n                </article>\r\n                </Link>\r\n              );\r\n            })}\r\n          </div>\r\n        )}\r\n\r\n        {/* Pagination */}\r\n        {!isLoading && !leadsError && totalLeads > 0 && (\r\n          <div className=\"mt-8 flex flex-col sm:flex-row items-center justify-between gap-4 border-t border-gray-200 pt-4\">\r\n            {/* Left: Results info */}\r\n            <div className=\"text-sm text-gray-600\">\r\n              Showing {startIndex + 1}-{Math.min(endIndex, totalLeads)} of {totalLeads} results\r\n            </div>\r\n\r\n            {/* Right: Pagination buttons */}\r\n            {totalPages > 1 ? (\r\n              <div className=\"flex items-center gap-1\">\r\n              <button\r\n                onClick={handlePreviousPage}\r\n                disabled={currentPage === 1}\r\n                  className={`w-8 h-8 flex items-center justify-center rounded-md border ${\r\n                  currentPage === 1\r\n                      ? 'bg-gray-100 text-gray-400 border-gray-300 cursor-not-allowed'\r\n                      : 'bg-white text-gray-700 border-gray-300 hover:bg-gray-50'\r\n                }`}\r\n              >\r\n                  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M15 19l-7-7 7-7\" />\r\n                  </svg>\r\n              </button>\r\n\r\n                <div className=\"flex items-center gap-1 overflow-x-auto\">\r\n                  {/* Always show first page */}\r\n                      <button\r\n                        onClick={() => handlePageChange(1)}\r\n                    className={`w-8 h-8 flex items-center justify-center rounded-md font-medium ${\r\n                      currentPage === 1\r\n                        ? 'bg-[#0A421E] text-white'\r\n                        : 'bg-white text-gray-700 border border-gray-300 hover:bg-gray-50'\r\n                    }`}\r\n                      >\r\n                        1\r\n                      </button>\r\n\r\n                  {/* Show ellipsis if current page is far from start */}\r\n                  {currentPage > 4 && (\r\n                    <span className=\"px-2 py-2 text-sm text-gray-500\">...</span>\r\n                  )}\r\n\r\n                  {/* Show pages around current page */}\r\n                  {Array.from({ length: totalPages }, (_, i) => i + 1)\r\n                    .filter(page => {\r\n                      // Don't show page 1 (already shown above)\r\n                      if (page === 1) return false;\r\n                      // Don't show last page (shown below)\r\n                      if (page === totalPages) return false;\r\n                      \r\n                      // Show pages 2-4 if current page is 1-3\r\n                      if (currentPage <= 3) {\r\n                        return page >= 2 && page <= 4;\r\n                      }\r\n                      // Show pages around current page\r\n                      if (currentPage > 3 && currentPage < totalPages - 2) {\r\n                        return page >= currentPage - 1 && page <= currentPage + 1;\r\n                      }\r\n                      // Show last few pages if current page is near end\r\n                      if (currentPage >= totalPages - 2) {\r\n                        return page >= totalPages - 3 && page < totalPages;\r\n                      }\r\n                      return false;\r\n                    })\r\n                    .map((page) => (\r\n                      <button\r\n                        key={page}\r\n                        onClick={() => handlePageChange(page)}\r\n                        className={`w-8 h-8 flex items-center justify-center rounded-md font-medium ${\r\n                          currentPage === page\r\n                            ? 'bg-[#0A421E] text-white'\r\n                            : 'bg-white text-gray-700 border border-gray-300 hover:bg-gray-50'\r\n                        }`}\r\n                      >\r\n                        {page}\r\n                      </button>\r\n                    ))}\r\n\r\n                  {/* Show ellipsis if current page is far from end */}\r\n                  {currentPage < totalPages - 3 && (\r\n                    <span className=\"px-2 py-2 text-sm text-gray-500\">...</span>\r\n                  )}\r\n\r\n                  {/* Always show last page if there's more than 1 page */}\r\n                  {totalPages > 1 && (\r\n                      <button\r\n                        onClick={() => handlePageChange(totalPages)}\r\n                      className={`w-8 h-8 flex items-center justify-center rounded-md font-medium ${\r\n                        currentPage === totalPages\r\n                          ? 'bg-[#0A421E] text-white'\r\n                          : 'bg-white text-gray-700 border border-gray-300 hover:bg-gray-50'\r\n                      }`}\r\n                      >\r\n                        {totalPages}\r\n                      </button>\r\n                  )}\r\n              </div>\r\n\r\n              <button\r\n                onClick={handleNextPage}\r\n                disabled={currentPage === totalPages}\r\n                  className={`w-8 h-8 flex items-center justify-center rounded-md border ${\r\n                  currentPage === totalPages\r\n                      ? 'bg-gray-100 text-gray-400 border-gray-300 cursor-not-allowed'\r\n                      : 'bg-white text-gray-700 border-gray-300 hover:bg-gray-50'\r\n                }`}\r\n              >\r\n                  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 5l7 7-7 7\" />\r\n                  </svg>\r\n              </button>\r\n            </div>\r\n            ) : null}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <style jsx>{`\r\n        .slider-min,\r\n        .slider-max {\r\n          background: transparent;\r\n        }\r\n        .slider-min::-webkit-slider-thumb,\r\n        .slider-max::-webkit-slider-thumb {\r\n          appearance: none;\r\n          width: 18px;\r\n          height: 18px;\r\n          border-radius: 50%;\r\n          background: white;\r\n          cursor: pointer;\r\n          border: 3px solid #22c55e;\r\n          box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n        }\r\n        .slider-min::-moz-range-thumb,\r\n        .slider-max::-moz-range-thumb {\r\n          width: 18px;\r\n          height: 18px;\r\n          border-radius: 50%;\r\n          background: white;\r\n          cursor: pointer;\r\n          border: 3px solid #22c55e;\r\n          box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n        }\r\n        .slider-min::-webkit-slider-track,\r\n        .slider-max::-webkit-slider-track {\r\n          background: transparent;\r\n        }\r\n        .slider-min::-moz-range-track,\r\n        .slider-max::-moz-range-track {\r\n          background: transparent;\r\n        }\r\n      `}</style>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LeadsComponent;\r\n","'use client';\r\n\r\nimport React, { useState, useEffect, useMemo } from 'react';\r\nimport { useRouter } from 'next/navigation';\r\nimport Select, { components } from 'react-select';\r\nimport TabsBar from './TabsBar';\r\n\r\nconst BrokersComponent = ({ activeTab, setActiveTab }) => {\r\n  const router = useRouter();\r\n  const [brokerFilters, setBrokerFilters] = useState({\r\n    region: [],\r\n    experienceRange: [0, 20],\r\n    brokerType: [],\r\n    ratingRange: [0, 5],\r\n    languages: [],\r\n    showVerifiedOnly: false,\r\n    city: ''\r\n  });\r\n\r\n  const [sortBy, setSortBy] = useState('rating-high');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [regions, setRegions] = useState([]);\r\n  const [cities, setCities] = useState([\r\n    { value: 'Agra', label: 'Agra' },\r\n    { value: 'Noida', label: 'Noida' }\r\n  ]);\r\n  const [regionsLoading, setRegionsLoading] = useState(true);\r\n  \r\n  // New search states\r\n  const [nameSearchTerm, setNameSearchTerm] = useState('');\r\n  const [regionSearchTerm, setRegionSearchTerm] = useState('');\r\n  \r\n  // Store full region objects for ID mapping\r\n  const [regionsData, setRegionsData] = useState([]);\r\n  \r\n  // Brokers API state\r\n  const [brokers, setBrokers] = useState([]);\r\n  const [brokersLoading, setBrokersLoading] = useState(true);\r\n  \r\n  // Pagination state\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [itemsPerPage, setItemsPerPage] = useState(9);\r\n  \r\n  // Secondary filters state\r\n  const [showSecondaryFilters, setShowSecondaryFilters] = useState(false);\r\n  const [secondaryFilters, setSecondaryFilters] = useState({\r\n    companyName: '',\r\n    language: '',\r\n    brokerStatus: [],\r\n    responseRate: [],\r\n    joinedDate: '',\r\n    sortBy: 'rating-high'\r\n  });\r\n\r\n  // Enable skeleton loader on Brokers page when switching tabs\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    const t = setTimeout(() => setIsLoading(false), 500);\r\n    return () => clearTimeout(t);\r\n  }, [activeTab]);\r\n\r\n  // Fetch regions from API (refetch when city changes)\r\n  useEffect(() => {\r\n    const fetchRegions = async () => {\r\n      try {\r\n        setRegionsLoading(true);\r\n        \r\n        // Use environment variable for API URL following app pattern\r\n        const apiUrl = process.env.NEXT_PUBLIC_API_URL || '';\r\n        let url = `${apiUrl}/regions`;\r\n        if (brokerFilters.city) {\r\n          url += `?city=${encodeURIComponent(brokerFilters.city)}`;\r\n        }\r\n        const response = await fetch(url, { method: 'GET' });\r\n        \r\n        if (!response.ok) {\r\n          throw new Error(`Failed to fetch regions: ${response.status}`);\r\n        }\r\n        \r\n        const data = await response.json();\r\n        console.log('Regions API response:', data);\r\n        \r\n        // Extract regions data following app pattern\r\n        let regionsData = [];\r\n        \r\n        if (Array.isArray(data?.data)) {\r\n          regionsData = data.data;\r\n        } else if (Array.isArray(data?.regions)) {\r\n          regionsData = data.regions;\r\n        } else if (Array.isArray(data)) {\r\n          regionsData = data;\r\n        } else if (data?.data?.regions && Array.isArray(data.data.regions)) {\r\n          regionsData = data.data.regions;\r\n        }\r\n        \r\n        if (Array.isArray(regionsData) && regionsData.length > 0) {\r\n          // Store full region objects for ID mapping\r\n          setRegionsData(regionsData);\r\n          \r\n          // Extract region names from objects if they are objects\r\n          const regionNames = regionsData.map(region => {\r\n            if (typeof region === 'string') {\r\n              return region;\r\n            } else if (typeof region === 'object' && region !== null) {\r\n              return region.name || region.city || region.state || region._id || String(region);\r\n            }\r\n            return String(region);\r\n          });\r\n          console.log('Processed region names:', regionNames);\r\n          console.log('Full regions data:', regionsData);\r\n          setRegions(regionNames);\r\n        } else {\r\n          throw new Error('No valid regions data received');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching regions:', error);\r\n        // Fallback to hardcoded regions if API fails\r\n        const fallbackRegions = ['Mumbai', 'Delhi', 'Bengaluru', 'Gurugram', 'Pune', 'Noida ', 'Chennai', 'Hyderabad', 'Kolkata'];\r\n        setRegions(fallbackRegions);\r\n      } finally {\r\n        setRegionsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchRegions();\r\n  }, [brokerFilters.city]);\r\n\r\n  // Fetch brokers from API with region and city filtering\r\n  const fetchBrokers = async (regionIds = null) => {\r\n    try {\r\n      setBrokersLoading(true);\r\n      \r\n      // Use environment variable for API URL following app pattern\r\n      const apiUrl = process.env.NEXT_PUBLIC_API_URL || '';\r\n      \r\n      // Build base query parameters\r\n      const baseQueryParams = new URLSearchParams();\r\n      \r\n      // Add region filter if provided\r\n      if (regionIds && regionIds.length > 0) {\r\n        console.log('Using region IDs for filtering:', regionIds);\r\n        \r\n        // Use the first valid region ID for API call\r\n        const validRegionId = regionIds[0];\r\n        baseQueryParams.append('regionId', validRegionId);\r\n        console.log('Using region ID:', validRegionId);\r\n      }\r\n      \r\n      // Fetch brokers with a single API call first, then paginate if needed\r\n      let allBrokers = [];\r\n      const limit = 100; // Server's maximum allowed limit\r\n      \r\n      console.log('Fetching brokers with region IDs:', regionIds);\r\n      console.log('Base query params:', baseQueryParams.toString());\r\n      \r\n      // Make multiple API calls to get all brokers\r\n      let currentPage = 1;\r\n      let hasMorePages = true;\r\n      \r\n      while (hasMorePages) {\r\n      const queryParams = new URLSearchParams(baseQueryParams);\r\n        queryParams.append('page', currentPage);\r\n      queryParams.append('limit', limit);\r\n      \r\n      const queryString = queryParams.toString();\r\n      const apiUrlWithParams = queryString ? `${apiUrl}/brokers?${queryString}` : `${apiUrl}/brokers`;\r\n      \r\n        console.log(`Fetching brokers page ${currentPage}, URL:`, apiUrlWithParams);\r\n      \r\n      const response = await fetch(apiUrlWithParams, { method: 'GET' });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`Failed to fetch brokers: ${response.status}`);\r\n      }\r\n      \r\n      const data = await response.json();\r\n        console.log(`Brokers response for page ${currentPage}:`, data);\r\n        \r\n        // Extract brokers data following app pattern\r\n        let brokersData = [];\r\n        \r\n        console.log('API Response structure:', {\r\n        hasData: !!data?.data,\r\n        dataIsArray: Array.isArray(data?.data),\r\n        hasBrokers: !!data?.brokers,\r\n        brokersIsArray: Array.isArray(data?.brokers),\r\n        isArray: Array.isArray(data),\r\n        hasDataBrokers: !!data?.data?.brokers,\r\n          dataBrokersIsArray: Array.isArray(data?.data?.brokers),\r\n          dataKeys: data ? Object.keys(data) : [],\r\n          dataDataKeys: data?.data ? Object.keys(data.data) : []\r\n        });\r\n        \r\n        // Check if the response has the expected structure from your JSON\r\n        if (data?.data?.brokers) {\r\n          console.log('Found data.data.brokers, sample broker:', data.data.brokers[0]);\r\n          console.log('Sample broker keys:', data.data.brokers[0] ? Object.keys(data.data.brokers[0]) : 'No brokers');\r\n          console.log('Sample broker specializations:', data.data.brokers[0]?.specializations);\r\n          console.log('Sample broker firmName:', data.data.brokers[0]?.firmName);\r\n          console.log('Sample broker leadsCreated:', data.data.brokers[0]?.leadsCreated);\r\n        }\r\n        \r\n        // Try different data structures based on your JSON format\r\n        if (data?.data?.brokers && Array.isArray(data.data.brokers)) {\r\n          brokersData = data.data.brokers;\r\n          console.log(`Using data.data.brokers, found ${brokersData.length} brokers on page ${currentPage}`);\r\n      } else if (Array.isArray(data?.brokers)) {\r\n        brokersData = data.brokers;\r\n          console.log(`Using data.brokers, found ${brokersData.length} brokers on page ${currentPage}`);\r\n        } else if (Array.isArray(data?.data)) {\r\n          brokersData = data.data;\r\n          console.log(`Using data.data, found ${brokersData.length} brokers on page ${currentPage}`);\r\n      } else if (Array.isArray(data)) {\r\n        brokersData = data;\r\n          console.log(`Using data directly, found ${brokersData.length} brokers on page ${currentPage}`);\r\n        } else {\r\n          console.log('No valid brokers data found in response');\r\n          console.log('Full response:', data);\r\n          console.log('Response keys:', Object.keys(data || {}));\r\n      }\r\n      \r\n      if (brokersData.length > 0) {\r\n          allBrokers = allBrokers.concat(brokersData);\r\n          console.log(`Total brokers collected so far: ${allBrokers.length}`);\r\n          \r\n          // Check if we got fewer brokers than the limit (indicating last page)\r\n          if (brokersData.length < limit) {\r\n            hasMorePages = false;\r\n            console.log('Reached last page - fewer brokers than limit');\r\n          } else {\r\n            currentPage++;\r\n          }\r\n        } else {\r\n          hasMorePages = false;\r\n          console.log('No brokers found on page, stopping');\r\n        }\r\n      }\r\n      \r\n      console.log(`Fetched total of ${allBrokers.length} brokers across ${currentPage} pages`);\r\n      \r\n      if (allBrokers.length > 0) {\r\n        console.log('Raw broker data sample:', allBrokers[0]);\r\n        console.log('Available fields in broker:', Object.keys(allBrokers[0]));\r\n        \r\n        // Helper to compute a stable rating based on available broker data\r\n        const computeRating = (raw) => {\r\n          const leadsCount = raw?.leadsCreated?.count || 0;\r\n          const hasSpecializations = Array.isArray(raw?.specializations) && raw.specializations.length > 0;\r\n          const hasFirmName = typeof raw?.firmName === 'string' && raw.firmName.trim() !== '';\r\n          const isVerified = raw?.approvedByAdmin === 'unblocked';\r\n          let rating = 3.0;\r\n          if (leadsCount > 0) rating += 0.5;\r\n          if (hasSpecializations) rating += 0.3;\r\n          if (hasFirmName) rating += 0.2;\r\n          if (isVerified) rating += 0.5;\r\n          return Math.min(rating, 5.0);\r\n        };\r\n        \r\n        // Transform API data to match our component structure\r\n        const transformedBrokers = allBrokers.map((broker, index) => {\r\n          console.log(`Raw broker data for ${index}:`, broker);\r\n          console.log(`Available fields in broker:`, Object.keys(broker));\r\n          console.log(`Broker specializations:`, broker.specializations);\r\n          console.log(`Broker firmName:`, broker.firmName);\r\n          console.log(`Broker leadsCreated:`, broker.leadsCreated);\r\n          \r\n          const computedRating = computeRating(broker);\r\n          return {\r\n            _id: broker._id || undefined,\r\n            userIdRaw: (broker?.userId && typeof broker.userId === 'object') ? broker.userId._id : broker.userId,\r\n            id: broker._id || broker.id,\r\n            name: broker.name || 'Unknown Broker',\r\n            profileImage: broker.brokerImage || '/images/user-1.webp',\r\n            rating: computedRating,\r\n            email: broker.email || '',\r\n            phone: broker.phone || broker.whatsappNumber || '',\r\n            status: broker.approvedByAdmin === 'unblocked' ? 'Verified' : 'Active',\r\n            locations: broker.region ? broker.region.map(r => r.name) : [broker.city || 'Unknown'],\r\n            agency: broker.firmName || 'Unknown Agency',\r\n            experience: (() => {\r\n              if (typeof broker?.experience === 'number') return Math.max(0, Math.floor(broker.experience));\r\n              if (broker?.experience && typeof broker.experience === 'object' && typeof broker.experience.years === 'number') {\r\n                return Math.max(0, Math.floor(broker.experience.years));\r\n              }\r\n              if (!broker.createdAt) return 0;\r\n              const createdDate = new Date(broker.createdAt);\r\n              const currentDate = new Date();\r\n              const diffMs = currentDate - createdDate;\r\n              if (isNaN(diffMs) || diffMs <= 0) return 0;\r\n              const years = diffMs / (1000 * 60 * 60 * 24 * 365);\r\n              return Math.max(0, Math.floor(years));\r\n            })(),\r\n            languages: ['English', 'Hindi'], // Default languages\r\n            address: broker.address || broker.centerLocation || 'Unknown Address',\r\n            brokerTypes: broker.specializations || ['Real Estate Consulting'], // Map specializations to broker types\r\n            // Add the missing fields for proper data binding - use the raw broker data directly\r\n            specializations: broker.specializations || [],\r\n            firmName: broker.firmName || '',\r\n            leadsCreated: broker.leadsCreated || { count: 0, items: [] },\r\n            approvedByAdmin: broker.approvedByAdmin || '',\r\n            createdAt: broker.createdAt || ''\r\n          };\r\n        });\r\n        \r\n        console.log(`Fetched ${transformedBrokers.length} total brokers across ${currentPage - 1} pages`);\r\n        console.log('All brokers data:', transformedBrokers);\r\n        console.log('Sample transformed broker:', transformedBrokers[0]);\r\n        setBrokers(transformedBrokers);\r\n      } else {\r\n        throw new Error('No valid brokers data received');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching brokers:', error);\r\n      // Fallback to hardcoded brokers if API fails\r\n      const fallbackBrokers = [\r\n        {\r\n          id: 1,\r\n          name: 'Aarav Sharma',\r\n          profileImage: '/images/user-1.webp',\r\n          rating: 4.8,\r\n          email: 'aarav.sharma@brokeradda.com',\r\n          phone: '+91 98765 43210',\r\n          status: 'Verified',\r\n          locations: ['Mumbai', 'Pune'],\r\n          agency: 'Sharma Realty',\r\n          experience: 8,\r\n          languages: ['English', 'Hindi', 'Marathi'],\r\n          address: 'Bandra West, Mumbai, India',\r\n          brokerTypes: ['Luxury Homes', 'Investment Properties']\r\n        },\r\n        {\r\n          id: 2,\r\n          name: 'Priya Verma',\r\n          profileImage: '/images/user-2.jpeg',\r\n          rating: 4.9,\r\n          email: 'priya.verma@brokeradda.com',\r\n          phone: '+91 99887 66554',\r\n          status: 'Active',\r\n          locations: ['Delhi', 'Noida Sector 62'],\r\n          agency: 'Verma Associates',\r\n          experience: 12,\r\n          languages: ['English', 'Hindi'],\r\n          address: 'South Extension, New Delhi, India',\r\n          brokerTypes: ['Commercial Leasing', 'Rental Properties']\r\n        }\r\n      ];\r\n      setBrokers(fallbackBrokers);\r\n    } finally {\r\n      setBrokersLoading(false);\r\n    }\r\n  };\r\n\r\n  // Fetch brokers when region filter changes or on initial mount (with debouncing)\r\n  useEffect(() => {\r\n    // Only fetch if regionsData is loaded\r\n    if (regionsData.length === 0) {\r\n      console.log('Regions data not loaded yet, skipping broker fetch');\r\n      return;\r\n    }\r\n\r\n    // Debounce the API call to prevent multiple rapid calls\r\n    const timeoutId = setTimeout(() => {\r\n      // Convert region names to region IDs for API filtering\r\n      const regionIds = brokerFilters.region.map(regionName => {\r\n        const region = regionsData.find(r => {\r\n          if (typeof r === 'object' && r !== null) {\r\n            const regionNameFromData = r.name || r.city || r.state || r._id || String(r);\r\n            return regionNameFromData === regionName;\r\n          }\r\n          return String(r) === regionName;\r\n        });\r\n        \r\n        if (region && region._id && /^[0-9a-fA-F]{24}$/.test(region._id)) {\r\n          return region._id;\r\n        }\r\n        return null;\r\n      }).filter(Boolean);\r\n      \r\n      console.log('Region names:', brokerFilters.region);\r\n      console.log('Mapped region IDs:', regionIds);\r\n      fetchBrokers(regionIds);\r\n    }, 300); // 300ms debounce delay\r\n\r\n    // Cleanup timeout on unmount or dependency change\r\n    return () => clearTimeout(timeoutId);\r\n  }, [brokerFilters.region, brokerFilters.city, regionsData.length]); // also update when city changes\r\n\r\n  const brokerTypes = [\r\n    'Commercial Leasing',\r\n    'Luxury Homes', \r\n    'Investment Properties',\r\n    'Rental Properties',\r\n    'Land Development',\r\n    'Property Management',\r\n    'Real Estate Consulting'\r\n  ];\r\n  // Languages filter removed\r\n\r\n  const resetFilters = () => {\r\n    // Reset all filters to defaults (align with Leads reset behavior)\r\n    setNameSearchTerm('');\r\n    setRegionSearchTerm('');\r\n    setSortBy('rating-high');\r\n    setCurrentPage(1);\r\n    setItemsPerPage(9);\r\n\r\n    setBrokerFilters({\r\n      region: [],\r\n      experienceRange: [0, 20],\r\n      brokerType: [],\r\n      ratingRange: [0, 5],\r\n      languages: [],\r\n      showVerifiedOnly: false,\r\n      city: ''\r\n    });\r\n\r\n    // Trigger fresh fetch without any region filter\r\n    if (regionsData.length > 0) {\r\n      fetchBrokers([]);\r\n    }\r\n  };\r\n\r\n  const reactSelectStyles = {\r\n    control: (base, state) => ({\r\n      ...base,\r\n      fontSize: 12,\r\n      borderColor: state.isFocused ? '#3b82f6' : '#d1d5db', // blue-500 focus\r\n      boxShadow: 'none',\r\n      minHeight: 38,\r\n      cursor: 'pointer',\r\n      ':hover': { borderColor: '#60a5fa' } // blue-400 hover\r\n    }),\r\n    option: (base, state) => ({\r\n      ...base,\r\n      fontSize: 12,\r\n      backgroundColor: state.isSelected ? '#3b82f6' : state.isFocused ? '#eff6ff' : 'white', // blue-50 focus\r\n      color: state.isSelected ? 'white' : '#111827',\r\n      cursor: 'pointer'\r\n    }),\r\n    singleValue: (base) => ({ ...base, color: '#111827', fontSize: 12 }),\r\n    placeholder: (base) => ({ ...base, color: '#6b7280', fontSize: 12 }),\r\n    input: (base) => ({ ...base, fontSize: 12 }),\r\n    indicatorSeparator: () => ({ display: 'none' }),\r\n    multiValue: (base) => ({\r\n      ...base,\r\n      backgroundColor: '#dbeafe', // blue-100\r\n      borderRadius: 9999\r\n    }),\r\n    multiValueLabel: (base) => ({\r\n      ...base,\r\n      fontSize: 12,\r\n      color: '#1e3a8a', // blue-900\r\n      fontWeight: 600\r\n    }),\r\n    multiValueRemove: (base) => ({\r\n      ...base,\r\n      color: '#3b82f6',\r\n      ':hover': { backgroundColor: '#bfdbfe', color: '#1d4ed8' }\r\n    })\r\n  };\r\n\r\n\r\n  const handleBrokerTypeChange = (type) => {\r\n    setBrokerFilters(prev => ({\r\n      ...prev,\r\n      brokerType: prev.brokerType.includes(type)\r\n        ? prev.brokerType.filter(t => t !== type)\r\n        : [...prev.brokerType, type]\r\n    }));\r\n  };\r\n\r\n  const handleLanguageChange = (language) => {\r\n    setBrokerFilters(prev => ({\r\n      ...prev,\r\n      languages: prev.languages.includes(language)\r\n        ? prev.languages.filter(l => l !== language)\r\n        : [...prev.languages, language]\r\n    }));\r\n  };\r\n\r\n  const handleExperienceChange = (index, value) => {\r\n    const newRange = [...brokerFilters.experienceRange];\r\n    newRange[index] = parseInt(value);\r\n    setBrokerFilters(prev => ({\r\n      ...prev,\r\n      experienceRange: newRange\r\n    }));\r\n  };\r\n\r\n  const handleRatingChange = (index, value) => {\r\n    const newRange = [...brokerFilters.ratingRange];\r\n    newRange[index] = parseFloat(value);\r\n    setBrokerFilters(prev => ({\r\n      ...prev,\r\n      ratingRange: newRange\r\n    }));\r\n  };\r\n\r\n  const getStatusColor = (status) => {\r\n    switch (status) {\r\n      case 'Verified':\r\n        return 'bg-[#ECFDF5] text-[#0A421E]';\r\n      case 'Active':\r\n        return 'bg-blue-100 text-blue-800';\r\n      case 'Inactive':\r\n        return 'bg-gray-100 text-gray-800';\r\n      default:\r\n        return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  const renderStars = (rating) => {\r\n    return [...Array(5)].map((_, i) => (\r\n      <svg\r\n        key={i}\r\n        className={`w-4 h-4 ${i < Math.floor(rating) ? 'text-yellow-400' : 'text-gray-300'}`}\r\n        fill=\"currentColor\"\r\n        viewBox=\"0 0 20 20\"\r\n      >\r\n        <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\r\n      </svg>\r\n    ));\r\n  };\r\n\r\n  const getRatingPillClasses = (rating) => {\r\n    // Always use gray color for rating chips as requested\r\n    return 'bg-gray-200 text-gray-700 border-gray-300';\r\n  };\r\n\r\n  // Compute region options based on selected city (mirror Leads behavior)\r\n  const regionOptionsForUI = useMemo(() => {\r\n    if (!brokerFilters.city) return regions;\r\n    const cityLower = brokerFilters.city.toLowerCase();\r\n    const collected = new Set();\r\n    try {\r\n      // Prefer extracting from current brokers data\r\n      (brokers || []).forEach(b => {\r\n        const locations = Array.isArray(b.locations) ? b.locations : [];\r\n        const address = (b.address || '').toLowerCase();\r\n        const cityMatch = address.includes(cityLower) || locations.some(l => (l || '').toLowerCase().includes(cityLower));\r\n        if (cityMatch) {\r\n          locations.forEach(l => { if (l) collected.add(l); });\r\n        }\r\n      });\r\n    } catch {}\r\n    if (collected.size > 0) return Array.from(collected);\r\n    // Fallback: filter master regions list by city token inclusion\r\n    return regions.filter(r => (r || '').toLowerCase().includes(cityLower));\r\n  }, [brokerFilters.city, brokers, regions]);\r\n\r\n  // Filter brokers based on selected filters (client-side filtering)\r\n  const filteredBrokers = brokers.filter(broker => {\r\n    // City filter: backend already applies regionCity when city is selected.\r\n    // To avoid over-filtering due to string mismatches, skip client-side city filtering.\r\n    // Name search filter\r\n    if (nameSearchTerm.trim()) {\r\n      const nameMatch = broker.name.toLowerCase().includes(nameSearchTerm.toLowerCase().trim());\r\n      if (!nameMatch) return false;\r\n    }\r\n\r\n    // Region search filter\r\n    if (regionSearchTerm.trim()) {\r\n      const regionMatch = broker.locations.some(location => \r\n        location.toLowerCase().includes(regionSearchTerm.toLowerCase().trim())\r\n      );\r\n      if (!regionMatch) return false;\r\n    }\r\n\r\n    // Region filter (client-side backup - now using region IDs)\r\n    if (brokerFilters.region.length > 0) {\r\n      console.log('Client-side region filtering with names:', brokerFilters.region);\r\n      console.log('Broker locations:', broker.locations);\r\n      \r\n      const hasMatchingRegion = brokerFilters.region.some(selectedRegion => \r\n        broker.locations.some(brokerLocation => {\r\n          const brokerLoc = brokerLocation.toLowerCase().trim();\r\n          const selectedLoc = selectedRegion.toLowerCase().trim();\r\n          \r\n          console.log(`Comparing broker location \"${brokerLoc}\" with selected region \"${selectedLoc}\"`);\r\n          \r\n          // Exact match\r\n          if (brokerLoc === selectedLoc) {\r\n            console.log('✅ Exact match found');\r\n            return true;\r\n          }\r\n          \r\n          // Check if broker location contains the selected region as a complete word\r\n          const brokerWords = brokerLoc.split(/\\s+/);\r\n          const selectedWords = selectedLoc.split(/\\s+/);\r\n          \r\n          // If selected region has multiple words, check if all words are in broker location\r\n          if (selectedWords.length > 1) {\r\n            const allWordsMatch = selectedWords.every(word => brokerWords.includes(word));\r\n            console.log(`Multi-word check: ${allWordsMatch ? '✅' : '❌'}`);\r\n            return allWordsMatch;\r\n          }\r\n          \r\n          // If selected region is a single word, check if it's a complete word in broker location\r\n          if (selectedWords.length === 1) {\r\n            const singleWordMatch = brokerWords.includes(selectedWords[0]);\r\n            console.log(`Single word check: ${singleWordMatch ? '✅' : '❌'}`);\r\n            return singleWordMatch;\r\n          }\r\n          \r\n          return false;\r\n        })\r\n      );\r\n      \r\n      console.log(`Region filter result for ${broker.name}: ${hasMatchingRegion ? '✅ PASS' : '❌ FAIL'}`);\r\n      if (!hasMatchingRegion) return false;\r\n    }\r\n\r\n    // Experience filter\r\n    if (broker.experience < brokerFilters.experienceRange[0] || \r\n        broker.experience > brokerFilters.experienceRange[1]) {\r\n      console.log(`Broker ${broker.name} filtered out by experience: ${broker.experience} not in range [${brokerFilters.experienceRange[0]}, ${brokerFilters.experienceRange[1]}]`);\r\n      return false;\r\n    }\r\n\r\n\r\n    // Broker type filter\r\n    if (brokerFilters.brokerType.length > 0) {\r\n      const hasMatchingBrokerType = brokerFilters.brokerType.some(selectedType => \r\n        broker.brokerTypes && broker.brokerTypes.includes(selectedType)\r\n      );\r\n      if (!hasMatchingBrokerType) return false;\r\n    }\r\n\r\n    // Rating filter\r\n    if (broker.rating < brokerFilters.ratingRange[0] || \r\n        broker.rating > brokerFilters.ratingRange[1]) {\r\n      return false;\r\n    }\r\n\r\n    // Verified only filter\r\n    if (brokerFilters.showVerifiedOnly && broker.status !== 'Verified') {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  });\r\n\r\n  // Sort brokers based on selected sort option\r\n  const sortedBrokers = [...filteredBrokers].sort((a, b) => {\r\n    switch (sortBy) {\r\n      case 'rating-high':\r\n        return b.rating - a.rating;\r\n      case 'rating-low':\r\n        return a.rating - b.rating;\r\n      case 'experience-high':\r\n        return b.experience - a.experience;\r\n      case 'experience-low':\r\n        return a.experience - b.experience;\r\n      case 'name-asc':\r\n        return a.name.localeCompare(b.name);\r\n      case 'name-desc':\r\n        return b.name.localeCompare(a.name);\r\n      default:\r\n        return b.rating - a.rating;\r\n    }\r\n  });\r\n\r\n  // Pagination calculations\r\n  const totalItems = sortedBrokers.length;\r\n  const totalPages = Math.ceil(totalItems / itemsPerPage);\r\n  const startIndex = (currentPage - 1) * itemsPerPage;\r\n  const endIndex = startIndex + itemsPerPage;\r\n  const paginatedBrokers = sortedBrokers.slice(startIndex, endIndex);\r\n\r\n  // Reset to first page when filters change\r\n  useEffect(() => {\r\n    setCurrentPage(1);\r\n  }, [brokerFilters, sortBy]);\r\n\r\n  // Pagination handlers\r\n  const handlePageChange = (page) => {\r\n    setCurrentPage(page);\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    if (currentPage > 1) {\r\n      setCurrentPage(currentPage - 1);\r\n    }\r\n  };\r\n\r\n  const handleNext = () => {\r\n    if (currentPage < totalPages) {\r\n      setCurrentPage(currentPage + 1);\r\n    }\r\n  };\r\n\r\n  console.log('Total brokers:', brokers.length);\r\n  console.log('Filtered brokers:', filteredBrokers.length);\r\n  console.log('Sorted brokers:', sortedBrokers.length);\r\n  console.log('Current filters:', brokerFilters);\r\n  console.log('Experience range filter:', brokerFilters.experienceRange);\r\n  console.log('Pagination - Current page:', currentPage, 'Total pages:', totalPages, 'Items per page:', itemsPerPage);\r\n\r\n  return (\r\n    <div className=\"grid grid-cols-12 gap-8\">\r\n      {/* Filter Sidebar - 3 columns */}\r\n      <div className=\"col-span-3\">\r\n        {isLoading ? (\r\n          <div className=\"bg-white rounded-lg p-6\">\r\n            <div className=\"space-y-6\">\r\n              {/* Filter Header Skeleton */}\r\n              <div className=\"flex items-center mb-6 pb-4 border-b border-orange-200\">\r\n                <div className=\"w-5 h-5 bg-gray-200 rounded mr-2\"></div>\r\n                <div className=\"h-6 bg-gray-200 rounded w-32\"></div>\r\n              </div>\r\n              \r\n              {/* Location/Region Filter Skeleton */}\r\n              <div className=\"mb-6 pb-6 border-b border-orange-200\">\r\n                <div className=\"h-4 bg-gray-200 rounded w-24 mb-4\"></div>\r\n                <div className=\"h-8 bg-gray-200 rounded w-full\"></div>\r\n              </div>\r\n              \r\n              {/* Experience Years Filter Skeleton */}\r\n              <div className=\"mb-6 pb-6 border-b border-orange-200\">\r\n                <div className=\"h-4 bg-gray-200 rounded w-28 mb-4\"></div>\r\n                <div className=\"h-2 bg-gray-200 rounded\"></div>\r\n              </div>\r\n              \r\n              \r\n              {/* Broker Type Filter Skeleton */}\r\n              <div className=\"mb-6 pb-6 border-b border-orange-200\">\r\n                <div className=\"h-4 bg-gray-200 rounded w-20 mb-4\"></div>\r\n                <div className=\"space-y-3\">\r\n                  {[1,2,3,4].map((i) => (\r\n                    <div key={i} className=\"flex items-center\">\r\n                      <div className=\"w-4 h-4 bg-gray-200 rounded\"></div>\r\n                      <div className=\"ml-3 h-4 bg-gray-200 rounded w-24\"></div>\r\n                    </div>\r\n                  ))}\r\n                  <div className=\"flex items-center mt-3\">\r\n                    <div className=\"w-4 h-4 bg-gray-200 rounded\"></div>\r\n                    <div className=\"ml-3 h-4 bg-gray-200 rounded w-32\"></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              {/* Rating Filter Skeleton */}\r\n              <div className=\"mb-6 pb-6 border-b border-orange-200\">\r\n                <div className=\"h-4 bg-gray-200 rounded w-12 mb-4\"></div>\r\n                <div className=\"h-2 bg-gray-200 rounded\"></div>\r\n              </div>\r\n              \r\n              \r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"bg-white rounded-lg p-4 shadow-sm border border-gray-200 space-y-5\">\r\n          \r\n          {/* Filter Results Heading */}\r\n          <div className=\"flex items-center gap-2 mb-4 pb-4 border-b border-gray-200\">\r\n            <svg className=\"w-5 h-5 text-gray-800\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.293A1 1 0 013 6.586V4z\" />\r\n            </svg>\r\n            <h3 style={{ fontSize: '20px', lineHeight: '28px', fontWeight: '600', color: '#171A1FFF' }}>Filter Results</h3>\r\n          </div>\r\n\r\n          {/* Region/Area */}\r\n          <div>\r\n            <label className=\"block mb-2\" style={{ fontFamily: 'Inter', fontSize: '13px', lineHeight: '16px', fontWeight: '500', color: '#565D6DFF' }}>Region/Area</label>\r\n            {regionsLoading ? (\r\n              <div className=\"h-9 bg-gray-100 rounded border border-gray-200 animate-pulse\"></div>\r\n            ) : regions.length === 0 ? (\r\n              <div className=\"text-sm text-gray-500\">No regions available</div>\r\n            ) : (\r\n              <Select\r\n                instanceId=\"brokers-region-select\"\r\n                styles={reactSelectStyles}\r\n                className=\"cursor-pointer\"\r\n                options={regions.map(r => ({ value: r, label: r }))}\r\n                value={brokerFilters.region && brokerFilters.region.length > 0 ? { value: brokerFilters.region[0], label: brokerFilters.region[0] } : null}\r\n                onChange={(opt) => setBrokerFilters(prev => ({\r\n                  ...prev, \r\n                  region: opt ? [opt.value] : []\r\n                }))}\r\n                isSearchable\r\n                isClearable\r\n                placeholder=\"Select Region\"\r\n              />\r\n            )}\r\n          </div>\r\n\r\n          {/* Specialization/Property Type */}\r\n          <div>\r\n            <label className=\"block mb-3\" style={{ fontFamily: 'Inter', fontSize: '13px', lineHeight: '16px', fontWeight: '500', color: '#565D6DFF' }}>Specialization/Property Type</label>\r\n            <div className=\"grid grid-cols-2 gap-3\">\r\n              {['Residential', 'Commercial', 'Plot', 'Rental', 'Industrial'].map((type) => {\r\n                const selected = brokerFilters.brokerType.includes(type);\r\n                return (\r\n                  <label key={type} className=\"flex items-center cursor-pointer\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={selected}\r\n                      onChange={() => handleBrokerTypeChange(type)}\r\n                      className=\"w-4 h-4 text-green-900 accent-green-900 border-gray-300 rounded focus:ring-green-900\"\r\n                    />\r\n                      <span className=\"ml-3\" style={{ fontFamily: 'Inter', fontSize: '13px', lineHeight: '16px', fontWeight: '400', color: '#171A1FFF' }}>{type}</span>\r\n                  </label>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Rating */}\r\n          <div>\r\n            <label className=\"block mb-2\" style={{ fontFamily: 'Inter', fontSize: '13px', lineHeight: '16px', fontWeight: '500', color: '#565D6DFF' }}>Rating</label>\r\n            <Select\r\n              instanceId=\"rating-select\"\r\n              styles={reactSelectStyles}\r\n              className=\"cursor-pointer\"\r\n              options={[\r\n                { value: '4', label: '4★ and above' },\r\n                { value: '3', label: '3★ and above' },\r\n                { value: '2', label: '2★ and above' },\r\n                { value: '1', label: '1★ and above' }\r\n              ]}\r\n              value={brokerFilters.ratingRange[0] >= 4 ? { value: '4', label: '4★ and above' } : \r\n                     brokerFilters.ratingRange[0] >= 3 ? { value: '3', label: '3★ and above' } :\r\n                     brokerFilters.ratingRange[0] >= 2 ? { value: '2', label: '2★ and above' } :\r\n                     { value: '1', label: '1★ and above' }}\r\n              onChange={(opt) => setBrokerFilters(prev => ({ ...prev, ratingRange: [parseFloat(opt?.value || 0), 5] }))}\r\n              placeholder=\"Select Rating\"\r\n            />\r\n          </div>\r\n\r\n          {/* Show Verified Brokers Only */}\r\n          <div>\r\n            <label className=\"flex items-center cursor-pointer\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={brokerFilters.showVerifiedOnly}\r\n                onChange={(e) => setBrokerFilters(prev => ({ ...prev, showVerifiedOnly: e.target.checked }))}\r\n                className=\"w-4 h-4 text-green-900 accent-green-900 border-gray-300 rounded focus:ring-green-900\"\r\n              />\r\n              <span className=\"ml-3\" style={{ fontFamily: 'Inter', fontSize: '13px', lineHeight: '16px', fontWeight: '400', color: '#171A1FFF' }}>Show Verified Brokers Only</span>\r\n            </label>\r\n          </div>\r\n\r\n          {/* Experience/Activity Level */}\r\n          <div>\r\n            <label className=\"block mb-2\" style={{ fontFamily: 'Inter', fontSize: '13px', lineHeight: '16px', fontWeight: '500', color: '#565D6DFF' }}>Experience/Activity Level</label>\r\n            <Select\r\n              instanceId=\"experience-select\"\r\n              styles={reactSelectStyles}\r\n              className=\"cursor-pointer\"\r\n              options={[\r\n                { value: '5', label: '5+ Years' },\r\n                { value: '10', label: '10+ Years' },\r\n                { value: '15', label: '15+ Years' },\r\n                { value: '20', label: '20+ Years' }\r\n              ]}\r\n              value={brokerFilters.experienceRange[0] >= 20 ? { value: '20', label: '20+ Years' } :\r\n                     brokerFilters.experienceRange[0] >= 15 ? { value: '15', label: '15+ Years' } :\r\n                     brokerFilters.experienceRange[0] >= 10 ? { value: '10', label: '10+ Years' } :\r\n                     brokerFilters.experienceRange[0] >= 5 ? { value: '5', label: '5+ Years' } : null}\r\n              onChange={(opt) => setBrokerFilters(prev => ({ ...prev, experienceRange: [parseInt(opt?.value || 0), 20] }))}\r\n              placeholder=\"Select Experience\"\r\n            />\r\n          </div>\r\n\r\n          {/* Leads Closed/Deals Completed */}\r\n          <div>\r\n            <label className=\"block mb-2\" style={{ fontFamily: 'Inter', fontSize: '13px', lineHeight: '16px', fontWeight: '500', color: '#565D6DFF' }}>Leads Closed/Deals Completed</label>\r\n            <Select\r\n              instanceId=\"deals-select\"\r\n              styles={reactSelectStyles}\r\n              className=\"cursor-pointer\"\r\n              options={[\r\n                { value: '50', label: '50+' },\r\n                { value: '100', label: '100+' },\r\n                { value: '200', label: '200+' },\r\n                { value: '500', label: '500+' }\r\n              ]}\r\n              placeholder=\"Select Deals\"\r\n            />\r\n          </div>\r\n\r\n          {/* Badges */}\r\n          <div>\r\n            <label className=\"block mb-3\" style={{ fontFamily: 'Inter', fontSize: '13px', lineHeight: '16px', fontWeight: '500', color: '#565D6DFF' }}>Badges</label>\r\n            <div className=\"space-y-2\">\r\n              <label className=\"flex items-center cursor-pointer\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"w-4 h-4 text-green-900 accent-green-900 border-gray-300 rounded focus:ring-green-900\"\r\n                />\r\n                <span className=\"ml-3\" style={{ fontFamily: 'Inter', fontSize: '13px', lineHeight: '20px', fontWeight: '400', color: '#171A1FFF' }}>Verified</span>\r\n              </label>\r\n              <label className=\"flex items-center cursor-pointer\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"w-4 h-4 text-green-900 accent-green-900 border-gray-300 rounded focus:ring-green-900\"\r\n                />\r\n                <span className=\"ml-3\" style={{ fontFamily: 'Inter', fontSize: '13px', lineHeight: '20px', fontWeight: '400', color: '#171A1FFF' }}>Top Badge</span>\r\n              </label>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Secondary Filters Toggle */}\r\n          <div className=\"pt-4 border-t border-gray-200\">\r\n            <button\r\n              onClick={() => setShowSecondaryFilters(!showSecondaryFilters)}\r\n              className=\"flex items-center justify-between w-full text-[12px] font-medium text-gray-700 hover:text-gray-900\"\r\n            >\r\n              <span>More Filters</span>\r\n              <svg className=\"w-4 h-4 transition-transform\" style={{ transform: showSecondaryFilters ? 'rotate(180deg)' : 'rotate(0deg)' }} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 9l-7 7-7-7\" />\r\n              </svg>\r\n            </button>\r\n          </div>\r\n\r\n          {/* Secondary Filters */}\r\n          {showSecondaryFilters && (\r\n            <div className=\"space-y-5 pt-4\">\r\n              {/* Firm/Company Name */}\r\n              <div>\r\n                <label className=\"block mb-2\" style={{ fontFamily: 'Inter', fontSize: '13px', lineHeight: '16px', fontWeight: '500', color: '#565D6DFF' }}>Firm/Company Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"e.g., ABC Realty\"\r\n                  value={secondaryFilters.companyName}\r\n                  onChange={(e) => setSecondaryFilters(prev => ({ ...prev, companyName: e.target.value }))}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-900 focus:border-green-900 text-sm\"\r\n                />\r\n              </div>\r\n\r\n              {/* Language Preference */}\r\n              <div>\r\n                <label className=\"block mb-2\" style={{ fontFamily: 'Inter', fontSize: '13px', lineHeight: '16px', fontWeight: '500', color: '#565D6DFF' }}>Language Preference</label>\r\n                <Select\r\n                  instanceId=\"language-select\"\r\n                  styles={reactSelectStyles}\r\n                  className=\"cursor-pointer\"\r\n                  options={[\r\n                    { value: 'english', label: 'English' },\r\n                    { value: 'hindi', label: 'Hindi' },\r\n                    { value: 'other', label: 'Other' }\r\n                  ]}\r\n                  value={secondaryFilters.language ? { value: secondaryFilters.language, label: secondaryFilters.language } : null}\r\n                  onChange={(opt) => setSecondaryFilters(prev => ({ ...prev, language: opt?.value || '' }))}\r\n                  placeholder=\"Select Language\"\r\n                />\r\n              </div>\r\n\r\n              {/* Broker Status */}\r\n              <div>\r\n                <label className=\"block mb-3\" style={{ fontFamily: 'Inter', fontSize: '13px', lineHeight: '16px', fontWeight: '500', color: '#565D6DFF' }}>Broker Status</label>\r\n                <div className=\"grid grid-cols-2 gap-3\">\r\n                  {['Online', 'Busy', 'Active', 'Offline'].map((status) => (\r\n                    <label key={status} className=\"flex items-center cursor-pointer\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={secondaryFilters.brokerStatus.includes(status)}\r\n                        onChange={(e) => {\r\n                          if (e.target.checked) {\r\n                            setSecondaryFilters(prev => ({ ...prev, brokerStatus: [...prev.brokerStatus, status] }));\r\n                          } else {\r\n                            setSecondaryFilters(prev => ({ ...prev, brokerStatus: prev.brokerStatus.filter(s => s !== status) }));\r\n                          }\r\n                        }}\r\n                        className=\"w-4 h-4 text-green-900 accent-green-900 border-gray-300 rounded focus:ring-green-900\"\r\n                      />\r\n                      <span className=\"ml-3\" style={{ fontFamily: 'Inter', fontSize: '13px', lineHeight: '16px', fontWeight: '400', color: '#171A1FFF' }}>{status}</span>\r\n                    </label>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n\r\n              {/* Response Rate */}\r\n              <div>\r\n                <label className=\"block mb-3\" style={{ fontFamily: 'Inter', fontSize: '13px', lineHeight: '16px', fontWeight: '500', color: '#565D6DFF' }}>Response Rate</label>\r\n                <div className=\"space-y-2\">\r\n                  {['Fast Responders', 'Highly Active'].map((rate) => (\r\n                    <label key={rate} className=\"flex items-center cursor-pointer\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={secondaryFilters.responseRate.includes(rate)}\r\n                        onChange={(e) => {\r\n                          if (e.target.checked) {\r\n                            setSecondaryFilters(prev => ({ ...prev, responseRate: [...prev.responseRate, rate] }));\r\n                          } else {\r\n                            setSecondaryFilters(prev => ({ ...prev, responseRate: prev.responseRate.filter(r => r !== rate) }));\r\n                          }\r\n                        }}\r\n                        className=\"w-4 h-4 text-green-900 accent-green-900 border-gray-300 rounded focus:ring-green-900\"\r\n                      />\r\n                      <span className=\"ml-3\" style={{ fontFamily: 'Inter', fontSize: '13px', lineHeight: '16px', fontWeight: '400', color: '#171A1FFF' }}>{rate}</span>\r\n                    </label>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n\r\n              {/* Joined Date */}\r\n              <div>\r\n                <label className=\"block mb-2\" style={{ fontFamily: 'Inter', fontSize: '13px', lineHeight: '16px', fontWeight: '500', color: '#565D6DFF' }}>Joined Date</label>\r\n                <Select\r\n                  instanceId=\"joined-date-select\"\r\n                  styles={reactSelectStyles}\r\n                  className=\"cursor-pointer\"\r\n                  options={[\r\n                    { value: 'newest', label: 'Newest' },\r\n                    { value: 'oldest', label: 'Oldest' },\r\n                    { value: 'recent', label: 'Recently Joined' }\r\n                  ]}\r\n                  value={secondaryFilters.joinedDate ? { value: secondaryFilters.joinedDate, label: secondaryFilters.joinedDate } : null}\r\n                  onChange={(opt) => setSecondaryFilters(prev => ({ ...prev, joinedDate: opt?.value || '' }))}\r\n                  placeholder=\"Select Date\"\r\n                />\r\n              </div>\r\n\r\n              {/* Sort By */}\r\n              <div>\r\n                <label className=\"block mb-2\" style={{ fontFamily: 'Inter', fontSize: '12px', lineHeight: '16px', fontWeight: '500', color: '#565D6DFF' }}>Sort By</label>\r\n                <Select\r\n                  instanceId=\"sort-select\"\r\n                  styles={reactSelectStyles}\r\n                  className=\"cursor-pointer\"\r\n                  options={[\r\n                    { value: 'rating-high', label: 'Top Rated' },\r\n                    { value: 'rating-low', label: 'Lowest Rated' },\r\n                    { value: 'newest', label: 'Newest' },\r\n                    { value: 'oldest', label: 'Oldest' }\r\n                  ]}\r\n                  value={secondaryFilters.sortBy ? { value: secondaryFilters.sortBy, label: secondaryFilters.sortBy } : { value: 'rating-high', label: 'Top Rated' }}\r\n                  onChange={(opt) => setSecondaryFilters(prev => ({ ...prev, sortBy: opt?.value || 'rating-high' }))}\r\n                />\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Action Buttons - Always Visible */}\r\n          <div className=\"pt-4\">\r\n            <div className=\"flex gap-3\">\r\n              <button\r\n                onClick={() => {\r\n                  setSecondaryFilters({\r\n                    companyName: '',\r\n                    language: '',\r\n                    brokerStatus: [],\r\n                    responseRate: [],\r\n                    joinedDate: '',\r\n                    sortBy: 'rating-high'\r\n                  });\r\n                  // Reset primary filters as well\r\n                  setBrokerFilters({\r\n                    region: [],\r\n                    brokerType: [],\r\n                    ratingRange: [0, 5],\r\n                    experienceRange: [0, 999],\r\n                    showVerifiedOnly: false\r\n                  });\r\n                }}\r\n                style={{\r\n                  fontFamily: 'Inter',\r\n                  fontSize: '14px',\r\n                  lineHeight: '22px',\r\n                  fontWeight: '500',\r\n                  color: '#171A1FFF'\r\n                }}\r\n                className=\"flex-1 px-3 py-2 border border-gray-300 rounded-lg bg-white hover:bg-white hover:border-gray-300 active:bg-white transition-colors\"\r\n              >\r\n                Reset\r\n              </button>\r\n              <button\r\n                onClick={() => {\r\n                  // Apply filters logic here\r\n                  setShowSecondaryFilters(false);\r\n                }}\r\n                className=\"flex-1 px-3 py-2 bg-green-900 rounded-lg text-sm font-medium text-white hover:bg-green-800 transition-colors\"\r\n                style={{\r\n                  fontFamily: 'Inter',\r\n                  fontSize: '14px',\r\n                  lineHeight: '22px',\r\n                  fontWeight: '500'\r\n                }}\r\n              >\r\n                Apply Filters\r\n              </button>\r\n            </div>\r\n          </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Brokers Grid - 9 columns */}\r\n      <div className=\"col-span-9\">\r\n        {/* Tabs Bar */}\r\n        <TabsBar activeTab={activeTab} setActiveTab={setActiveTab} />\r\n\r\n        {/* Header with heading */}\r\n        <div className=\"mb-6\">\r\n          <h2 className=\"text-[18px] font-semibold text-gray-900\">\r\n            Broker Search Results ({totalItems} Found)\r\n          </h2>\r\n        </div>\r\n        \r\n        {/* Brokers Grid */}\r\n        {isLoading || brokersLoading ? (\r\n          <div className=\"grid grid-cols-1 gap-4 lg:gap-6\">\r\n            {[1,2,3,4,5,6].map((i) => (\r\n              <div key={i} className=\"bg-white border border-gray-100 rounded-2xl p-6 shadow-sm\">\r\n                {/* Header: Avatar, name, rating pill */}\r\n                <div className=\"flex items-start gap-3 mb-4\">\r\n                  <div className=\"flex flex-col items-center\">\r\n                    <div className=\"w-18 h-18 bg-gray-200 rounded-full\"></div>\r\n                    <div className=\"mt-2 inline-flex items-center gap-1 px-2 py-1 rounded-full border bg-gray-100\">\r\n                      <div className=\"w-3 h-3 bg-gray-200 rounded\"></div>\r\n                      <div className=\"w-6 h-3 bg-gray-200 rounded\"></div>\r\n            </div>\r\n                  </div>\r\n                  <div className=\"flex-1\">\r\n                    <div className=\"h-4 bg-gray-200 rounded w-32 mb-2\"></div>\r\n                    <div className=\"h-3 bg-gray-200 rounded w-20\"></div>\r\n                </div>\r\n              </div>\r\n                  \r\n                {/* Contact (aligned like live card) */}\r\n                <div className=\"ml-20 mt-2 space-y-2 mb-2\">\r\n                  <div className=\"flex items-center\">\r\n                    <div className=\"w-4 h-4 bg-gray-200 rounded mr-2\"></div>\r\n                    <div className=\"h-4 bg-gray-200 rounded w-40\"></div>\r\n                  </div>\r\n                  <div className=\"flex items-center\">\r\n                    <div className=\"w-4 h-4 bg-gray-200 rounded mr-2\"></div>\r\n                    <div className=\"h-4 bg-gray-200 rounded w-32\"></div>\r\n          </div>\r\n        </div>\r\n\r\n                {/* Status and Locations chips */}\r\n                <div className=\"ml-20 mb-3\">\r\n                  <div className=\"flex flex-wrap gap-1\">\r\n                    <div className=\"h-5 bg-gray-200 rounded-full w-16\"></div>\r\n                    <div className=\"h-5 bg-gray-200 rounded-full w-20\"></div>\r\n                    <div className=\"h-5 bg-gray-200 rounded-full w-16\"></div>\r\n                    </div>\r\n                </div>\r\n\r\n                \r\n\r\n                {/* Agency and Experience */}\r\n                <div className=\"ml-20 flex items-center mb-3\">\r\n                  <div className=\"w-4 h-4 bg-gray-200 rounded mr-2\"></div>\r\n                    <div>\r\n                    <div className=\"h-4 bg-gray-200 rounded w-28 mb-1\"></div>\r\n                    <div className=\"h-3 bg-gray-200 rounded w-20\"></div>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                {/* Address */}\r\n                <div className=\"ml-20 mb-4\">\r\n                  <div className=\"flex items-center\">\r\n                    <div className=\"w-4 h-4 bg-gray-200 rounded mr-2\"></div>\r\n                    <div className=\"h-4 bg-gray-200 rounded w-40\"></div>\r\n                  </div>\r\n                  </div>\r\n                  \r\n                {/* Action Buttons (two) */}\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div className=\"flex-1 h-9 bg-gray-200 rounded-full mr-2\"></div>\r\n                  <div className=\"flex-1 h-9 bg-gray-200 rounded-full\"></div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : totalItems === 0 ? (\r\n          <div className=\"flex flex-col items-center justify-center py-16 px-4\">\r\n            <div className=\"text-center\">\r\n              <div className=\"mx-auto flex items-center justify-center h-24 w-24 rounded-full bg-gray-100 mb-6\">\r\n                <svg className=\"h-12 w-12 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z\" />\r\n                </svg>\r\n              </div>\r\n              <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No Brokers Found</h3>\r\n              <p className=\"text-gray-500 mb-6 max-w-sm\">\r\n                We couldn't find any brokers matching your current filters. Try adjusting your search criteria.\r\n              </p>\r\n              <button\r\n                onClick={resetFilters}\r\n                className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-[#0A421E] hover:bg-[#0b4f24] focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#0A421E] transition-colors\"\r\n              >\r\n                <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\r\n                </svg>\r\n                Reset Filters\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"grid grid-cols-1 gap-4 lg:gap-6\">\r\n            {paginatedBrokers.map((broker) => {\r\n              console.log('Rendering broker card for:', broker.name, {\r\n                specializations: broker.specializations,\r\n                firmName: broker.firmName,\r\n                leadsCreated: broker.leadsCreated,\r\n                locations: broker.locations\r\n              });\r\n              \r\n              // Use raw broker data if transformed data is missing\r\n              const actualSpecializations = broker.specializations || [];\r\n              const actualFirmName = broker.firmName || '';\r\n              const actualLeadsCreated = broker.leadsCreated || { count: 0, items: [] };\r\n              const actualLocations = broker.locations || [];\r\n              \r\n              console.log('Actual data for', broker.name, {\r\n                actualSpecializations,\r\n                actualFirmName,\r\n                actualLeadsCreated,\r\n                actualLocations\r\n              });\r\n              \r\n              return (\r\n           <div\r\n  key={broker.id}\r\n  className=\"relative bg-white rounded-2xl p-6 shadow-md hover:shadow-lg transition-all duration-300 border border-gray-200 cursor-pointer\"\r\n  onClick={() => {\r\n    const brokerId = broker.userIdRaw || broker.userId || broker._id || broker.id;\r\n    router.push(`/broker-details/${brokerId}`);\r\n  }}\r\n  role=\"button\"\r\n  aria-label={`Open details for ${broker.name || 'broker'}`}\r\n>\r\n  {/* Header */}\r\n  <div className=\"flex items-start gap-4 mb-5\">\r\n    {/* Avatar + Rating */}\r\n    <div className=\"relative flex flex-col items-center\">\r\n      <img\r\n        src={broker.profileImage}\r\n        alt={broker.name}\r\n        className=\"w-18 h-18 rounded-full object-cover\"\r\n      />\r\n\r\n      {/* Rating chip - positioned above image */}\r\n      <span\r\n        className={`mt-[-20] inline-flex items-center gap-1 px-2.5 py-1 rounded-lg bg-gray-100 border border-gray-200`}\r\n      >\r\n        <svg\r\n          className=\"w-3 h-3 text-yellow-500\"\r\n          fill=\"currentColor\"\r\n          viewBox=\"0 0 20 20\"\r\n        >\r\n          <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\r\n        </svg>\r\n        <span className=\"text-[12px] font-semibold text-gray-800\">\r\n          {(() => {\r\n            let rating = 3.0;\r\n            const leadsCount = broker.leadsCreated?.count || 0;\r\n            if (leadsCount > 0) rating += 0.5;\r\n            if ((broker.specializations || []).length > 0) rating += 0.3;\r\n            if (broker.firmName) rating += 0.2;\r\n            if (broker.approvedByAdmin === 'unblocked') rating += 0.5;\r\n            return Math.min(rating, 5.0).toFixed(1);\r\n          })()}\r\n        </span>\r\n      </span>\r\n    </div>\r\n\r\n    {/* Name + Details */}\r\n    <div className=\"flex-1\">\r\n      {/* Name + verified */}\r\n      <div className=\"flex items-center gap-2 mb-1\">\r\n        <h3 className=\"font-inter text-[16px] leading-[22px] font-semibold text-[#171A1FFF]\">\r\n          {broker.name}\r\n        </h3>\r\n         {broker.approvedByAdmin === 'unblocked' && (\r\n           <span\r\n  className=\"inline-flex items-center justify-center w-5 h-5 rounded-full border border-[#12B76A] text-[#12B76A] bg-white\"\r\n  title=\"Verified\"\r\n  aria-label=\"Verified\"\r\n>\r\n  <svg\r\n    className=\"w-3 h-3\"\r\n    fill=\"none\"\r\n    stroke=\"currentColor\"\r\n    strokeWidth=\"2.5\"\r\n    viewBox=\"0 0 24 24\"\r\n  >\r\n    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M5 13l4 4L19 7\" />\r\n  </svg>\r\n</span>\r\n         )}\r\n      </div>\r\n\r\n      {/* Specialization */}\r\n      <div className=\"font-inter text-[12px] leading-[16px] font-normal text-[#565D6DFF] mb-1\">\r\n        {actualSpecializations.length > 0 ? (\r\n          <>\r\n            {actualSpecializations.slice(0, 1).map((type, i) => (\r\n              <span key={i}>{type}</span>\r\n            ))}\r\n            {actualSpecializations.length > 1 && (\r\n              <span> +{actualSpecializations.length - 1} more</span>\r\n            )}\r\n          </>\r\n        ) : (\r\n          <span>General Broker</span>\r\n        )}\r\n      </div>\r\n\r\n      {/* Firm name */}\r\n      {/* Firm name + Experience (same row) */}\r\n<div className=\"flex items-center gap-4 mb-3\">\r\n  {/* Firm */}\r\n  <span className=\"inline-flex items-center gap-1.5\">\r\n    <svg className=\"w-4 h-4 text-[#565D6DFF]\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4\" />\r\n    </svg>\r\n    <span className=\"font-inter text-[12px] leading-[16px] font-normal text-[#565D6DFF]\">\r\n      {actualFirmName || 'Independent Broker'}\r\n    </span>\r\n  </span>\r\n\r\n  {/* Experience */}\r\n  <span className=\"inline-flex items-center gap-1.5\">\r\n   \r\n    <span className=\"font-inter text-[12px] leading-[16px] font-normal text-[#565D6DFF]\">\r\n      {`${Math.max(0, parseInt(broker.experience ?? 0))} years experience`}\r\n    </span>\r\n  </span>\r\n</div>\r\n\r\n\r\n      \r\n    </div>\r\n  </div>\r\n\r\n  {/* Address Chip */}\r\n  {broker.address && (\r\n    <div className=\"mb-3 px-4 py-2 rounded-md border border-yellow-300 bg-yellow-50\">\r\n      <div className=\"flex items-center gap-2\">\r\n        <svg\r\n          className=\"w-4 h-4 text-[#171A1FFF]\"\r\n          fill=\"none\"\r\n          stroke=\"currentColor\"\r\n          viewBox=\"0 0 24 24\"\r\n          strokeWidth=\"2\"\r\n        >\r\n          <path\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n            d=\"M21 10c0 7-9 13-9 13S3 17 3 10a9 9 0 0 1 18 0z\"\r\n          />\r\n          <circle cx=\"12\" cy=\"10\" r=\"3\" />\r\n        </svg>\r\n        <div className=\"font-inter text-[12px] leading-[16px] font-normal text-[#19191FFF]\">\r\n          {broker.address}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )}\r\n\r\n  {/* Location + Leads */}\r\n  <div className=\"flex flex-wrap gap-2 mb-4\">\r\n    {actualLocations.slice(0, 1).map((location, i) => (\r\n      <span\r\n        key={i}\r\n        className=\"px-3 py-1.5 bg-gray-100 text-gray-700 text-xs font-medium rounded-md flex items-center gap-2 border border-gray-200\"\r\n      >\r\n        <svg\r\n          className=\"w-4 h-4 text-gray-800\"\r\n          fill=\"none\"\r\n          stroke=\"currentColor\"\r\n          viewBox=\"0 0 24 24\"\r\n          strokeWidth=\"2\"\r\n        >\r\n          <path\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n            d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\"\r\n          />\r\n          <path\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n            strokeWidth=\"2\"\r\n            d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\"\r\n          />\r\n        </svg>\r\n        <span>{location}</span>\r\n      </span>\r\n    ))}\r\n\r\n    <span className=\"px-3 py-1.5 bg-gray-100 text-gray-700 text-xs font-medium rounded-md flex items-center gap-2 border border-gray-200\">\r\n      <svg\r\n        className=\"w-4 h-4 text-gray-800\"\r\n        fill=\"none\"\r\n        stroke=\"currentColor\"\r\n        viewBox=\"0 0 24 24\"\r\n        strokeWidth=\"2\"\r\n      >\r\n        <path\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n          strokeWidth=\"2\"\r\n          d=\"M3 12l9-9 9 9M5 10v10a1 1 0 001 1h3v-5a1 1 0 011-1h2a1 1 0 011 1v5h3a1 1 0 001-1V10\"\r\n        />\r\n      </svg>\r\n      <span>{actualLeadsCreated.count || 0} leads</span>\r\n    </span>\r\n  </div>\r\n\r\n  {/* Top-right Actions */}\r\n  <div className=\"absolute top-6 right-6 flex items-center gap-2\">\r\n    <button\r\n      onClick={(e) => {\r\n        e.stopPropagation();\r\n        const brokerId = broker.userIdRaw || broker.userId || broker._id || broker.id;\r\n        router.push(`/broker-details/${brokerId}`);\r\n      }}\r\n      className=\"p-2\"\r\n      title=\"View Details\"\r\n      aria-label=\"View Details\"\r\n    >\r\n      <svg\r\n        className=\"w-5 h-5 text-green-900\"\r\n        fill=\"none\"\r\n        stroke=\"currentColor\"\r\n        viewBox=\"0 0 24 24\"\r\n        strokeWidth=\"2\"\r\n      >\r\n        <path\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n          d=\"M2.458 12C3.732 7.943 7.523 5 12 5s8.268 2.943 9.542 7c-1.274 4.057-5.065 7-9.542 7s-8.268-2.943-9.542-7z\"\r\n        />\r\n        <path\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n          d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\r\n        />\r\n      </svg>\r\n    </button>\r\n\r\n    <button\r\n      onClick={(e) => {\r\n        e.stopPropagation();\r\n        const brokerId = broker.userIdRaw || broker.userId || broker._id || broker.id;\r\n        router.push(`/broker-details/${brokerId}?chat=1`);\r\n      }}\r\n      className=\"p-2\"\r\n      title=\"Chat\"\r\n      aria-label=\"Chat\"\r\n    >\r\n      <svg\r\n        className=\"w-5 h-5 text-gray-600\"\r\n        fill=\"none\"\r\n        stroke=\"currentColor\"\r\n        viewBox=\"0 0 24 24\"\r\n        strokeWidth=\"2\"\r\n      >\r\n        <path\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n          d=\"M8 10h.01M12 10h.01M16 10h.01M9 16H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-5l-5 5v-5z\"\r\n        />\r\n      </svg>\r\n    </button>\r\n  </div>\r\n</div>\r\n\r\n            );\r\n            })}\r\n          </div>\r\n        )}\r\n\r\n        {/* Pagination */}\r\n        {totalItems > 0 && (\r\n          <div className=\"mt-8 flex flex-col sm:flex-row items-center justify-between gap-4 border-t border-gray-200 pt-4\">\r\n            {/* Left: Results info */}\r\n            <div className=\"text-sm text-gray-600\">\r\n              Showing {startIndex + 1}-{Math.min(endIndex, totalItems)} of {totalItems} results\r\n            </div>\r\n\r\n            {/* Right: Pagination buttons */}\r\n            {totalPages > 1 && (\r\n            <div className=\"flex items-center gap-1\">\r\n              <button\r\n                onClick={handlePrevious}\r\n                disabled={currentPage === 1}\r\n                className={`w-8 h-8 flex items-center justify-center rounded-md border ${\r\n                  currentPage === 1\r\n                    ? 'bg-gray-100 text-gray-400 border-gray-300 cursor-not-allowed'\r\n                    : 'bg-white text-gray-700 border-gray-300 hover:bg-gray-50'\r\n                }`}\r\n              >\r\n                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M15 19l-7-7 7-7\" />\r\n                </svg>\r\n              </button>\r\n\r\n              <div className=\"flex items-center gap-1 overflow-x-auto\">\r\n                {/* Always show first page */}\r\n                <button\r\n                  onClick={() => handlePageChange(1)}\r\n                  className={`w-8 h-8 flex items-center justify-center rounded-md font-medium ${\r\n                    currentPage === 1\r\n                      ? 'bg-[#0A421E] text-white'\r\n                      : 'bg-white text-gray-700 border border-gray-300 hover:bg-gray-50'\r\n                  }`}\r\n                >\r\n                  1\r\n                </button>\r\n\r\n                {/* Show ellipsis if current page is far from start */}\r\n                {currentPage > 4 && (\r\n                  <span className=\"px-2 py-2 text-sm text-gray-500\">...</span>\r\n                )}\r\n\r\n                {/* Show pages around current page */}\r\n                {Array.from({ length: totalPages }, (_, i) => i + 1)\r\n                  .filter(page => {\r\n                    // Don't show page 1 (already shown above)\r\n                    if (page === 1) return false;\r\n                    // Don't show last page (shown below)\r\n                    if (page === totalPages) return false;\r\n                    \r\n                    // Show pages 2-4 if current page is 1-3\r\n                    if (currentPage <= 3) {\r\n                      return page >= 2 && page <= 4;\r\n                    }\r\n                    // Show pages around current page\r\n                    if (currentPage > 3 && currentPage < totalPages - 2) {\r\n                      return page >= currentPage - 1 && page <= currentPage + 1;\r\n                    }\r\n                    // Show last few pages if current page is near end\r\n                    if (currentPage >= totalPages - 2) {\r\n                      return page >= totalPages - 3 && page < totalPages;\r\n                    }\r\n                    return false;\r\n                  })\r\n                  .map((page) => (\r\n                    <button\r\n                      key={page}\r\n                      onClick={() => handlePageChange(page)}\r\n                      className={`w-8 h-8 flex items-center justify-center rounded-md font-medium ${\r\n                        currentPage === page\r\n                          ? 'bg-[#0A421E] text-white'\r\n                          : 'bg-white text-gray-700 border border-gray-300 hover:bg-gray-50'\r\n                      }`}\r\n                    >\r\n                      {page}\r\n                    </button>\r\n                  ))}\r\n\r\n                {/* Show ellipsis if current page is far from end */}\r\n                {currentPage < totalPages - 3 && (\r\n                  <span className=\"px-2 py-2 text-sm text-gray-500\">...</span>\r\n                )}\r\n\r\n                {/* Always show last page if there's more than 1 page */}\r\n                {totalPages > 1 && (\r\n                  <button\r\n                    onClick={() => handlePageChange(totalPages)}\r\n                    className={`w-8 h-8 flex items-center justify-center rounded-md font-medium ${\r\n                      currentPage === totalPages\r\n                        ? 'bg-[#0A421E] text-white'\r\n                        : 'bg-white text-gray-700 border border-gray-300 hover:bg-gray-50'\r\n                    }`}\r\n                  >\r\n                    {totalPages}\r\n                  </button>\r\n                )}\r\n              </div>\r\n\r\n              <button\r\n                onClick={handleNext}\r\n                disabled={currentPage === totalPages}\r\n                className={`w-8 h-8 flex items-center justify-center rounded-md border ${\r\n                  currentPage === totalPages\r\n                    ? 'bg-gray-100 text-gray-400 border-gray-300 cursor-not-allowed'\r\n                    : 'bg-white text-gray-700 border-gray-300 hover:bg-gray-50'\r\n                }`}\r\n              >\r\n                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 5l7 7-7 7\" />\r\n                </svg>\r\n              </button>\r\n            </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <style jsx>{`\r\n        .slider-single {\r\n          background: transparent;\r\n        }\r\n        /* Allow dragging both thumbs on overlapping dual sliders */\r\n        .slider-dual { pointer-events: none; }\r\n        .slider-dual::-webkit-slider-thumb { pointer-events: auto; }\r\n        .slider-dual::-moz-range-thumb { pointer-events: auto; }\r\n        .slider-single::-webkit-slider-thumb {\r\n          appearance: none;\r\n          width: 20px;\r\n          height: 20px;\r\n          border-radius: 50%;\r\n          background: white;\r\n          cursor: pointer;\r\n          border: 2px solid #0A421E;\r\n          box-shadow: 0 2px 4px rgba(0,0,0,0.2);\r\n        }\r\n        .slider-single::-moz-range-thumb {\r\n          width: 20px;\r\n          height: 20px;\r\n          border-radius: 50%;\r\n          background: white;\r\n          cursor: pointer;\r\n          border: 2px solid #0A421E;\r\n          box-shadow: 0 2px 4px rgba(0,0,0,0.2);\r\n        }\r\n        .slider-single::-webkit-slider-track {\r\n          background: transparent;\r\n        }\r\n        .slider-single::-moz-range-track {\r\n          background: transparent;\r\n        }\r\n      `}</style>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BrokersComponent;\r\n"],"names":[],"mappings":"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"}