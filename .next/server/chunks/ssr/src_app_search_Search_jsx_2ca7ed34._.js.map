{"version":3,"sources":["turbopack:///[project]/src/app/search/Search.jsx","turbopack:///[project]/src/app/search/components/PropertiesComponent.jsx","turbopack:///[project]/src/app/search/components/LeadsComponent.jsx","turbopack:///[project]/src/app/search/components/BrokersComponent.jsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport PropertiesComponent from './components/PropertiesComponent';\r\nimport LeadsComponent from './components/LeadsComponent';\r\nimport BrokersComponent from './components/BrokersComponent';\r\n\r\nconst Dots = ({ className, style }) => (\r\n  <svg\r\n    width=\"120\"\r\n    height=\"60\"\r\n    viewBox=\"0 0 120 60\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    className={className}\r\n    style={style}\r\n  >\r\n    {/* Manually placed circles for a scattered look */}\r\n    <circle cx=\"10\" cy=\"20\" r=\"5\" fill=\"#E5E7EB\" opacity=\"0.5\" />\r\n    <circle cx=\"25\" cy=\"10\" r=\"5\" fill=\"#E5E7EB\" opacity=\"0.5\" />\r\n    <circle cx=\"40\" cy=\"25\" r=\"5\" fill=\"#E5E7EB\" opacity=\"0.5\" />\r\n    <circle cx=\"60\" cy=\"15\" r=\"5\" fill=\"#E5E7EB\" opacity=\"0.5\" />\r\n    <circle cx=\"80\" cy=\"30\" r=\"5\" fill=\"#E5E7EB\" opacity=\"0.5\" />\r\n    <circle cx=\"100\" cy=\"20\" r=\"5\" fill=\"#E5E7EB\" opacity=\"0.5\" />\r\n    <circle cx=\"20\" cy=\"40\" r=\"5\" fill=\"#E5E7EB\" opacity=\"0.5\" />\r\n    <circle cx=\"35\" cy=\"50\" r=\"5\" fill=\"#E5E7EB\" opacity=\"0.5\" />\r\n    <circle cx=\"55\" cy=\"40\" r=\"5\" fill=\"#E5E7EB\" opacity=\"0.5\" />\r\n    <circle cx=\"75\" cy=\"50\" r=\"5\" fill=\"#E5E7EB\" opacity=\"0.5\" />\r\n    {/* More dots for a denser scatter */}\r\n    <circle cx=\"15\" cy=\"30\" r=\"5\" fill=\"#E5E7EB\" opacity=\"0.5\" />\r\n    <circle cx=\"30\" cy=\"20\" r=\"5\" fill=\"#E5E7EB\" opacity=\"0.5\" />\r\n    <circle cx=\"50\" cy=\"10\" r=\"5\" fill=\"#E5E7EB\" opacity=\"0.5\" />\r\n    <circle cx=\"65\" cy=\"35\" r=\"5\" fill=\"#E5E7EB\" opacity=\"0.5\" />\r\n    <circle cx=\"90\" cy=\"40\" r=\"5\" fill=\"#E5E7EB\" opacity=\"0.5\" />\r\n    <circle cx=\"110\" cy=\"30\" r=\"5\" fill=\"#E5E7EB\" opacity=\"0.5\" />\r\n    <circle cx=\"5\" cy=\"50\" r=\"5\" fill=\"#E5E7EB\" opacity=\"0.5\" />\r\n    <circle cx=\"45\" cy=\"55\" r=\"5\" fill=\"#E5E7EB\" opacity=\"0.5\" />\r\n    <circle cx=\"70\" cy=\"45\" r=\"5\" fill=\"#E5E7EB\" opacity=\"0.5\" />\r\n    <circle cx=\"100\" cy=\"55\" r=\"5\" fill=\"#E5E7EB\" opacity=\"0.5\" />\r\n  </svg>\r\n);\r\n\r\nconst Search = () => {\r\n  const [activeTab, setActiveTab] = useState('brokers');\r\n\r\n  // Read query param without useSearchParams to avoid Suspense requirement\r\n  useEffect(() => {\r\n    if (typeof window === 'undefined') return;\r\n    try {\r\n      const sp = new URLSearchParams(window.location.search);\r\n      const t = sp.get('tab');\r\n      if (t === 'leads' || t === 'brokers' || t === 'properties') {\r\n        setActiveTab(t);\r\n      }\r\n    } catch {}\r\n  }, []);\r\n\r\n  // Update URL when tab changes\r\n  const handleTabChange = (tab) => {\r\n    setActiveTab(tab);\r\n    if (typeof window !== 'undefined') {\r\n      const url = new URL(window.location);\r\n      url.searchParams.set('tab', tab);\r\n      window.history.pushState({}, '', url);\r\n    }\r\n  };\r\n\r\n  const getPageTitle = () => {\r\n    switch (activeTab) {\r\n      case 'properties':\r\n        return 'Properties';\r\n      case 'leads':\r\n        return 'Leads';\r\n      case 'brokers':\r\n        return 'Brokers';\r\n      default:\r\n        return 'Search';\r\n    }\r\n  };\r\n\r\n  const renderContent = () => {\r\n    switch (activeTab) {\r\n      case 'properties':\r\n        return <PropertiesComponent activeTab={activeTab} setActiveTab={setActiveTab} />;\r\n      case 'leads':\r\n        return <LeadsComponent activeTab={activeTab} setActiveTab={setActiveTab} />;\r\n      case 'brokers':\r\n        return <BrokersComponent activeTab={activeTab} setActiveTab={setActiveTab} />;\r\n      default:\r\n        return <PropertiesComponent activeTab={activeTab} setActiveTab={setActiveTab} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-white\">\r\n      {/* Documentation-style Header */}\r\n      <div className=\"bg-gray-50 py-10 w-screen relative left-1/2 -translate-x-1/2 overflow-x-hidden -mt-2\">\r\n        <div className=\"relative mx-auto flex flex-col items-center text-center\">\r\n          {/* Dots - top left */}\r\n          <div className=\"absolute left-30 top-18\">\r\n            <Dots />\r\n          </div>\r\n          {/* Dots - bottom right */}\r\n          <div className=\"absolute right-30 bottom-18\">\r\n            <Dots />\r\n          </div>\r\n\r\n          <h1 className=\"text-3xl font-medium text-gray-900 mb-2\">Search</h1>\r\n\r\n          {/* Header Tabs */}\r\n          <div className=\"mt-2\">\r\n            <div className=\"inline-flex bg-gray-100 rounded-full p-1\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => handleTabChange('brokers')}\r\n                className={`${activeTab === 'brokers' ? 'bg-[#0A421E] text-white' : 'text-gray-600 hover:text-gray-800'} px-4 py-2 rounded-full text-sm font-medium transition-colors cursor-pointer`}\r\n              >\r\n                Brokers\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => handleTabChange('leads')}\r\n                className={`${activeTab === 'leads' ? 'bg-[#0A421E] text-white' : 'text-gray-600 hover:text-gray-800'} px-4 py-2 rounded-full text-sm font-medium transition-colors cursor-pointer`}\r\n              >\r\n                Leads\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => handleTabChange('properties')}\r\n                className={`${activeTab === 'properties' ? 'bg-[#0A421E] text-white' : 'text-gray-600 hover:text-gray-800'} px-4 py-2 rounded-full text-sm font-medium transition-colors cursor-pointer`}\r\n              >\r\n                Properties\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mx-auto  py-8\">\r\n        {/* Render Active Component */}\r\n        {renderContent()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","\r\n'use client';\r\n\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport Link from 'next/link';\r\nimport Select from 'react-select';\r\n\r\nconst PropertiesComponent = ({ activeTab, setActiveTab }) => {\r\n  const [filters, setFilters] = useState({\r\n    categories: [],\r\n    priceRange: [5000000, 20000000],\r\n    bedrooms: [],\r\n    amenities: []\r\n  });\r\n\r\n  const [sortBy, setSortBy] = useState('default');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [imageIndexById, setImageIndexById] = useState({});\r\n  const [propertyItems, setPropertyItems] = useState([]);\r\n  const timersRef = useRef({});\r\n\r\n  // Trigger skeleton loader when switching between tabs from header\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    const t = setTimeout(() => setIsLoading(false), 500);\r\n    return () => clearTimeout(t);\r\n  }, [activeTab]);\r\n\r\n  // Fetch properties from API and map to UI shape\r\n  useEffect(() => {\r\n    const fetchProperties = async () => {\r\n      try {\r\n        const apiUrl = process.env.NEXT_PUBLIC_API_URL || '';\r\n        const res = await fetch(`${apiUrl}/properties`);\r\n        if (!res.ok) throw new Error('Failed to fetch properties');\r\n        const data = await res.json().catch(() => ({}));\r\n\r\n        let list = [];\r\n        if (Array.isArray(data?.data?.items)) list = data.data.items;\r\n        else if (Array.isArray(data?.data?.properties)) list = data.data.properties;\r\n        else if (Array.isArray(data?.data)) list = data.data;\r\n        else if (Array.isArray(data?.properties)) list = data.properties;\r\n        else if (Array.isArray(data)) list = data;\r\n\r\n        const mapped = list.map((p, idx) => {\r\n          const id = p._id || p.id || `${idx}`;\r\n          const title = p.title || p.name || 'Property';\r\n          const propertyType = p.propertyType || p.type || '';\r\n          const subType = p.subType || '';\r\n          const city = p.city || '';\r\n          const regionRaw = p.region;\r\n          const region = Array.isArray(regionRaw)\r\n            ? regionRaw.map(r => (typeof r === 'string' ? r : r?.name)).filter(Boolean)\r\n            : (typeof regionRaw === 'string' ? regionRaw : regionRaw?.name);\r\n          const bedrooms = typeof p.bedrooms === 'number' ? p.bedrooms : undefined;\r\n          const bathrooms = typeof p.bathrooms === 'number' ? p.bathrooms : undefined;\r\n          const areaSqft = p.areaSqft || p.area || undefined;\r\n          const amenities = Array.isArray(p.amenities) ? p.amenities : [];\r\n          const images = Array.isArray(p.images) && p.images.length > 0 ? p.images : [];\r\n          const image = images[0] || '/images/pexels-binyaminmellish-106399.jpg';\r\n          const rating = p.rating || '4.7';\r\n          const price = typeof p.price === 'number' ? p.price : undefined;\r\n          const currentPrice = price ? new Intl.NumberFormat('en-IN', { style: 'currency', currency: 'INR', maximumFractionDigits: 0 }).format(price) : '-';\r\n          const status = p.status || '';\r\n          const address = p.address || '';\r\n\r\n          const description = p.description || p.propertyDescription || '';\r\n\r\n          return {\r\n            id,\r\n            name: title,\r\n            type: propertyType || subType || 'Property',\r\n            details: subType || propertyType || '',\r\n            description,\r\n            bedrooms,\r\n            bathrooms,\r\n            areaSqft,\r\n            city,\r\n            region,\r\n            currentPrice,\r\n            originalPrice: undefined,\r\n            rating,\r\n            image,\r\n            images,\r\n            amenities,\r\n            status,\r\n            address,\r\n          };\r\n        });\r\n\r\n        setPropertyItems(mapped);\r\n      } catch (err) {\r\n        setPropertyItems([]);\r\n      }\r\n    };\r\n    fetchProperties();\r\n  }, []);\r\n\r\n  // Auto-rotate property images per card (independent timers per card)\r\n  useEffect(() => {\r\n    // clear old timers\r\n    Object.values(timersRef.current).forEach((t) => clearInterval(t));\r\n    timersRef.current = {};\r\n    // create timers per property with random stagger to avoid sync\r\n    (propertyItems || []).forEach((p, idx) => {\r\n      const imgs = Array.isArray(p.images) ? p.images : [p.image];\r\n      if (!imgs || imgs.length <= 1) return;\r\n      const delay = 2800 + Math.floor(Math.random() * 1700); // 2.8s - 4.5s\r\n      timersRef.current[p.id] = setInterval(() => {\r\n        setImageIndexById((prev) => ({\r\n          ...prev,\r\n          [p.id]: ((prev[p.id] ?? 0) + 1) % imgs.length,\r\n        }));\r\n      }, delay);\r\n    });\r\n    return () => {\r\n      Object.values(timersRef.current).forEach((t) => clearInterval(t));\r\n      timersRef.current = {};\r\n    };\r\n  }, [propertyItems]);\r\n\r\n  const reactSelectStyles = {\r\n    control: (base) => ({\r\n      ...base,\r\n      borderColor: '#d1d5db',\r\n      boxShadow: 'none',\r\n      minHeight: 38,\r\n      ':hover': { borderColor: '#0A421E' }\r\n    }),\r\n    option: (base, state) => ({\r\n      ...base,\r\n      backgroundColor: state.isSelected ? '#0A421E' : state.isFocused ? '#ECFDF5' : 'white',\r\n      color: state.isSelected ? 'white' : '#111827'\r\n    }),\r\n    singleValue: (base) => ({ ...base, color: '#111827' }),\r\n    placeholder: (base) => ({ ...base, color: '#6b7280' }),\r\n    indicatorSeparator: () => ({ display: 'none' })\r\n  };\r\n\r\n  const categories = ['Apartment', 'Villa', 'Plot', 'Studio', 'Penthouse'];\r\n  const bedroomOptions = ['1 BHK', '2 BHK', '3 BHK', '4+ BHK'];\r\n  const amenitiesOptions = ['Gym', 'Swimming Pool', 'Parking', 'Security', 'Balcony'];\r\n\r\n  // Using API-backed propertyItems state instead of hardcoded list\r\n\r\n  const handleCategoryChange = (category) => {\r\n    setFilters(prev => ({\r\n      ...prev,\r\n      categories: prev.categories.includes(category)\r\n        ? prev.categories.filter(c => c !== category)\r\n        : [...prev.categories, category]\r\n    }));\r\n  };\r\n\r\n  const handleBedroomChange = (bedroom) => {\r\n    setFilters(prev => ({\r\n      ...prev,\r\n      bedrooms: prev.bedrooms.includes(bedroom)\r\n        ? prev.bedrooms.filter(b => b !== bedroom)\r\n        : [...prev.bedrooms, bedroom]\r\n    }));\r\n  };\r\n\r\n  const handleAmenityChange = (amenity) => {\r\n    setFilters(prev => ({\r\n      ...prev,\r\n      amenities: prev.amenities.includes(amenity)\r\n        ? prev.amenities.filter(a => a !== amenity)\r\n        : [...prev.amenities, amenity]\r\n    }));\r\n  };\r\n\r\n  const resetFilters = () => {\r\n    setFilters({\r\n      categories: [],\r\n      priceRange: [5000000, 20000000],\r\n      bedrooms: [],\r\n      amenities: []\r\n    });\r\n  };\r\n\r\n  const handlePriceChange = (index, value) => {\r\n    const newRange = [...filters.priceRange];\r\n    newRange[index] = parseInt(value);\r\n    setFilters(prev => ({\r\n      ...prev,\r\n      priceRange: newRange\r\n    }));\r\n  };\r\n\r\n  const formatPrice = (price) => {\r\n    return new Intl.NumberFormat('en-IN', {\r\n      style: 'currency',\r\n      currency: 'INR',\r\n      minimumFractionDigits: 0,\r\n      maximumFractionDigits: 0\r\n    }).format(price);\r\n  };\r\n\r\n  return (\r\n    <div className=\"grid grid-cols-12 gap-8\">\r\n      {/* Filter Sidebar - 3 columns */}\r\n      <div className=\"col-span-3\">\r\n        {isLoading ? (\r\n          <div className=\"bg-white rounded-lg p-6\">\r\n            <div className=\"space-y-6\">\r\n              {/* Filter Header Skeleton */}\r\n              <div className=\"flex items-center mb-6 pb-4 border-b border-gray-200\">\r\n                <div className=\"w-5 h-5 bg-gray-200 rounded mr-2\"></div>\r\n                <div className=\"h-6 bg-gray-200 rounded w-32\"></div>\r\n              </div>\r\n              \r\n              {/* Category Filter Skeleton */}\r\n              <div className=\"mb-6 pb-6 border-b border-gray-200\">\r\n                <div className=\"h-4 bg-gray-200 rounded w-16 mb-4\"></div>\r\n                <div className=\"space-y-3\">\r\n                  {[1,2,3,4,5].map((i) => (\r\n                    <div key={i} className=\"flex items-center\">\r\n                      <div className=\"w-4 h-4 bg-gray-200 rounded\"></div>\r\n                      <div className=\"ml-3 h-4 bg-gray-200 rounded w-20\"></div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n              \r\n              {/* Price Filter Skeleton */}\r\n              <div className=\"mb-6 pb-6 border-b border-gray-200\">\r\n                <div className=\"h-4 bg-gray-200 rounded w-12 mb-4\"></div>\r\n                <div className=\"h-4 bg-gray-200 rounded w-32 mb-4\"></div>\r\n                <div className=\"h-2 bg-gray-200 rounded\"></div>\r\n              </div>\r\n              \r\n              {/* Bedrooms Filter Skeleton */}\r\n              <div className=\"mb-6 pb-6 border-b border-gray-200\">\r\n                <div className=\"h-4 bg-gray-200 rounded w-20 mb-4\"></div>\r\n                <div className=\"space-y-3\">\r\n                  {[1,2,3,4].map((i) => (\r\n                    <div key={i} className=\"flex items-center\">\r\n                      <div className=\"w-4 h-4 bg-gray-200 rounded\"></div>\r\n                      <div className=\"ml-3 h-4 bg-gray-200 rounded w-16\"></div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n              \r\n              {/* Amenities Filter Skeleton */}\r\n              <div>\r\n                <div className=\"h-4 bg-gray-200 rounded w-20 mb-4\"></div>\r\n                <div className=\"space-y-3\">\r\n                  {[1,2,3,4,5].map((i) => (\r\n                    <div key={i} className=\"flex items-center\">\r\n                      <div className=\"w-4 h-4 bg-gray-200 rounded\"></div>\r\n                      <div className=\"ml-3 h-4 bg-gray-200 rounded w-24\"></div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"bg-white rounded-lg p-6\">\r\n          {/* Filter Header */}\r\n          <div className=\"flex items-center justify-between mb-6 pb-4 border-b border-gray-200\">\r\n            <div className=\"flex items-center\">\r\n              <svg className=\"w-5 h-5 text-gray-600 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.293A1 1 0 013 6.586V4z\" />\r\n              </svg>\r\n              <h2 className=\"text-lg font-bold text-gray-900\">Filter Options</h2>\r\n            </div>\r\n            <button\r\n              type=\"button\"\r\n              onClick={resetFilters}\r\n              className=\"text-[#0A421E] hover:text-green-700 cursor-pointer flex items-center\"\r\n              aria-label=\"Reset filters\"\r\n              title=\"Reset filters\"\r\n            >\r\n              <i className=\"fa-solid fa-arrows-rotate text-sm\" aria-hidden=\"true\"></i>\r\n              <span className=\"sr-only\">Reset</span>\r\n            </button>\r\n          </div>\r\n\r\n          {/* Category Filter */}\r\n          <div className=\"mb-6 pb-6 border-b border-gray-200\">\r\n            <h3 className=\"text-sm font-medium text-gray-900 mb-4\">Category</h3>\r\n            <div className=\"space-y-3\">\r\n              {categories.map((category) => (\r\n                <label key={category} className=\"flex items-center cursor-pointer\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={filters.categories.includes(category)}\r\n                    onChange={() => handleCategoryChange(category)}\r\n                    className=\"w-4 h-4 text-green-900 accent-green-900 border-gray-300 rounded focus:ring-green-900\"\r\n                  />\r\n                  <span className=\"ml-3 text-sm text-gray-700\">{category}</span>\r\n                </label>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Price Filter */}\r\n          <div className=\"mb-6 pb-6 border-b border-gray-200\">\r\n            <h3 className=\"text-sm font-medium text-gray-900 mb-4\">Price</h3>\r\n            <div className=\"mb-4\">\r\n              <div className=\"text-sm text-gray-600\">\r\n                {formatPrice(filters.priceRange[0])} - {formatPrice(filters.priceRange[1])}\r\n              </div>\r\n            </div>\r\n            <div className=\"relative\">\r\n              <div className=\"w-full h-2 bg-gray-200 rounded-lg relative\">\r\n                <div\r\n                  className=\"h-2 bg-[#0A421E] rounded-lg absolute top-0\"\r\n                  style={{\r\n                    left: '0%',\r\n                    width: `${((filters.priceRange[1] - 1000000) / (20000000 - 1000000)) * 100}%`\r\n                  }}\r\n                ></div>\r\n                <input\r\n                  type=\"range\"\r\n                  min=\"1000000\"\r\n                  max=\"20000000\"\r\n                  step=\"500000\"\r\n                  value={filters.priceRange[1]}\r\n                  onChange={(e) => handlePriceChange(1, e.target.value)}\r\n                  className=\"w-full h-2 bg-transparent rounded-lg appearance-none cursor-pointer absolute top-0 slider-single\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Bedrooms Filter */}\r\n          <div className=\"mb-6 pb-6 border-b border-gray-200\">\r\n            <h3 className=\"text-sm font-medium text-gray-900 mb-4\">Bedrooms</h3>\r\n            <div className=\"space-y-3\">\r\n              {bedroomOptions.map((bedroom) => (\r\n                <label key={bedroom} className=\"flex items-center cursor-pointer\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={filters.bedrooms.includes(bedroom)}\r\n                    onChange={() => handleBedroomChange(bedroom)}\r\n                    className=\"w-4 h-4 text-green-900 accent-green-900 border-gray-300 rounded focus:ring-green-900\"\r\n                  />\r\n                  <span className=\"ml-3 text-sm text-gray-700\">{bedroom}</span>\r\n                </label>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Amenities Filter */}\r\n          <div>\r\n            <h3 className=\"text-sm font-medium text-gray-900 mb-4\">Amenities</h3>\r\n            <div className=\"space-y-3\">\r\n              {amenitiesOptions.map((amenity) => (\r\n                <label key={amenity} className=\"flex items-center cursor-pointer\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={filters.amenities.includes(amenity)}\r\n                    onChange={() => handleAmenityChange(amenity)}\r\n                    className=\"w-4 h-4 text-green-900 accent-green-900 border-gray-300 rounded focus:ring-green-900\"\r\n                  />\r\n                  <span className=\"ml-3 text-sm text-gray-700\">{amenity}</span>\r\n                </label>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Properties Grid - 9 columns */}\r\n      <div className=\"col-span-9\">\r\n        \r\n\r\n        {/* Properties Grid */}\r\n        {isLoading ? (\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n            {[1,2,3,4,5,6].map((i) => (\r\n              <div key={i} className=\"bg-white border border-gray-200 rounded-lg overflow-hidden\">\r\n                {/* Image Skeleton */}\r\n                <div className=\"w-full h-48 bg-gray-200\"></div>\r\n                \r\n                {/* Content Skeleton */}\r\n                <div className=\"p-4\">\r\n                  <div className=\"flex justify-between items-center mb-1\">\r\n                    <div className=\"h-3 bg-gray-200 rounded w-16\"></div>\r\n                    <div className=\"h-3 bg-gray-200 rounded w-12\"></div>\r\n                  </div>\r\n                  <div className=\"h-4 bg-gray-200 rounded w-24 mb-1\"></div>\r\n                  <div className=\"h-3 bg-gray-200 rounded w-16 mb-2\"></div>\r\n                  \r\n                  <div className=\"flex items-center gap-2 mb-4\">\r\n                    <div className=\"h-4 bg-gray-200 rounded w-20\"></div>\r\n                    <div className=\"h-4 bg-gray-200 rounded w-16\"></div>\r\n                  </div>\r\n                  \r\n                  <div className=\"h-8 bg-gray-200 rounded w-full\"></div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n            {propertyItems.map((property) => (\r\n            <Link key={property.id} href={`/property-details/${property.id}`} className=\"block\">\r\n              <div className=\"bg-white border border-gray-200 rounded-2xl shadow-sm hover:shadow-lg transition-shadow transition-transform duration-200 hover:-translate-y-1 cursor-pointer\">\r\n              <div className=\"relative p-3\">\r\n                {/* Image carousel */}\r\n                <div className=\"relative h-56 overflow-hidden rounded-xl\">\r\n                  {(() => {\r\n                    const imgs = Array.isArray(property.images) ? property.images : [property.image];\r\n                    const idx = imageIndexById[property.id] ?? 0;\r\n                    return (\r\n                      <>\r\n                        {imgs.map((src, i) => (\r\n                          <div key={i} className={`absolute inset-0 transition-opacity duration-700 ease-in-out ${idx === i ? 'opacity-100' : 'opacity-0'}`}>\r\n                            <img src={src} alt={`${property.name}-${i}`} className=\"block w-full h-full object-cover\" />\r\n                          </div>\r\n                        ))}\r\n                      </>\r\n                    );\r\n                  })()}\r\n                </div>\r\n               \r\n                {/* Slider controls removed as requested */}\r\n                <div className=\"absolute top-6 left-6\">\r\n                  <span className=\"bg-[#0A421E] text-white px-3 py-1 rounded-full text-xs font-medium\">\r\n                    {property.type}\r\n                  </span>\r\n                </div>\r\n                <div className=\"absolute top-6 right-6 flex items-center bg-white/90 backdrop-blur rounded-full px-2 py-1 shadow-sm\">\r\n                  <svg className=\"w-4 h-4 text-yellow-400 mr-1\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                    <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\r\n                  </svg>\r\n                  <span className=\"text-xs font-medium text-gray-700\">{property.rating}</span>\r\n                </div>\r\n                {/* Price pill bottom-left */}\r\n                <div className=\"absolute bottom-[-0px] left-6 z-10\">\r\n                  <span className=\"px-4 py-1.5 rounded-full text-white text-sm font-semibold shadow-md\"\r\n                    style={{\r\n                      background: 'linear-gradient(135deg, #f59e0b 0%, #fbbf24 50%, #f59e0b 100%)'\r\n                    }}\r\n                  >\r\n                    {property.currentPrice}\r\n                  </span>\r\n                </div>\r\n                {/* Share icon bottom-right */}\r\n                <button aria-label=\"Share\" className=\"absolute bottom-[-8px] right-6 w-10 h-10 rounded-full bg-white shadow-md flex items-center justify-center text-gray-500 hover:text-gray-700 z-10 cursor-pointer\">\r\n                  <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.367 2.684 3 3 0 00-5.367-2.684z\" />\r\n                  </svg>\r\n                </button>\r\n              </div>\r\n              \r\n              <div className=\"p-5\">\r\n                \r\n                <div className=\"mt-2 flex items-center gap-1\">\r\n                  <h3 className=\"text-base font-semibold text-gray-900\">{property.name}</h3>\r\n                  <i className=\"fa-solid fa-arrow-right text-[12px] text-[#0A421E] px-2 mt-1 cursor-pointer\" style={{ transform: 'rotate(320deg)' }} />\r\n                </div>\r\n                <p className=\"text-xs text-gray-700 line-clamp-1\">{property.description || `Luxurious ${property.type?.toLowerCase?.() || 'property'} retreat in prime location.`}</p>\r\n<div className='flex gap-7'>\r\n                {/* City */}\r\n                <div className=\"mt-2 flex items-center text-xs text-gray-600\">\r\n                  <i className=\"fa-regular fa-building mr-1 text-[12px]\" aria-hidden=\"true\"></i>\r\n                  {property.city}\r\n                </div>\r\n                {/* Region (Location icon) */}\r\n                <div className=\"mt-2 flex items-center text-xs text-gray-600\">\r\n                  <svg className=\"w-4 h-4 mr-1 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" aria-hidden=\"true\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 22s-7-4.5-7-12a7 7 0 1114 0c0 7.5-7 12-7 12z\" />\r\n                    <circle cx=\"12\" cy=\"10\" r=\"3\" strokeWidth=\"2\" />\r\n                  </svg>\r\n                  {Array.isArray(property.region)\r\n                    ? property.region.map(r => (typeof r === 'string' ? r : r?.name)).filter(Boolean).join(', ')\r\n                    : (typeof property.region === 'string' ? property.region : property.region?.name) || '-'}\r\n                </div>\r\n                </div>\r\n\r\n                <div className=\"mt-3 text-xs font-medium text-gray-900\">Features</div>\r\n                <div className=\"mt-2 flex flex-wrap items-center gap-2 text-[12px]\">\r\n                  <span className=\"inline-flex items-center gap-1 px-2.5 py-1 rounded-full bg-emerald-50 text-emerald-700 border border-emerald-100\">\r\n                    {/* Bed icon */}\r\n                    <svg className=\"w-3.5 h-3.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4 12V9a2 2 0 012-2h7a3 3 0 013 3v2m0 0h4a2 2 0 012 2v3M4 12h14M4 19v-4m16 4v-4\" />\r\n                    </svg>\r\n                    {property.bedrooms} bd\r\n                  </span>\r\n                  <span className=\"inline-flex items-center gap-1 px-2.5 py-1 rounded-full bg-emerald-50 text-emerald-700 border border-emerald-100\">\r\n                    {/* Bath icon */}\r\n                    <svg className=\"w-3.5 h-3.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M7 10V7a3 3 0 016 0v3m-8 0h12a2 2 0 012 2v2a5 5 0 01-5 5H8a5 5 0 01-5-5v-2a2 2 0 012-2z\" />\r\n                    </svg>\r\n                    {property.bathrooms} bt\r\n                  </span>\r\n                  {typeof property.areaSqft === 'number' && (\r\n                    <span className=\"inline-flex items-center gap-1 px-2.5 py-1 rounded-full bg-emerald-50 text-emerald-700 border border-emerald-100 \">\r\n                      {/* Area icon (square with diagonal) */}\r\n                      <svg className=\"w-3.5 h-3.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <rect x=\"4\" y=\"4\" width=\"16\" height=\"16\" rx=\"2\" ry=\"2\" strokeWidth=\"2\" />\r\n                        <path d=\"M6 18L18 6\" strokeWidth=\"2\" />\r\n                      </svg>\r\n                      {property.areaSqft.toLocaleString()} sq ft\r\n                    </span>\r\n                  )}\r\n                </div>\r\n\r\n                {/* Amenities under features */}\r\n                <div className=\"mt-3\">\r\n                  <div className=\"text-xs font-medium text-gray-900 mb-2\">Amenities</div>\r\n                  <div className=\"flex flex-wrap gap-2 text-[11px]\">\r\n                    {(Array.isArray(property.amenities) && property.amenities.length > 0 ? property.amenities.slice(0, 3) : ['Gym', 'Parking', 'Security']).map((amenity, idx) => (\r\n                      <span\r\n                        key={idx}\r\n                        className=\"inline-flex items-center px-2 py-1 rounded-full border bg-gray-100 text-gray-700 border-gray-200\"\r\n                      >\r\n                        {amenity}\r\n                      </span>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n\r\n                {/* View All button removed as requested */}\r\n              </div>\r\n              </div>\r\n            </Link>\r\n          ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <style jsx>{`\r\n        .slider-single {\r\n          background: transparent;\r\n        }\r\n        .slider-single::-webkit-slider-thumb {\r\n          appearance: none;\r\n          width: 20px;\r\n          height: 20px;\r\n          border-radius: 50%;\r\n          background: white;\r\n          cursor: pointer;\r\n          border: 2px solid #0A421E;\r\n          box-shadow: 0 2px 4px rgba(0,0,0,0.2);\r\n        }\r\n        .slider-single::-moz-range-thumb {\r\n          width: 20px;\r\n          height: 20px;\r\n          border-radius: 50%;\r\n          background: white;\r\n          cursor: pointer;\r\n          border: 2px solid #0A421E;\r\n          box-shadow: 0 2px 4px rgba(0,0,0,0.2);\r\n        }\r\n        .slider-single::-webkit-slider-track {\r\n          background: transparent;\r\n        }\r\n        .slider-single::-moz-range-track {\r\n          background: transparent;\r\n        }\r\n      `}</style>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PropertiesComponent;\r\n\r\n","'use client';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useSearchParams } from 'next/navigation';\r\nimport Select, { components } from 'react-select';\r\n\r\nconst LeadsComponent = ({ activeTab, setActiveTab }) => {\r\n  const [leadFilters, setLeadFilters] = useState({\r\n    leadStatus: [],\r\n    leadType: [],\r\n    requirement: [],\r\n    budgetRange: [5000000, 15000000],\r\n    city: '',\r\n    location: '',\r\n    dateAdded: {\r\n      start: '2024-06-01',\r\n      end: ''\r\n    },\r\n    brokerAgent: [],\r\n    priority: []\r\n  });\r\n\r\n  const [sortBy, setSortBy] = useState('date-added-newest');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [uiLoading, setUiLoading] = useState(false);\r\n  const [leads, setLeads] = useState([]);\r\n  const [allLeads, setAllLeads] = useState([]);\r\n  const [leadsError, setLeadsError] = useState('');\r\n  const [totalLeads, setTotalLeads] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [leadsPerPage] = useState(9);\r\n  const [regions, setRegions] = useState([]);\r\n  const [regionsLoading, setRegionsLoading] = useState(false);\r\n  const [cities, setCities] = useState([\r\n    { value: 'Agra', label: 'Agra' },\r\n    { value: 'Noida', label: 'Noida' }\r\n  ]);\r\n  const [brokersOptions, setBrokersOptions] = useState([]);\r\n  const [brokersLoading, setBrokersLoading] = useState(false);\r\n\r\n  const searchParams = useSearchParams();\r\n\r\n  // Trigger skeleton loader when switching between tabs from header\r\n  useEffect(() => {\r\n    setUiLoading(true);\r\n    const t = setTimeout(() => setUiLoading(false), 500);\r\n    return () => clearTimeout(t);\r\n  }, [activeTab]);\r\n\r\n  // Initialize city from URL param ?regionCity=...\r\n  useEffect(() => {\r\n    try {\r\n      const regionCity = searchParams?.get('regionCity');\r\n      if (regionCity) {\r\n        setLeadFilters(prev => ({ ...prev, city: regionCity, location: '' }));\r\n        setCurrentPage(1);\r\n      }\r\n    } catch {}\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  // Fetch leads from API\r\n  const fetchLeads = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      setLeadsError('');\r\n      \r\n      // Use environment variable for API URL following app pattern\r\n      const apiUrl = process.env.NEXT_PUBLIC_API_URL || '';\r\n\r\n      // Build base query parameters; fetch large pages to aggregate client-side\r\n      const params = new URLSearchParams();\r\n      const aggLimit = 100;\r\n      params.set('limit', String(aggLimit));\r\n      params.set('page', '1');\r\n      \r\n      // Add status filters to API call\r\n      if (leadFilters.leadStatus.length > 0) {\r\n        leadFilters.leadStatus.forEach(status => {\r\n          // API expects exact UI status names (case-sensitive)\r\n          params.append('status', status);\r\n        });\r\n      }\r\n\r\n      // Add property type (single-select) to API call\r\n      if (leadFilters.leadType.length === 1) {\r\n        params.set('propertyType', leadFilters.leadType[0]);\r\n      }\r\n\r\n      // Requirement (single-select) - ask backend to filter\r\n      if (leadFilters.requirement.length === 1) {\r\n        params.set('requirement', leadFilters.requirement[0]);\r\n      }\r\n\r\n      // Region/location: do NOT send to API if backend rejects it, apply client-side below\r\n      // If your backend supports it, uncomment next line\r\n      // if (leadFilters.location) params.set('region', leadFilters.location);\r\n\r\n      console.log('API URL:', `${apiUrl}/leads?${params.toString()}`);\r\n      console.log('Status filters:', leadFilters.leadStatus);\r\n      console.log('Property Type filters:', leadFilters.leadType);\r\n\r\n      // Add createdBy if a broker is selected (single-select)\r\n      if ((leadFilters.brokerAgent || []).length > 0) {\r\n        params.set('createdBy', String((leadFilters.brokerAgent || [])[0]));\r\n      }\r\n      // Prepare headers with Authorization if token exists\r\n      const token = typeof window !== 'undefined' ? (localStorage.getItem('token') || localStorage.getItem('authToken') || '') : '';\r\n      const headers = { 'Content-Type': 'application/json', ...(token ? { Authorization: `Bearer ${token}` } : {}) };\r\n      const response = await fetch(`${apiUrl}/leads?${params.toString()}`, { headers });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        let items = [];\r\n        let totalCount = 0;\r\n        \r\n        // Handle different response structures\r\n        console.log('Raw API response:', data);\r\n        \r\n        const paginationTotal = data?.data?.pagination?.totalItems || data?.pagination?.totalItems || 0;\r\n\r\n        if (Array.isArray(data?.data?.items)) {\r\n          items = data.data.items;\r\n          totalCount = paginationTotal || data.data.total || data.total || items.length;\r\n          console.log('Using data.data.items structure');\r\n        } else if (Array.isArray(data?.data?.leads)) {\r\n          items = data.data.leads;\r\n          totalCount = paginationTotal || data.data.total || data.total || items.length;\r\n          console.log('Using data.data.leads structure');\r\n        } else if (Array.isArray(data?.data)) {\r\n          items = data.data;\r\n          totalCount = paginationTotal || data.total || items.length;\r\n          console.log('Using data.data structure');\r\n        } else if (Array.isArray(data?.leads)) {\r\n          items = data.leads;\r\n          totalCount = paginationTotal || data.total || items.length;\r\n          console.log('Using data.leads structure');\r\n        } else if (Array.isArray(data)) {\r\n          items = data;\r\n          totalCount = paginationTotal || items.length;\r\n          console.log('Using direct data array structure');\r\n        } else {\r\n          console.log('No valid data structure found, checking for other possibilities...');\r\n          // Check for other possible structures\r\n          if (data?.data && typeof data.data === 'object') {\r\n            console.log('data.data is object:', data.data);\r\n            // Try to find array in the object\r\n            const possibleArrays = Object.values(data.data).filter(Array.isArray);\r\n            if (possibleArrays.length > 0) {\r\n              items = possibleArrays[0];\r\n              totalCount = items.length;\r\n              console.log('Found array in data.data object:', items);\r\n            }\r\n          }\r\n        }\r\n\r\n        // Final fallback - if no items found, try to extract from any array in the response\r\n        if (items.length === 0) {\r\n          console.log('No items found, trying final fallback...');\r\n          const findArraysInObject = (obj) => {\r\n            const arrays = [];\r\n            for (const key in obj) {\r\n              if (Array.isArray(obj[key])) {\r\n                arrays.push(obj[key]);\r\n              } else if (typeof obj[key] === 'object' && obj[key] !== null) {\r\n                arrays.push(...findArraysInObject(obj[key]));\r\n              }\r\n            }\r\n            return arrays;\r\n          };\r\n          \r\n          const allArrays = findArraysInObject(data);\r\n          if (allArrays.length > 0) {\r\n            // Use the largest array found\r\n            const largestArray = allArrays.reduce((a, b) => a.length > b.length ? a : b);\r\n            items = largestArray;\r\n            totalCount = items.length;\r\n            console.log('Found array in fallback:', items);\r\n          }\r\n        }\r\n\r\n        // If API has more pages, aggregate them all so we can filter across the full dataset\r\n        try {\r\n          const grandTotal = totalCount || items.length;\r\n          const currentCount = items.length;\r\n          const totalPages = Math.max(1, Math.ceil(grandTotal / aggLimit));\r\n          const aggregated = [...items];\r\n          for (let p = 2; p <= totalPages; p++) {\r\n            const moreParams = new URLSearchParams(params);\r\n            moreParams.set('page', String(p));\r\n            const moreRes = await fetch(`${apiUrl}/leads?${moreParams.toString()}`, { headers });\r\n            if (!moreRes.ok) break;\r\n            const moreData = await moreRes.json();\r\n            let pageItems = [];\r\n            if (Array.isArray(moreData?.data?.items)) pageItems = moreData.data.items;\r\n            else if (Array.isArray(moreData?.data?.leads)) pageItems = moreData.data.leads;\r\n            else if (Array.isArray(moreData?.data)) pageItems = moreData.data;\r\n            else if (Array.isArray(moreData?.leads)) pageItems = moreData.leads;\r\n            else if (Array.isArray(moreData)) pageItems = moreData;\r\n            else if (moreData?.data && typeof moreData.data === 'object') {\r\n              const poss = Object.values(moreData.data).filter(Array.isArray);\r\n              if (poss.length > 0) pageItems = poss[0];\r\n            }\r\n            if (Array.isArray(pageItems) && pageItems.length > 0) aggregated.push(...pageItems);\r\n          }\r\n          items = aggregated;\r\n          totalCount = Math.max(grandTotal, items.length);\r\n        } catch {}\r\n\r\n        console.log('Final leads data (aggregated):', items.length);\r\n        console.log('Total count from API (reported):', totalCount);\r\n        console.log('Sample lead statuses:', items.map(lead => ({ id: lead._id || lead.id, status: lead.status })));\r\n        console.log('Sample lead types:', items.map(lead => ({ id: lead._id || lead.id, propertyType: lead.propertyType, requirement: lead.requirement, req: lead.req })));\r\n        console.log('Active filters:', leadFilters);\r\n        console.log('API Response structure:', data);\r\n        // Store full dataset for dependent dropdowns (city -> region)\r\n        setAllLeads(items);\r\n        \r\n        \r\n        // Apply client-side filtering\r\n        let filteredItems = items;\r\n        \r\n        // Filter by Lead Status (client-side fallback if API filtering doesn't work properly)\r\n        if (leadFilters.leadStatus.length > 0) {\r\n          filteredItems = filteredItems.filter(lead => {\r\n            const leadStatus = lead.status || '';\r\n            return leadFilters.leadStatus.some(filterStatus => {\r\n              // Match exact status names (case-insensitive)\r\n              return leadStatus.toLowerCase() === filterStatus.toLowerCase();\r\n            });\r\n          });\r\n        }\r\n        \r\n        // Client-side backup: filter by property type (single-select)\r\n        if (leadFilters.leadType.length === 1) {\r\n          const selectedType = leadFilters.leadType[0].toLowerCase();\r\n          filteredItems = filteredItems.filter(lead => (lead.propertyType || '').toLowerCase() === selectedType);\r\n        }\r\n\r\n        // Client-side backup if backend didn't apply requirement\r\n        if (leadFilters.requirement.length === 1) {\r\n          const selectedReq = leadFilters.requirement[0].toLowerCase();\r\n          const beforeCount = filteredItems.length;\r\n          const filtered = filteredItems.filter(lead => (lead.requirement || lead.req || '').toLowerCase() === selectedReq);\r\n          // Only override if backend didn't filter (sizes equal)\r\n          if (beforeCount === filteredItems.length) {\r\n            filteredItems = filtered;\r\n          }\r\n        }\r\n        \r\n        // Filter by Priority\r\n        if (leadFilters.priority.length > 0) {\r\n          filteredItems = filteredItems.filter(lead => {\r\n            const leadPriority = lead.priority || lead.priorityLevel || '';\r\n            const priorityLower = leadPriority.toLowerCase();\r\n            return leadFilters.priority.some(filterPriority => {\r\n              const filterPriorityLower = filterPriority.toLowerCase();\r\n              return priorityLower.includes(filterPriorityLower);\r\n            });\r\n          });\r\n        }\r\n        \r\n        // Skip client-side broker filtering if backend is already filtering via createdBy\r\n        \r\n        // Filter by City (robust matching across fields)\r\n        if (leadFilters.city) {\r\n          const cityLower = leadFilters.city.toLowerCase();\r\n          filteredItems = filteredItems.filter(lead => {\r\n            const city = (lead.city || '').toString().toLowerCase();\r\n            const location = (lead.location || '').toString().toLowerCase();\r\n            const primaryRegion = (typeof lead.primaryRegion === 'string' ? lead.primaryRegion : lead.primaryRegion?.name || '').toString().toLowerCase();\r\n            const secondaryRegion = (typeof lead.secondaryRegion === 'string' ? lead.secondaryRegion : lead.secondaryRegion?.name || '').toString().toLowerCase();\r\n            const regionsArr = Array.isArray(lead.regions) ? lead.regions : [];\r\n\r\n            const match = (val) => !!val && (val === cityLower || val.includes(cityLower));\r\n            const regionsMatch = regionsArr.some(r => {\r\n              const name = (typeof r === 'string' ? r : r?.name || '').toString().toLowerCase();\r\n              return match(name);\r\n            });\r\n            return match(city) || match(location) || match(primaryRegion) || match(secondaryRegion) || regionsMatch;\r\n          });\r\n        }\r\n\r\n        // Filter by Region (robust matching across fields)\r\n        if (leadFilters.location) {\r\n          const regionLower = leadFilters.location.toLowerCase();\r\n          filteredItems = filteredItems.filter(lead => {\r\n            const primaryRegion = (typeof lead.primaryRegion === 'string' ? lead.primaryRegion : lead.primaryRegion?.name || '').toString().toLowerCase();\r\n            const secondaryRegion = (typeof lead.secondaryRegion === 'string' ? lead.secondaryRegion : lead.secondaryRegion?.name || '').toString().toLowerCase();\r\n            const regionsArr = Array.isArray(lead.regions) ? lead.regions : [];\r\n            const location = (lead.location || '').toString().toLowerCase();\r\n\r\n            const match = (val) => !!val && (val === regionLower || val.includes(regionLower));\r\n            const regionsMatch = regionsArr.some(r => {\r\n              const name = (typeof r === 'string' ? r : r?.name || '').toString().toLowerCase();\r\n              return match(name);\r\n            });\r\n            return match(primaryRegion) || match(secondaryRegion) || match(location) || regionsMatch;\r\n          });\r\n        }\r\n        \r\n        console.log('Filtered leads:', filteredItems);\r\n        console.log('Filter results - Status filter:', leadFilters.leadStatus.length > 0 ? 'Applied (API-side)' : 'Not applied');\r\n        console.log('Filter results - Property Type filter:', leadFilters.leadType.length > 0 ? 'Applied (API-side)' : 'Not applied');\r\n        console.log('Filter results - Priority filter:', leadFilters.priority.length > 0 ? 'Applied (Client-side)' : 'Not applied');\r\n        console.log('Filter results - Location filter:', leadFilters.location ? 'Applied (Client-side)' : 'Not applied');\r\n        \r\n        // Client-side pagination after filtering\r\n        const start = (currentPage - 1) * leadsPerPage;\r\n        const pagedItems = filteredItems.slice(start, start + leadsPerPage);\r\n        setLeads(pagedItems);\r\n        setTotalLeads(filteredItems.length);\r\n      } else {\r\n        const errorData = await response.json().catch(() => ({ message: 'Unknown error' }));\r\n        console.error('API Error:', response.status, errorData);\r\n        setLeadsError(`Failed to load leads: ${errorData.message || 'Server error'}`);\r\n        setLeads([]);\r\n        setTotalLeads(0);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching leads:', error);\r\n      setLeadsError('Error loading leads');\r\n      setLeads([]);\r\n      setTotalLeads(0);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Fetch leads when component mounts or filters change\r\n  useEffect(() => {\r\n    fetchLeads();\r\n  }, [leadFilters, sortBy, currentPage]);\r\n\r\n  // Reset UI loading when filters change (but don't show loading for filter changes)\r\n  useEffect(() => {\r\n    setUiLoading(false);\r\n  }, [leadFilters]);\r\n\r\n  // Fetch all brokers to populate Broker/Agent filter dropdown\r\n  useEffect(() => {\r\n    const fetchAllBrokers = async () => {\r\n      try {\r\n        setBrokersLoading(true);\r\n        const apiUrl = process.env.NEXT_PUBLIC_API_URL || '';\r\n        const limit = 100;\r\n        let page = 1;\r\n        let aggregated = [];\r\n        let total = 0;\r\n        for (let i = 0; i < 5; i++) {\r\n          const params = new URLSearchParams();\r\n          params.set('limit', String(limit));\r\n          params.set('page', String(page));\r\n          const res = await fetch(`${apiUrl}/brokers?${params.toString()}`);\r\n          if (!res.ok) break;\r\n          const data = await res.json().catch(() => ({}));\r\n          let items = [];\r\n          if (Array.isArray(data?.data?.items)) items = data.data.items;\r\n          else if (Array.isArray(data?.data?.brokers)) items = data.data.brokers;\r\n          else if (Array.isArray(data?.data)) items = data.data;\r\n          else if (Array.isArray(data?.brokers)) items = data.brokers;\r\n          else if (Array.isArray(data)) items = data;\r\n          if (!Array.isArray(items) || items.length === 0) break;\r\n          aggregated = aggregated.concat(items);\r\n          total = data?.data?.pagination?.totalItems || data?.pagination?.totalItems || aggregated.length;\r\n          if (aggregated.length >= total) break;\r\n          page += 1;\r\n        }\r\n        const opts = aggregated\r\n          .map(b => ({\r\n            value: b._id || b.id || b.userId || b.brokerId || '',\r\n            label: b.name || b.fullName || b.firmName || b.email || 'Unknown'\r\n          }))\r\n          .filter(o => o.value);\r\n        setBrokersOptions(opts);\r\n      } catch {\r\n        setBrokersOptions([]);\r\n      } finally {\r\n        setBrokersLoading(false);\r\n      }\r\n    };\r\n    fetchAllBrokers();\r\n  }, []);\r\n\r\n  // Fetch regions for dropdown (API-sourced)\r\n  useEffect(() => {\r\n    const fetchRegions = async () => {\r\n      try {\r\n        setRegionsLoading(true);\r\n        const apiUrl = process.env.NEXT_PUBLIC_API_URL || '';\r\n        \r\n        // If city is selected, fetch regions for that city\r\n        let url = `${apiUrl}/regions`;\r\n        if (leadFilters.city) {\r\n          url += `?city=${encodeURIComponent(leadFilters.city)}`;\r\n        }\r\n        \r\n        const res = await fetch(url);\r\n        const data = await res.json().catch(() => ({}));\r\n        let list = [];\r\n        if (Array.isArray(data?.data?.regions)) list = data.data.regions;\r\n        else if (Array.isArray(data?.regions)) list = data.regions;\r\n        else if (Array.isArray(data?.data)) list = data.data;\r\n        else if (Array.isArray(data)) list = data;\r\n        const mapped = list\r\n          .map(r => ({\r\n            id: r._id || r.id || r.value || r.name || String(r),\r\n            name: r.name || r.label || String(r)\r\n          }))\r\n          .filter(r => r.name && r.name !== '');\r\n        setRegions(mapped);\r\n      } catch {\r\n        setRegions([]);\r\n      } finally {\r\n        setRegionsLoading(false);\r\n      }\r\n    };\r\n    fetchRegions();\r\n  }, [leadFilters.city]); // Re-fetch when city changes\r\n\r\n  const leadStatusOptions = [\r\n    'New', \r\n    'Assigned', \r\n    'In Progress', \r\n    'Closed', \r\n    'Rejected'\r\n  ];\r\n  const leadTypeOptions = ['Residential', 'Commercial', 'Plot', 'Other'];\r\n  const requirementOptions = ['Buy', 'Rent', 'Sell'];\r\n  const priorityOptions = ['High', 'Medium', 'Low'];\r\n\r\n  const resetFilters = () => {\r\n    setLeadFilters({\r\n      leadStatus: [],\r\n      leadType: [],\r\n      requirement: [],\r\n      budgetRange: [5000000, 15000000],\r\n      city: '',\r\n      location: '',\r\n      dateAdded: { start: '', end: '' },\r\n      brokerAgent: [],\r\n      priority: []\r\n    });\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  // Pagination calculations\r\n  const totalPages = Math.ceil(totalLeads / leadsPerPage);\r\n  const startIndex = (currentPage - 1) * leadsPerPage;\r\n  const endIndex = Math.min(startIndex + leadsPerPage, totalLeads);\r\n\r\n  // Pagination handlers\r\n  const handlePageChange = (page) => {\r\n    setCurrentPage(page);\r\n  };\r\n\r\n  const handlePreviousPage = () => {\r\n    if (currentPage > 1) {\r\n      setCurrentPage(currentPage - 1);\r\n    }\r\n  };\r\n\r\n  const handleNextPage = () => {\r\n    if (currentPage < totalPages) {\r\n      setCurrentPage(currentPage + 1);\r\n    }\r\n  };\r\n\r\n  const reactSelectStyles = {\r\n    control: (base, state) => ({\r\n      ...base,\r\n      minHeight: 38,\r\n      fontSize: 14,\r\n      borderColor: state.isFocused ? '#eab308' : '#d1d5db', // yellow-500 focus\r\n      boxShadow: 'none',\r\n      cursor: 'pointer',\r\n      ':hover': { borderColor: state.isFocused ? '#eab308' : '#cbd5e1' }\r\n    }),\r\n    option: (base, state) => ({\r\n      ...base,\r\n      fontSize: 14,\r\n      backgroundColor: state.isSelected\r\n        ? '#14532d' // green-900\r\n        : state.isFocused\r\n          ? '#fffbeb' // yellow-50\r\n          : 'white',\r\n      color: state.isSelected ? 'white' : '#111827',\r\n      cursor: 'pointer'\r\n    }),\r\n    singleValue: (base) => ({ ...base, color: '#111827', fontSize: 14 }),\r\n    placeholder: (base) => ({ ...base, color: '#6b7280', fontSize: 14 }),\r\n    input: (base) => ({ ...base, fontSize: 14 }),\r\n    indicatorSeparator: () => ({ display: 'none' })\r\n  };\r\n\r\n  // Helper function to get region names from lead data\r\n  const getRegionNames = (lead) => {\r\n    let primary = '';\r\n    let secondary = '';\r\n    \r\n    // Handle different possible region field structures\r\n    if (lead.primaryRegion) {\r\n      primary = typeof lead.primaryRegion === 'string' ? lead.primaryRegion : lead.primaryRegion.name;\r\n    } else if (lead.region) {\r\n      primary = typeof lead.region === 'string' ? lead.region : lead.region.name;\r\n    } else if (lead.regions && Array.isArray(lead.regions) && lead.regions.length > 0) {\r\n      primary = lead.regions[0];\r\n    }\r\n    \r\n    if (lead.secondaryRegion) {\r\n      secondary = typeof lead.secondaryRegion === 'string' ? lead.secondaryRegion : lead.secondaryRegion.name;\r\n    } else if (lead.regions && Array.isArray(lead.regions) && lead.regions.length > 1) {\r\n      secondary = lead.regions[1];\r\n    }\r\n    \r\n    return { primary, secondary };\r\n  };\r\n\r\n  // Helper function to get avatar color\r\n  const getAvatarColor = (seed) => {\r\n    if (!seed) return { bg: 'bg-gray-200', text: 'text-gray-600' };\r\n    \r\n    const colors = [\r\n      { bg: 'bg-red-100', text: 'text-red-600' },\r\n      { bg: 'bg-blue-100', text: 'text-blue-600' },\r\n      { bg: 'bg-green-100', text: 'text-green-600' },\r\n      { bg: 'bg-yellow-100', text: 'text-yellow-600' },\r\n      { bg: 'bg-purple-100', text: 'text-purple-600' },\r\n      { bg: 'bg-pink-100', text: 'text-pink-600' },\r\n      { bg: 'bg-indigo-100', text: 'text-indigo-600' },\r\n      { bg: 'bg-orange-100', text: 'text-orange-600' }\r\n    ];\r\n    \r\n    let hash = 0;\r\n    for (let i = 0; i < seed.length; i++) {\r\n      hash = seed.charCodeAt(i) + ((hash << 5) - hash);\r\n    }\r\n    return colors[Math.abs(hash) % colors.length];\r\n  };\r\n\r\n\r\n  const handleLeadStatusChange = (status) => {\r\n    // Single-select behavior: either the clicked status or none\r\n    setLeadFilters(prev => ({\r\n      ...prev,\r\n      leadStatus: (prev.leadStatus[0] === status) ? [] : [status]\r\n    }));\r\n  };\r\n\r\n  const handleLeadTypeChange = (type) => {\r\n    // Single-select behavior\r\n    setLeadFilters(prev => ({\r\n      ...prev,\r\n      leadType: (prev.leadType[0] === type) ? [] : [type]\r\n    }));\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  const handleRequirementChange = (req) => {\r\n    // Single-select behavior\r\n    setLeadFilters(prev => ({\r\n      ...prev,\r\n      requirement: (prev.requirement[0] === req) ? [] : [req]\r\n    }));\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  const handlePriorityChange = (priority) => {\r\n    setLeadFilters(prev => ({\r\n      ...prev,\r\n      priority: prev.priority.includes(priority)\r\n        ? prev.priority.filter(p => p !== priority)\r\n        : [...prev.priority, priority]\r\n    }));\r\n  };\r\n\r\n  const handleLeadBudgetChange = (value) => {\r\n    setLeadFilters(prev => ({\r\n      ...prev,\r\n      budgetRange: [parseInt(value), 20000000]\r\n    }));\r\n  };\r\n\r\n  const handleBudgetMinInput = (value) => {\r\n    const min = Math.max(1000000, Math.min(parseInt(value || 0), leadFilters.budgetRange[1]));\r\n    setLeadFilters(prev => ({ ...prev, budgetRange: [min, prev.budgetRange[1]] }));\r\n  };\r\n\r\n  const handleBudgetMaxInput = (value) => {\r\n    const max = Math.min(20000000, Math.max(parseInt(value || 0), leadFilters.budgetRange[0]));\r\n    setLeadFilters(prev => ({ ...prev, budgetRange: [prev.budgetRange[0], max] }));\r\n  };\r\n\r\n  const formatPrice = (price) => {\r\n    return new Intl.NumberFormat('en-US', {\r\n      style: 'currency',\r\n      currency: 'USD',\r\n      minimumFractionDigits: 0\r\n    }).format(price);\r\n  };\r\n\r\n  const getStatusColor = (status) => {\r\n    switch (status) {\r\n      case 'Open':\r\n        return 'bg-emerald-50 text-[#0A421E]';\r\n      case 'In Progress':\r\n        return 'bg-[#ECFDF5] text-[#0A421E]';\r\n      case 'Closed':\r\n        return 'bg-gray-100 text-gray-800';\r\n      default:\r\n        return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  // Gradient ribbon styles for status to match provided images\r\n  const getStatusRibbonStyle = (status) => {\r\n    if (!status) {\r\n      return { background: 'linear-gradient(90deg, #F59E0B 0%, #EF4444 100%)' };\r\n    }\r\n    \r\n    const statusLower = status.toLowerCase().trim();\r\n    \r\n    switch (statusLower) {\r\n      case 'open':\r\n      case 'new':\r\n        return {\r\n          background: 'linear-gradient(90deg, #F59E0B 0%, #EF4444 100%)',\r\n        };\r\n      case 'assigned':\r\n        return {\r\n          background: 'linear-gradient(90deg, #3B82F6 0%, #1D4ED8 100%)',\r\n        };\r\n      case 'in progress':\r\n      case 'inprogress':\r\n        return {\r\n          background: 'linear-gradient(90deg, #8B5CF6 0%, #7C3AED 100%)',\r\n        };\r\n      case 'closed':\r\n      case 'completed':\r\n        return {\r\n          background: 'linear-gradient(90deg, #10B981 0%, #059669 100%)',\r\n        };\r\n      case 'rejected':\r\n      case 'cancelled':\r\n        return {\r\n          background: 'linear-gradient(90deg, #EF4444 0%, #DC2626 100%)',\r\n        };\r\n      case 'transferred':\r\n        return {\r\n          background: 'linear-gradient(90deg, #F97316 0%, #EA580C 100%)',\r\n        };\r\n      case 'active':\r\n        return {\r\n          background: 'linear-gradient(90deg, #10B981 0%, #047857 100%)',\r\n        };\r\n      default:\r\n        console.log('Unknown status:', status);\r\n        return { background: 'linear-gradient(90deg, #F59E0B 0%, #EF4444 100%)' };\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"grid grid-cols-12 gap-8\">\r\n      {/* Filter Sidebar - 3 columns */}\r\n      <div className=\"col-span-3\">\r\n        {false ? (\r\n          <div className=\"bg-white rounded-lg p-6\">\r\n            <div className=\"space-y-6\">\r\n              {/* Filter Header Skeleton */}\r\n              <div className=\"flex items-center mb-6 pb-4 border-b border-gray-200\">\r\n                <div className=\"w-5 h-5 bg-gray-200 rounded mr-2\"></div>\r\n                <div className=\"h-6 bg-gray-200 rounded w-32\"></div>\r\n              </div>\r\n              \r\n              \r\n              \r\n              {/* Lead Type Filter Skeleton */}\r\n              <div className=\"mb-6 pb-6 border-b border-gray-200\">\r\n                <div className=\"h-4 bg-gray-200 rounded w-16 mb-4\"></div>\r\n                <div className=\"space-y-3\">\r\n                  {[1,2,3,4,5].map((i) => (\r\n                    <div key={i} className=\"flex items-center\">\r\n                      <div className=\"w-4 h-4 bg-gray-200 rounded\"></div>\r\n                      <div className=\"ml-3 h-4 bg-gray-200 rounded w-20\"></div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n              \r\n              {/* Budget Range Filter Skeleton */}\r\n              <div className=\"mb-6 pb-6 border-b border-gray-200\">\r\n                <div className=\"h-4 bg-gray-200 rounded w-24 mb-4\"></div>\r\n                <div className=\"h-4 bg-gray-200 rounded w-32 mb-4\"></div>\r\n                <div className=\"h-2 bg-gray-200 rounded\"></div>\r\n              </div>\r\n              \r\n              {/* Location Filter Skeleton */}\r\n              <div className=\"mb-6 pb-6 border-b border-gray-200\">\r\n                <div className=\"h-4 bg-gray-200 rounded w-16 mb-4\"></div>\r\n                <div className=\"h-8 bg-gray-200 rounded w-full\"></div>\r\n              </div>\r\n              \r\n              {/* Date Added Filter Skeleton */}\r\n              <div className=\"mb-6 pb-6 border-b border-gray-200\">\r\n                <div className=\"h-4 bg-gray-200 rounded w-20 mb-4\"></div>\r\n                <div className=\"space-y-2\">\r\n                  <div className=\"h-8 bg-gray-200 rounded w-full\"></div>\r\n                  <div className=\"h-8 bg-gray-200 rounded w-full\"></div>\r\n                </div>\r\n              </div>\r\n              \r\n              {/* Broker/Agent Filter Skeleton */}\r\n              <div className=\"mb-6 pb-6 border-b border-gray-200\">\r\n                <div className=\"h-4 bg-gray-200 rounded w-24 mb-4\"></div>\r\n                <div className=\"h-8 bg-gray-200 rounded w-full\"></div>\r\n              </div>\r\n              \r\n              {/* Priority Filter Skeleton */}\r\n              <div>\r\n                <div className=\"h-4 bg-gray-200 rounded w-16 mb-4\"></div>\r\n                <div className=\"space-y-3\">\r\n                  {[1,2,3].map((i) => (\r\n                    <div key={i} className=\"flex items-center\">\r\n                      <div className=\"w-4 h-4 bg-gray-200 rounded\"></div>\r\n                      <div className=\"ml-3 h-4 bg-gray-200 rounded w-16\"></div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"pt-5\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={resetFilters}\r\n                className=\"w-full text-white bg-green-900 cursor-pointer flex items-center justify-center px-4 py-2 rounded-lg transition-all duration-200 shadow\"\r\n                aria-label=\"Reset filters\"\r\n              >\r\n                <i className=\"fa-solid fa-arrows-rotate text-sm mr-2 text-white\" aria-hidden=\"true\"></i>\r\n                Reset Filters\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n           <div className=\"bg-white rounded-2xl p-5 shadow-lg border border-gray-100 space-y-6\">\r\n\r\n          {/* Header */}\r\n          <div className=\"flex items-center justify-between pb-3 border-b border-gray-200\">\r\n            <div className=\"flex items-center gap-2\">\r\n              <svg className=\"w-5 h-5 text-green-900\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.293A1 1 0 013 6.586V4z\" />\r\n              </svg>\r\n              <h2 className=\"text-lg font-semibold text-gray-900\">Filters</h2>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Top filters: City and Region */}\r\n          <div className=\"mb-6 pb-6 border-b border-gray-200\">\r\n            <div className=\"grid grid-cols-1 gap-4\">\r\n              <div>\r\n                <h3 className=\"text-sm font-medium text-gray-900 mb-2\">City</h3>\r\n                <Select\r\n                  instanceId=\"leads-city-select\"\r\n                  styles={reactSelectStyles}\r\n                  className=\"cursor-pointer\"\r\n                  options={cities}\r\n                  value={leadFilters.city ? { value: leadFilters.city, label: leadFilters.city } : null}\r\n                  onChange={(opt) => {\r\n                    setLeadFilters(prev => ({ \r\n                      ...prev, \r\n                      city: opt?.value || '',\r\n                      location: '' // Clear region when city changes\r\n                    }));\r\n                    setCurrentPage(1);\r\n                  }}\r\n                  isSearchable\r\n                  isClearable\r\n                  placeholder=\"Select City\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <h3 className=\"text-sm font-medium text-gray-900 mb-2\">Region</h3>\r\n                {regionsLoading ? (\r\n                  <div className=\"h-8 bg-gray-200 rounded animate-pulse\" />\r\n                ) : (\r\n                  <Select\r\n                    instanceId=\"leads-region-select\"\r\n                    styles={reactSelectStyles}\r\n                    className=\"cursor-pointer\"\r\n                    options={regions.map(r => ({ value: r.name, label: r.name }))}\r\n                    value={leadFilters.location ? { value: leadFilters.location, label: leadFilters.location } : null}\r\n                    onChange={(opt) => {\r\n                      setLeadFilters(prev => ({ ...prev, location: opt?.value || '' }));\r\n                      setCurrentPage(1);\r\n                    }}\r\n                    isSearchable\r\n                    isClearable\r\n                    placeholder=\"Select Region\"\r\n                  />\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Lead Type Filter (chips - gray) */}\r\n          <div className=\"mb-6 pb-6 border-b border-gray-200\">\r\n            <h3 className=\"text-sm font-medium text-gray-900 mb-2\">Property Type</h3>\r\n            <div className=\"flex flex-wrap gap-2\">\r\n              {leadTypeOptions.map((type) => {\r\n                const selected = (leadFilters.leadType || []).includes(type);\r\n                return (\r\n                  <button\r\n                    key={type}\r\n                    type=\"button\"\r\n                    onClick={() => handleLeadTypeChange(type)}\r\n                    className={`px-3 py-1 rounded-full text-xs font-medium border transition-colors shadow-sm ${selected ? 'bg-gray-600 text-white border-gray-600' : 'bg-gray-100 text-gray-800 border-gray-200 hover:bg-gray-200'}`}\r\n                  >\r\n                    {type}\r\n                  </button>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Requirement Filter (chips - gray) */}\r\n          <div className=\"mb-6 pb-6 border-b border-gray-200\">\r\n            <h3 className=\"text-sm font-medium text-gray-900 mb-2\">Requirement</h3>\r\n            <div className=\"flex flex-wrap gap-2\">\r\n              {requirementOptions.map((req) => {\r\n                const selected = (leadFilters.requirement || []).includes(req);\r\n                return (\r\n                  <button\r\n                    key={req}\r\n                    type=\"button\"\r\n                    onClick={() => handleRequirementChange(req)}\r\n                    className={`px-3 py-1 rounded-full text-xs font-medium border transition-colors shadow-sm ${selected ? 'bg-gray-600 text-white border-gray-600' : 'bg-gray-100 text-gray-800 border-gray-200 hover:bg-gray-200'}`}\r\n                  >\r\n                    {req}\r\n                  </button>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Budget Range Filter */}\r\n          <div className=\"mb-6 pb-6 border-b border-gray-200\">\r\n            <h3 className=\"text-sm font-medium text-gray-900 mb-3\">Budget Range</h3>\r\n            <div className=\"mb-3 grid grid-cols-2 gap-2\">\r\n              <div className=\"relative\">\r\n                <span className=\"absolute left-3 top-2 text-xs text-gray-500\">Min</span>\r\n                <input\r\n                  type=\"number\"\r\n                  value={leadFilters.budgetRange[0]}\r\n                  onChange={(e) => handleBudgetMinInput(e.target.value)}\r\n                  className=\"w-full pl-10 pr-3 py-2 border border-gray-300 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-yellow-500\"\r\n                />\r\n              </div>\r\n              <div className=\"relative\">\r\n                <span className=\"absolute left-3 top-2 text-xs text-gray-500\">Max</span>\r\n                <input\r\n                  type=\"number\"\r\n                  value={leadFilters.budgetRange[1]}\r\n                  onChange={(e) => handleBudgetMaxInput(e.target.value)}\r\n                  className=\"w-full pl-10 pr-3 py-2 border border-gray-300 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-yellow-500\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"relative\">\r\n              <div className=\"w-full h-2 bg-gray-200 rounded-lg relative\">\r\n                <div \r\n                  className=\"h-2 bg-green-900 rounded-lg absolute top-0\"\r\n                  style={{\r\n                    left: '0%',\r\n                    width: `${((leadFilters.budgetRange[0] - 1000000) / (20000000 - 1000000)) * 100}%`\r\n                  }}\r\n                ></div>\r\n                <input\r\n                  type=\"range\"\r\n                  min=\"1000000\"\r\n                  max=\"20000000\"\r\n                  step=\"500000\"\r\n                  value={leadFilters.budgetRange[0]}\r\n                  onChange={(e) => handleLeadBudgetChange(e.target.value)}\r\n                  className=\"w-full h-2 bg-transparent rounded-lg appearance-none cursor-pointer absolute top-0 slider-single\"\r\n                />\r\n              </div>\r\n              <div className=\"flex justify-between text-xs text-gray-700 mt-1\">\r\n                <span>$1M</span>\r\n                <span>$20M</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Region/City already moved to top */}\r\n\r\n          {/* Date filter removed as requested */}\r\n\r\n          {/* Broker/Agent Filter (single-select from API) */}\r\n          <div className=\"mb-6 pb-6 border-b border-gray-200\">\r\n            <h3 className=\"text-sm font-medium text-gray-900 mb-3\">Broker/Agent</h3>\r\n            {(() => {\r\n              if (brokersLoading) return <div className=\"h-8 bg-gray-200 rounded animate-pulse\" />;\r\n              return (\r\n                <Select\r\n                  instanceId=\"leads-agent-select\"\r\n                  styles={reactSelectStyles}\r\n                  className=\"cursor-pointer\"\r\n                  options={brokersOptions}\r\n                  value={(() => {\r\n                    const sel = (leadFilters.brokerAgent || [])[0];\r\n                    return brokersOptions.find(o => o.value === sel) || null;\r\n                  })()}\r\n                  onChange={(opt) => setLeadFilters(prev => ({ ...prev, brokerAgent: opt?.value ? [opt.value] : [] }))}\r\n                  isSearchable\r\n                  placeholder=\"Select Broker/Agent\"\r\n                />\r\n              );\r\n            })()}\r\n          </div>\r\n\r\n          <div className=\"pt-5\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={resetFilters}\r\n                className=\"w-full text-white bg-green-900 cursor-pointer flex items-center justify-center px-4 py-2 rounded-lg transition-all duration-200 shadow\"\r\n                aria-label=\"Reset filters\"\r\n              >\r\n                <i className=\"fa-solid fa-arrows-rotate text-sm mr-2 text-white\" aria-hidden=\"true\"></i>\r\n                Reset Filters\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          \r\n        )}\r\n      </div>\r\n\r\n      {/* Leads Grid - 9 columns */}\r\n      <div className=\"col-span-9\">\r\n        {/* Header with page info and sort filter */}\r\n        <div className=\"flex items-center justify-between mb-6\">\r\n          {/* Page number data on top left */}\r\n          <div className=\"text-sm text-gray-600\">\r\n            {isLoading ? (\r\n              <div className=\"h-4 w-32 bg-gray-200 rounded animate-pulse\"></div>\r\n            ) : (\r\n              <>\r\n                Showing {startIndex + 1}-{Math.min(endIndex, totalLeads)} of {totalLeads} leads\r\n               \r\n              </>\r\n            )}\r\n          </div>\r\n          \r\n          {/* Sort filter on top right */}\r\n          <div className=\"flex items-center gap-2\">\r\n            <span className=\"text-sm text-gray-600\">Sort by:</span>\r\n            <Select\r\n              instanceId=\"leads-sort-select\"\r\n              styles={{\r\n                control: (base) => ({\r\n                  ...base,\r\n                  minHeight: 36,\r\n                  fontSize: 14,\r\n                  borderColor: '#d1d5db',\r\n                  boxShadow: 'none',\r\n                  cursor: 'pointer',\r\n                  ':hover': { borderColor: '#9ca3af' }\r\n                }),\r\n                option: (base, state) => ({\r\n                  ...base,\r\n                  fontSize: 14,\r\n                  backgroundColor: state.isSelected\r\n                    ? '#0A421E'\r\n                    : state.isFocused\r\n                      ? '#f3f4f6'\r\n                      : 'white',\r\n                  color: state.isSelected ? 'white' : '#111827',\r\n                  cursor: 'pointer'\r\n                }),\r\n                singleValue: (base) => ({ ...base, color: '#111827', fontSize: 14 }),\r\n                placeholder: (base) => ({ ...base, color: '#6b7280', fontSize: 14 }),\r\n                input: (base) => ({ ...base, fontSize: 14 }),\r\n                indicatorSeparator: () => ({ display: 'none' })\r\n              }}\r\n              options={[\r\n                { value: 'date-added-newest', label: 'Date Added (Newest First)' },\r\n                { value: 'date-added-oldest', label: 'Date Added (Oldest First)' },\r\n                { value: 'status', label: 'Status' },\r\n                { value: 'budget-high', label: 'Budget (High to Low)' },\r\n                { value: 'budget-low', label: 'Budget (Low to High)' },\r\n                { value: 'name-asc', label: 'Name (A-Z)' },\r\n                { value: 'name-desc', label: 'Name (Z-A)' }\r\n              ]}\r\n              value={[\r\n                { value: 'date-added-newest', label: 'Date Added (Newest First)' },\r\n                { value: 'date-added-oldest', label: 'Date Added (Oldest First)' },\r\n                { value: 'status', label: 'Status' },\r\n                { value: 'budget-high', label: 'Budget (High to Low)' },\r\n                { value: 'budget-low', label: 'Budget (Low to High)' },\r\n                { value: 'name-asc', label: 'Name (A-Z)' },\r\n                { value: 'name-desc', label: 'Name (Z-A)' }\r\n              ].find(o => o.value === sortBy)}\r\n              onChange={(opt) => setSortBy(opt?.value || 'date-added-newest')}\r\n              isSearchable={false}\r\n              className=\"w-56\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Leads Grid */}\r\n        {isLoading ? (\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n            {[1,2,3,4,5,6,7,8,9].map((i) => (\r\n              <div key={i} className=\"bg-white border border-gray-200 rounded-lg p-6\">\r\n                {/* Profile and Status Skeleton */}\r\n                <div className=\"flex items-center justify-between mb-4\">\r\n                  <div className=\"flex items-center\">\r\n                    <div className=\"w-18 h-18 bg-gray-200 rounded-full\"></div>\r\n                    <div className=\"ml-3\">\r\n                      <div className=\"h-5 bg-gray-200 rounded w-24\"></div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"h-6 bg-gray-200 rounded w-16\"></div>\r\n                </div>\r\n\r\n                {/* Lead Details Skeleton */}\r\n                <div className=\"space-y-2 mb-4\">\r\n                  <div className=\"flex justify-between\">\r\n                    <div className=\"h-3 bg-gray-200 rounded w-8\"></div>\r\n                    <div className=\"h-3 bg-gray-200 rounded w-12\"></div>\r\n                  </div>\r\n                  <div className=\"flex justify-between\">\r\n                    <div className=\"h-3 bg-gray-200 rounded w-16\"></div>\r\n                    <div className=\"h-3 bg-gray-200 rounded w-20\"></div>\r\n                  </div>\r\n                  <div className=\"flex justify-between\">\r\n                    <div className=\"h-3 bg-gray-200 rounded w-12\"></div>\r\n                    <div className=\"h-3 bg-gray-200 rounded w-24\"></div>\r\n                  </div>\r\n                  <div className=\"flex justify-between\">\r\n                    <div className=\"h-3 bg-gray-200 rounded w-10\"></div>\r\n                    <div className=\"h-3 bg-gray-200 rounded w-32\"></div>\r\n                  </div>\r\n                  <div className=\"flex justify-between\">\r\n                    <div className=\"h-3 bg-gray-200 rounded w-14\"></div>\r\n                    <div className=\"h-3 bg-gray-200 rounded w-16\"></div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Interested Regions Skeleton */}\r\n                <div className=\"mb-4\">\r\n                  <div className=\"h-4 bg-gray-200 rounded w-32 mb-2\"></div>\r\n                  <div className=\"flex flex-wrap gap-1\">\r\n                    <div className=\"h-6 bg-gray-200 rounded-full w-16\"></div>\r\n                    <div className=\"h-6 bg-gray-200 rounded-full w-20\"></div>\r\n                    <div className=\"h-6 bg-gray-200 rounded-full w-18\"></div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Action Buttons Skeleton */}\r\n                <div className=\"space-y-3\">\r\n                  <div className=\"h-8 bg-gray-200 rounded w-full\"></div>\r\n                  <div className=\"flex justify-end gap-4\">\r\n                    <div className=\"h-8 w-8 bg-gray-200 rounded\"></div>\r\n                    <div className=\"h-8 w-8 bg-gray-200 rounded\"></div>\r\n                    <div className=\"h-8 w-8 bg-gray-200 rounded\"></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : leadsError ? (\r\n          <div className=\"text-center py-12\">\r\n            <div className=\"text-red-600 mb-4\">\r\n              <svg className=\"w-12 h-12 mx-auto mb-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z\" />\r\n              </svg>\r\n              <p className=\"text-lg font-medium\">{leadsError}</p>\r\n              <button \r\n                onClick={fetchLeads}\r\n                className=\"mt-4 bg-[#0A421E] text-white px-4 py-2 rounded-md hover:bg-[#0b4f24] transition-colors\"\r\n              >\r\n                Try Again\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ) : (leads.length === 0 && !isLoading) ? (\r\n          <div className=\"text-center py-12\">\r\n            <div className=\"text-gray-500 mb-4\">\r\n              <svg className=\"w-12 h-12 mx-auto mb-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\r\n              </svg>\r\n              <p className=\"text-lg font-medium\">No leads found</p>\r\n              <p className=\"text-sm text-gray-400\">\r\n                {leadFilters.leadStatus.length > 0 \r\n                  ? `No leads found with status: ${leadFilters.leadStatus.join(', ')}`\r\n                  : 'Try adjusting your filters or search criteria'\r\n                }\r\n              </p>\r\n              {leadFilters.leadStatus.length > 0 && (\r\n                <button \r\n                  onClick={resetFilters}\r\n                  className=\"mt-4 bg-[#0A421E] text-white px-4 py-2 rounded-md hover:bg-[#0b4f24] transition-colors\"\r\n                >\r\n                  Clear Filters\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n            {leads.map((lead, index) => {\r\n              const { primary, secondary } = getRegionNames(lead);\r\n              const seed = lead.customerName || lead.name || lead.customerEmail || lead.customerPhone || '';\r\n              const avatarColor = getAvatarColor(seed);\r\n              \r\n              return (\r\n                <div key={lead._id || lead.id || index} className=\"bg-white border border-gray-200 rounded-lg p-6 hover:shadow-lg transition-shadow text-sm\">\r\n              {/* Profile and Status */}\r\n              <div className=\"flex items-center justify-between mb-4\">\r\n                <div className=\"flex items-center\">\r\n                    <div className={`w-18 h-18 rounded-full flex items-center justify-center text-xs font-semibold ${avatarColor.bg} ${avatarColor.text}`}>\r\n                        {(lead.customerName || lead.name || '-')\r\n                          .split(' ')\r\n                          .map(s => s[0])\r\n                          .filter(Boolean)\r\n                          .join('')\r\n                          .slice(0, 2)\r\n                          .toUpperCase()}\r\n                      </div>\r\n                  <div className=\"ml-3\">\r\n                        <h3 className=\"text-base font-semibold text-gray-900\">{lead.customerName || lead.name || '-'}</h3>\r\n                  </div>\r\n                </div>\r\n                <div className=\"relative\">\r\n                  <span\r\n                    className=\"text-[11px] font-semibold text-white px-3 py-1 rounded-tr-md rounded-bl-md inline-block\"\r\n                    style={getStatusRibbonStyle(lead.status)}\r\n                  >\r\n                        {(() => {\r\n                          if (!lead.status) return 'NEW';\r\n                          const statusLower = lead.status.toLowerCase().trim();\r\n                          switch (statusLower) {\r\n                            case 'open':\r\n                            case 'new':\r\n                              return 'NEW';\r\n                            case 'assigned':\r\n                              return 'ASSIGNED';\r\n                            case 'in progress':\r\n                            case 'inprogress':\r\n                              return 'IN PROGRESS';\r\n                            case 'closed':\r\n                            case 'completed':\r\n                              return 'CLOSED';\r\n                            case 'rejected':\r\n                            case 'cancelled':\r\n                              return 'REJECTED';\r\n                            case 'transferred':\r\n                              return 'TRANSFERRED';\r\n                            case 'active':\r\n                              return 'ACTIVE';\r\n                            default:\r\n                              console.log('Unknown status text:', lead.status);\r\n                              return lead.status.toUpperCase();\r\n                          }\r\n                        })()}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Lead Details */}\r\n              <div className=\"space-y-0 mb-4\">\r\n                <div className=\"flex justify-between py-2 border-b border-gray-200\">\r\n                  <span className=\"text-sm text-gray-600\">Type:</span>\r\n                      <span className=\"text-sm font-medium text-gray-900\">{lead.propertyType || '-'}</span>\r\n                </div>\r\n                <div className=\"flex justify-between py-2 border-b border-gray-200\">\r\n                  <span className=\"text-sm text-gray-600\">Budget/Price:</span>\r\n                      <span className=\"text-sm font-medium text-gray-900\">\r\n                        {typeof lead.budget === 'number' \r\n                          ? `$${lead.budget.toLocaleString()}` \r\n                          : lead.budget || '-'}\r\n                      </span>\r\n                </div>\r\n                <div className=\"flex justify-between py-2 border-b border-gray-200\">\r\n                  <span className=\"text-sm text-gray-600\">Phone:</span>\r\n                      <span className=\"text-sm font-medium text-gray-900\">{lead.customerPhone || lead.contact || '-'}</span>\r\n                </div>\r\n                <div className=\"flex justify-between py-2 border-b border-gray-200\">\r\n                  <span className=\"text-sm text-gray-600\">Email:</span>\r\n                      <span className=\"text-sm font-medium text-gray-900\">{lead.customerEmail || '-'}</span>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Interested Regions */}\r\n              <div className=\"mb-4\">\r\n                <h4 className=\"text-sm font-medium text-gray-900 mb-2\">Interested Regions:</h4>\r\n                <div className=\"flex flex-wrap gap-1\">\r\n                      {primary && (\r\n                        <span className=\"px-2 py-0.5 bg-gray-100 text-gray-700 text-xs rounded-full\">\r\n                          {primary}\r\n                    </span>\r\n                      )}\r\n                      {secondary && (\r\n                        <span className=\"px-2 py-0.5 bg-gray-100 text-gray-700 text-xs rounded-full\">\r\n                          {secondary}\r\n                        </span>\r\n                      )}\r\n                      {!primary && !secondary && (\r\n                        <span className=\"px-2 py-0.5 bg-gray-100 text-gray-700 text-xs rounded-full\">\r\n                          Not specified\r\n                        </span>\r\n                      )}\r\n                </div>\r\n              </div>\r\n\r\n              {/* Action Buttons */}\r\n              <div className=\"space-y-3\">\r\n                <a href={`/lead-details/${lead._id || lead.id}`} className=\"block w-full bg-[#0A421E] text-center text-white py-2 px-4 rounded-md text-sm font-medium hover:bg-[#0b4f24] transition-colors cursor-pointer\">\r\n                  View Details\r\n                </a>\r\n              </div>\r\n            </div>\r\n              );\r\n            })}\r\n          </div>\r\n        )}\r\n\r\n        {/* Pagination */}\r\n        {!isLoading && !leadsError && leads.length > 0 && totalPages > 1 && (\r\n          <div className=\"mt-8 flex items-center justify-between\">\r\n            \r\n            <div className=\"flex items-center space-x-2\">\r\n              {/* Previous Button */}\r\n              <button\r\n                onClick={handlePreviousPage}\r\n                disabled={currentPage === 1}\r\n                className={`px-3 py-2 text-sm font-medium rounded-md ${\r\n                  currentPage === 1\r\n                    ? 'bg-gray-100 text-gray-400 cursor-not-allowed'\r\n                    : 'bg-white text-gray-700 border border-gray-300 hover:bg-gray-50'\r\n                }`}\r\n              >\r\n                Previous\r\n              </button>\r\n\r\n              {/* Page Numbers */}\r\n              <div className=\"flex items-center space-x-1\">\r\n                {(() => {\r\n                  const pages = [];\r\n                  const maxVisiblePages = 5;\r\n                  let startPage = Math.max(1, currentPage - Math.floor(maxVisiblePages / 2));\r\n                  let endPage = Math.min(totalPages, startPage + maxVisiblePages - 1);\r\n                  \r\n                  // Adjust start page if we're near the end\r\n                  if (endPage - startPage + 1 < maxVisiblePages) {\r\n                    startPage = Math.max(1, endPage - maxVisiblePages + 1);\r\n                  }\r\n\r\n                  // Add first page and ellipsis if needed\r\n                  if (startPage > 1) {\r\n                    pages.push(\r\n                      <button\r\n                        key={1}\r\n                        onClick={() => handlePageChange(1)}\r\n                        className=\"px-3 py-2 text-sm font-medium rounded-md bg-white text-gray-700 border border-gray-300 hover:bg-gray-50\"\r\n                      >\r\n                        1\r\n                      </button>\r\n                    );\r\n                    if (startPage > 2) {\r\n                      pages.push(\r\n                        <span key=\"ellipsis1\" className=\"px-2 text-gray-500\">\r\n                          ...\r\n                        </span>\r\n                      );\r\n                    }\r\n                  }\r\n\r\n                  // Add visible page numbers\r\n                  for (let i = startPage; i <= endPage; i++) {\r\n                    pages.push(\r\n                      <button\r\n                        key={i}\r\n                        onClick={() => handlePageChange(i)}\r\n                        className={`px-3 py-2 text-sm font-medium rounded-md ${\r\n                          i === currentPage\r\n                            ? 'bg-[#0A421E] text-white'\r\n                            : 'bg-white text-gray-700 border border-gray-300 hover:bg-gray-50'\r\n                        }`}\r\n                      >\r\n                        {i}\r\n                      </button>\r\n                    );\r\n                  }\r\n\r\n                  // Add last page and ellipsis if needed\r\n                  if (endPage < totalPages) {\r\n                    if (endPage < totalPages - 1) {\r\n                      pages.push(\r\n                        <span key=\"ellipsis2\" className=\"px-2 text-gray-500\">\r\n                          ...\r\n                        </span>\r\n                      );\r\n                    }\r\n                    pages.push(\r\n                      <button\r\n                        key={totalPages}\r\n                        onClick={() => handlePageChange(totalPages)}\r\n                        className=\"px-3 py-2 text-sm font-medium rounded-md bg-white text-gray-700 border border-gray-300 hover:bg-gray-50\"\r\n                      >\r\n                        {totalPages}\r\n                      </button>\r\n                    );\r\n                  }\r\n\r\n                  return pages;\r\n                })()}\r\n              </div>\r\n\r\n              {/* Next Button */}\r\n              <button\r\n                onClick={handleNextPage}\r\n                disabled={currentPage === totalPages}\r\n                className={`px-3 py-2 text-sm font-medium rounded-md ${\r\n                  currentPage === totalPages\r\n                    ? 'bg-gray-100 text-gray-400 cursor-not-allowed'\r\n                    : 'bg-white text-gray-700 border border-gray-300 hover:bg-gray-50'\r\n                }`}\r\n              >\r\n                Next\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <style jsx>{`\r\n        .slider-single {\r\n          background: transparent;\r\n        }\r\n        .slider-single::-webkit-slider-thumb {\r\n          appearance: none;\r\n          width: 20px;\r\n          height: 20px;\r\n          border-radius: 50%;\r\n          background: white;\r\n          cursor: pointer;\r\n          border: 2px solid #0A421E;\r\n          box-shadow: 0 2px 4px rgba(0,0,0,0.2);\r\n        }\r\n        .slider-single::-moz-range-thumb {\r\n          width: 20px;\r\n          height: 20px;\r\n          border-radius: 50%;\r\n          background: white;\r\n          cursor: pointer;\r\n          border: 2px solid #0A421E;\r\n          box-shadow: 0 2px 4px rgba(0,0,0,0.2);\r\n        }\r\n        .slider-single::-webkit-slider-track {\r\n          background: transparent;\r\n        }\r\n        .slider-single::-moz-range-track {\r\n          background: transparent;\r\n        }\r\n      `}</style>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LeadsComponent;\r\n","'use client';\r\n\r\nimport React, { useState, useEffect, useMemo } from 'react';\r\nimport { useRouter } from 'next/navigation';\r\nimport Select, { components } from 'react-select';\r\n\r\nconst BrokersComponent = ({ activeTab, setActiveTab }) => {\r\n  const router = useRouter();\r\n  const [brokerFilters, setBrokerFilters] = useState({\r\n    region: [],\r\n    experienceRange: [0, 20],\r\n    brokerType: [],\r\n    ratingRange: [0, 5],\r\n    languages: [],\r\n    showVerifiedOnly: false,\r\n    city: ''\r\n  });\r\n\r\n  const [sortBy, setSortBy] = useState('rating-high');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [regions, setRegions] = useState([]);\r\n  const [cities, setCities] = useState([\r\n    { value: 'Agra', label: 'Agra' },\r\n    { value: 'Noida', label: 'Noida' }\r\n  ]);\r\n  const [regionsLoading, setRegionsLoading] = useState(true);\r\n  \r\n  // New search states\r\n  const [nameSearchTerm, setNameSearchTerm] = useState('');\r\n  const [regionSearchTerm, setRegionSearchTerm] = useState('');\r\n  \r\n  // Store full region objects for ID mapping\r\n  const [regionsData, setRegionsData] = useState([]);\r\n  \r\n  // Brokers API state\r\n  const [brokers, setBrokers] = useState([]);\r\n  const [brokersLoading, setBrokersLoading] = useState(true);\r\n  \r\n  // Pagination state\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [itemsPerPage, setItemsPerPage] = useState(9);\r\n\r\n  // Enable skeleton loader on Brokers page when switching tabs\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    const t = setTimeout(() => setIsLoading(false), 500);\r\n    return () => clearTimeout(t);\r\n  }, [activeTab]);\r\n\r\n  // Fetch regions from API (refetch when city changes)\r\n  useEffect(() => {\r\n    const fetchRegions = async () => {\r\n      try {\r\n        setRegionsLoading(true);\r\n        \r\n        // Use environment variable for API URL following app pattern\r\n        const apiUrl = process.env.NEXT_PUBLIC_API_URL || '';\r\n        let url = `${apiUrl}/regions`;\r\n        if (brokerFilters.city) {\r\n          url += `?city=${encodeURIComponent(brokerFilters.city)}`;\r\n        }\r\n        const response = await fetch(url, { method: 'GET' });\r\n        \r\n        if (!response.ok) {\r\n          throw new Error(`Failed to fetch regions: ${response.status}`);\r\n        }\r\n        \r\n        const data = await response.json();\r\n        console.log('Regions API response:', data);\r\n        \r\n        // Extract regions data following app pattern\r\n        let regionsData = [];\r\n        \r\n        if (Array.isArray(data?.data)) {\r\n          regionsData = data.data;\r\n        } else if (Array.isArray(data?.regions)) {\r\n          regionsData = data.regions;\r\n        } else if (Array.isArray(data)) {\r\n          regionsData = data;\r\n        } else if (data?.data?.regions && Array.isArray(data.data.regions)) {\r\n          regionsData = data.data.regions;\r\n        }\r\n        \r\n        if (Array.isArray(regionsData) && regionsData.length > 0) {\r\n          // Store full region objects for ID mapping\r\n          setRegionsData(regionsData);\r\n          \r\n          // Extract region names from objects if they are objects\r\n          const regionNames = regionsData.map(region => {\r\n            if (typeof region === 'string') {\r\n              return region;\r\n            } else if (typeof region === 'object' && region !== null) {\r\n              return region.name || region.city || region.state || region._id || String(region);\r\n            }\r\n            return String(region);\r\n          });\r\n          console.log('Processed region names:', regionNames);\r\n          console.log('Full regions data:', regionsData);\r\n          setRegions(regionNames);\r\n        } else {\r\n          throw new Error('No valid regions data received');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching regions:', error);\r\n        // Fallback to hardcoded regions if API fails\r\n        const fallbackRegions = ['Mumbai', 'Delhi', 'Bengaluru', 'Gurugram', 'Pune', 'Noida ', 'Chennai', 'Hyderabad', 'Kolkata'];\r\n        setRegions(fallbackRegions);\r\n      } finally {\r\n        setRegionsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchRegions();\r\n  }, [brokerFilters.city]);\r\n\r\n  // Fetch brokers from API with region and city filtering\r\n  const fetchBrokers = async (regionIds = null) => {\r\n    try {\r\n      setBrokersLoading(true);\r\n      \r\n      // Use environment variable for API URL following app pattern\r\n      const apiUrl = process.env.NEXT_PUBLIC_API_URL || '';\r\n      \r\n      // Build base query parameters\r\n      const baseQueryParams = new URLSearchParams();\r\n      \r\n      // Add region filter if provided\r\n      if (regionIds && regionIds.length > 0) {\r\n        console.log('Using region IDs for filtering:', regionIds);\r\n        \r\n        // Use the first valid region ID for API call\r\n        const validRegionId = regionIds[0];\r\n        baseQueryParams.append('regionId', validRegionId);\r\n        console.log('Using region ID:', validRegionId);\r\n      }\r\n      \r\n      // Fetch brokers with a single API call first, then paginate if needed\r\n      let allBrokers = [];\r\n      const limit = 100; // Server's maximum allowed limit\r\n      \r\n      console.log('Fetching brokers with region IDs:', regionIds);\r\n      console.log('Base query params:', baseQueryParams.toString());\r\n      \r\n      // Make multiple API calls to get all brokers\r\n      let currentPage = 1;\r\n      let hasMorePages = true;\r\n      \r\n      while (hasMorePages) {\r\n      const queryParams = new URLSearchParams(baseQueryParams);\r\n        queryParams.append('page', currentPage);\r\n      queryParams.append('limit', limit);\r\n      \r\n      const queryString = queryParams.toString();\r\n      const apiUrlWithParams = queryString ? `${apiUrl}/brokers?${queryString}` : `${apiUrl}/brokers`;\r\n      \r\n        console.log(`Fetching brokers page ${currentPage}, URL:`, apiUrlWithParams);\r\n      \r\n      const response = await fetch(apiUrlWithParams, { method: 'GET' });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`Failed to fetch brokers: ${response.status}`);\r\n      }\r\n      \r\n      const data = await response.json();\r\n        console.log(`Brokers response for page ${currentPage}:`, data);\r\n        \r\n        // Extract brokers data following app pattern\r\n        let brokersData = [];\r\n        \r\n        console.log('API Response structure:', {\r\n        hasData: !!data?.data,\r\n        dataIsArray: Array.isArray(data?.data),\r\n        hasBrokers: !!data?.brokers,\r\n        brokersIsArray: Array.isArray(data?.brokers),\r\n        isArray: Array.isArray(data),\r\n        hasDataBrokers: !!data?.data?.brokers,\r\n          dataBrokersIsArray: Array.isArray(data?.data?.brokers),\r\n          dataKeys: data ? Object.keys(data) : [],\r\n          dataDataKeys: data?.data ? Object.keys(data.data) : []\r\n        });\r\n        \r\n        // Check if the response has the expected structure from your JSON\r\n        if (data?.data?.brokers) {\r\n          console.log('Found data.data.brokers, sample broker:', data.data.brokers[0]);\r\n          console.log('Sample broker keys:', data.data.brokers[0] ? Object.keys(data.data.brokers[0]) : 'No brokers');\r\n          console.log('Sample broker specializations:', data.data.brokers[0]?.specializations);\r\n          console.log('Sample broker firmName:', data.data.brokers[0]?.firmName);\r\n          console.log('Sample broker leadsCreated:', data.data.brokers[0]?.leadsCreated);\r\n        }\r\n        \r\n        // Try different data structures based on your JSON format\r\n        if (data?.data?.brokers && Array.isArray(data.data.brokers)) {\r\n          brokersData = data.data.brokers;\r\n          console.log(`Using data.data.brokers, found ${brokersData.length} brokers on page ${currentPage}`);\r\n      } else if (Array.isArray(data?.brokers)) {\r\n        brokersData = data.brokers;\r\n          console.log(`Using data.brokers, found ${brokersData.length} brokers on page ${currentPage}`);\r\n        } else if (Array.isArray(data?.data)) {\r\n          brokersData = data.data;\r\n          console.log(`Using data.data, found ${brokersData.length} brokers on page ${currentPage}`);\r\n      } else if (Array.isArray(data)) {\r\n        brokersData = data;\r\n          console.log(`Using data directly, found ${brokersData.length} brokers on page ${currentPage}`);\r\n        } else {\r\n          console.log('No valid brokers data found in response');\r\n          console.log('Full response:', data);\r\n          console.log('Response keys:', Object.keys(data || {}));\r\n      }\r\n      \r\n      if (brokersData.length > 0) {\r\n          allBrokers = allBrokers.concat(brokersData);\r\n          console.log(`Total brokers collected so far: ${allBrokers.length}`);\r\n          \r\n          // Check if we got fewer brokers than the limit (indicating last page)\r\n          if (brokersData.length < limit) {\r\n            hasMorePages = false;\r\n            console.log('Reached last page - fewer brokers than limit');\r\n          } else {\r\n            currentPage++;\r\n          }\r\n        } else {\r\n          hasMorePages = false;\r\n          console.log('No brokers found on page, stopping');\r\n        }\r\n      }\r\n      \r\n      console.log(`Fetched total of ${allBrokers.length} brokers across ${currentPage} pages`);\r\n      \r\n      if (allBrokers.length > 0) {\r\n        console.log('Raw broker data sample:', allBrokers[0]);\r\n        console.log('Available fields in broker:', Object.keys(allBrokers[0]));\r\n        \r\n        // Helper to compute a stable rating based on available broker data\r\n        const computeRating = (raw) => {\r\n          const leadsCount = raw?.leadsCreated?.count || 0;\r\n          const hasSpecializations = Array.isArray(raw?.specializations) && raw.specializations.length > 0;\r\n          const hasFirmName = typeof raw?.firmName === 'string' && raw.firmName.trim() !== '';\r\n          const isVerified = raw?.approvedByAdmin === 'unblocked';\r\n          let rating = 3.0;\r\n          if (leadsCount > 0) rating += 0.5;\r\n          if (hasSpecializations) rating += 0.3;\r\n          if (hasFirmName) rating += 0.2;\r\n          if (isVerified) rating += 0.5;\r\n          return Math.min(rating, 5.0);\r\n        };\r\n        \r\n        // Transform API data to match our component structure\r\n        const transformedBrokers = allBrokers.map((broker, index) => {\r\n          console.log(`Raw broker data for ${index}:`, broker);\r\n          console.log(`Available fields in broker:`, Object.keys(broker));\r\n          console.log(`Broker specializations:`, broker.specializations);\r\n          console.log(`Broker firmName:`, broker.firmName);\r\n          console.log(`Broker leadsCreated:`, broker.leadsCreated);\r\n          \r\n          const computedRating = computeRating(broker);\r\n          return {\r\n            _id: broker._id || undefined,\r\n            userIdRaw: (broker?.userId && typeof broker.userId === 'object') ? broker.userId._id : broker.userId,\r\n            id: broker._id || broker.id,\r\n            name: broker.name || 'Unknown Broker',\r\n            profileImage: broker.brokerImage || '/images/user-1.webp',\r\n            rating: computedRating,\r\n            email: broker.email || '',\r\n            phone: broker.phone || broker.whatsappNumber || '',\r\n            status: broker.approvedByAdmin === 'unblocked' ? 'Verified' : 'Active',\r\n            locations: broker.region ? broker.region.map(r => r.name) : [broker.city || 'Unknown'],\r\n            agency: broker.firmName || 'Unknown Agency',\r\n            experience: (() => {\r\n              if (typeof broker?.experience === 'number') return Math.max(0, Math.floor(broker.experience));\r\n              if (broker?.experience && typeof broker.experience === 'object' && typeof broker.experience.years === 'number') {\r\n                return Math.max(0, Math.floor(broker.experience.years));\r\n              }\r\n              if (!broker.createdAt) return 0;\r\n              const createdDate = new Date(broker.createdAt);\r\n              const currentDate = new Date();\r\n              const diffMs = currentDate - createdDate;\r\n              if (isNaN(diffMs) || diffMs <= 0) return 0;\r\n              const years = diffMs / (1000 * 60 * 60 * 24 * 365);\r\n              return Math.max(0, Math.floor(years));\r\n            })(),\r\n            languages: ['English', 'Hindi'], // Default languages\r\n            address: broker.address || broker.centerLocation || 'Unknown Address',\r\n            brokerTypes: broker.specializations || ['Real Estate Consulting'], // Map specializations to broker types\r\n            // Add the missing fields for proper data binding - use the raw broker data directly\r\n            specializations: broker.specializations || [],\r\n            firmName: broker.firmName || '',\r\n            leadsCreated: broker.leadsCreated || { count: 0, items: [] },\r\n            approvedByAdmin: broker.approvedByAdmin || '',\r\n            createdAt: broker.createdAt || ''\r\n          };\r\n        });\r\n        \r\n        console.log(`Fetched ${transformedBrokers.length} total brokers across ${currentPage - 1} pages`);\r\n        console.log('All brokers data:', transformedBrokers);\r\n        console.log('Sample transformed broker:', transformedBrokers[0]);\r\n        setBrokers(transformedBrokers);\r\n      } else {\r\n        throw new Error('No valid brokers data received');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching brokers:', error);\r\n      // Fallback to hardcoded brokers if API fails\r\n      const fallbackBrokers = [\r\n        {\r\n          id: 1,\r\n          name: 'Aarav Sharma',\r\n          profileImage: '/images/user-1.webp',\r\n          rating: 4.8,\r\n          email: 'aarav.sharma@brokeradda.com',\r\n          phone: '+91 98765 43210',\r\n          status: 'Verified',\r\n          locations: ['Mumbai', 'Pune'],\r\n          agency: 'Sharma Realty',\r\n          experience: 8,\r\n          languages: ['English', 'Hindi', 'Marathi'],\r\n          address: 'Bandra West, Mumbai, India',\r\n          brokerTypes: ['Luxury Homes', 'Investment Properties']\r\n        },\r\n        {\r\n          id: 2,\r\n          name: 'Priya Verma',\r\n          profileImage: '/images/user-2.jpeg',\r\n          rating: 4.9,\r\n          email: 'priya.verma@brokeradda.com',\r\n          phone: '+91 99887 66554',\r\n          status: 'Active',\r\n          locations: ['Delhi', 'Noida Sector 62'],\r\n          agency: 'Verma Associates',\r\n          experience: 12,\r\n          languages: ['English', 'Hindi'],\r\n          address: 'South Extension, New Delhi, India',\r\n          brokerTypes: ['Commercial Leasing', 'Rental Properties']\r\n        }\r\n      ];\r\n      setBrokers(fallbackBrokers);\r\n    } finally {\r\n      setBrokersLoading(false);\r\n    }\r\n  };\r\n\r\n  // Fetch brokers when region filter changes or on initial mount (with debouncing)\r\n  useEffect(() => {\r\n    // Only fetch if regionsData is loaded\r\n    if (regionsData.length === 0) {\r\n      console.log('Regions data not loaded yet, skipping broker fetch');\r\n      return;\r\n    }\r\n\r\n    // Debounce the API call to prevent multiple rapid calls\r\n    const timeoutId = setTimeout(() => {\r\n      // Convert region names to region IDs for API filtering\r\n      const regionIds = brokerFilters.region.map(regionName => {\r\n        const region = regionsData.find(r => {\r\n          if (typeof r === 'object' && r !== null) {\r\n            const regionNameFromData = r.name || r.city || r.state || r._id || String(r);\r\n            return regionNameFromData === regionName;\r\n          }\r\n          return String(r) === regionName;\r\n        });\r\n        \r\n        if (region && region._id && /^[0-9a-fA-F]{24}$/.test(region._id)) {\r\n          return region._id;\r\n        }\r\n        return null;\r\n      }).filter(Boolean);\r\n      \r\n      console.log('Region names:', brokerFilters.region);\r\n      console.log('Mapped region IDs:', regionIds);\r\n      fetchBrokers(regionIds);\r\n    }, 300); // 300ms debounce delay\r\n\r\n    // Cleanup timeout on unmount or dependency change\r\n    return () => clearTimeout(timeoutId);\r\n  }, [brokerFilters.region, brokerFilters.city, regionsData.length]); // also update when city changes\r\n\r\n  const brokerTypes = [\r\n    'Commercial Leasing',\r\n    'Luxury Homes', \r\n    'Investment Properties',\r\n    'Rental Properties',\r\n    'Land Development',\r\n    'Property Management',\r\n    'Real Estate Consulting'\r\n  ];\r\n  // Languages filter removed\r\n\r\n  const resetFilters = () => {\r\n    // Reset all filters to defaults (align with Leads reset behavior)\r\n    setNameSearchTerm('');\r\n    setRegionSearchTerm('');\r\n    setSortBy('rating-high');\r\n    setCurrentPage(1);\r\n    setItemsPerPage(9);\r\n\r\n    setBrokerFilters({\r\n      region: [],\r\n      experienceRange: [0, 20],\r\n      brokerType: [],\r\n      ratingRange: [0, 5],\r\n      languages: [],\r\n      showVerifiedOnly: false,\r\n      city: ''\r\n    });\r\n\r\n    // Trigger fresh fetch without any region filter\r\n    if (regionsData.length > 0) {\r\n      fetchBrokers([]);\r\n    }\r\n  };\r\n\r\n  const reactSelectStyles = {\r\n    control: (base, state) => ({\r\n      ...base,\r\n      fontSize: 14,\r\n      borderColor: state.isFocused ? '#3b82f6' : '#d1d5db', // blue-500 focus\r\n      boxShadow: 'none',\r\n      minHeight: 38,\r\n      cursor: 'pointer',\r\n      ':hover': { borderColor: '#60a5fa' } // blue-400 hover\r\n    }),\r\n    option: (base, state) => ({\r\n      ...base,\r\n      fontSize: 14,\r\n      backgroundColor: state.isSelected ? '#3b82f6' : state.isFocused ? '#eff6ff' : 'white', // blue-50 focus\r\n      color: state.isSelected ? 'white' : '#111827',\r\n      cursor: 'pointer'\r\n    }),\r\n    singleValue: (base) => ({ ...base, color: '#111827', fontSize: 14 }),\r\n    placeholder: (base) => ({ ...base, color: '#6b7280', fontSize: 14 }),\r\n    input: (base) => ({ ...base, fontSize: 14 }),\r\n    indicatorSeparator: () => ({ display: 'none' }),\r\n    multiValue: (base) => ({\r\n      ...base,\r\n      backgroundColor: '#dbeafe', // blue-100\r\n      borderRadius: 9999\r\n    }),\r\n    multiValueLabel: (base) => ({\r\n      ...base,\r\n      fontSize: 14,\r\n      color: '#1e3a8a', // blue-900\r\n      fontWeight: 600\r\n    }),\r\n    multiValueRemove: (base) => ({\r\n      ...base,\r\n      color: '#3b82f6',\r\n      ':hover': { backgroundColor: '#bfdbfe', color: '#1d4ed8' }\r\n    })\r\n  };\r\n\r\n\r\n  const handleBrokerTypeChange = (type) => {\r\n    setBrokerFilters(prev => ({\r\n      ...prev,\r\n      brokerType: prev.brokerType.includes(type)\r\n        ? prev.brokerType.filter(t => t !== type)\r\n        : [...prev.brokerType, type]\r\n    }));\r\n  };\r\n\r\n  const handleLanguageChange = (language) => {\r\n    setBrokerFilters(prev => ({\r\n      ...prev,\r\n      languages: prev.languages.includes(language)\r\n        ? prev.languages.filter(l => l !== language)\r\n        : [...prev.languages, language]\r\n    }));\r\n  };\r\n\r\n  const handleExperienceChange = (index, value) => {\r\n    const newRange = [...brokerFilters.experienceRange];\r\n    newRange[index] = parseInt(value);\r\n    setBrokerFilters(prev => ({\r\n      ...prev,\r\n      experienceRange: newRange\r\n    }));\r\n  };\r\n\r\n  const handleRatingChange = (index, value) => {\r\n    const newRange = [...brokerFilters.ratingRange];\r\n    newRange[index] = parseFloat(value);\r\n    setBrokerFilters(prev => ({\r\n      ...prev,\r\n      ratingRange: newRange\r\n    }));\r\n  };\r\n\r\n  const getStatusColor = (status) => {\r\n    switch (status) {\r\n      case 'Verified':\r\n        return 'bg-[#ECFDF5] text-[#0A421E]';\r\n      case 'Active':\r\n        return 'bg-blue-100 text-blue-800';\r\n      case 'Inactive':\r\n        return 'bg-gray-100 text-gray-800';\r\n      default:\r\n        return 'bg-gray-100 text-gray-800';\r\n    }\r\n  };\r\n\r\n  const renderStars = (rating) => {\r\n    return [...Array(5)].map((_, i) => (\r\n      <svg\r\n        key={i}\r\n        className={`w-4 h-4 ${i < Math.floor(rating) ? 'text-yellow-400' : 'text-gray-300'}`}\r\n        fill=\"currentColor\"\r\n        viewBox=\"0 0 20 20\"\r\n      >\r\n        <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\r\n      </svg>\r\n    ));\r\n  };\r\n\r\n  const getRatingPillClasses = (rating) => {\r\n    // Always use gray color for rating chips as requested\r\n    return 'bg-gray-200 text-gray-700 border-gray-300';\r\n  };\r\n\r\n  // Compute region options based on selected city (mirror Leads behavior)\r\n  const regionOptionsForUI = useMemo(() => {\r\n    if (!brokerFilters.city) return regions;\r\n    const cityLower = brokerFilters.city.toLowerCase();\r\n    const collected = new Set();\r\n    try {\r\n      // Prefer extracting from current brokers data\r\n      (brokers || []).forEach(b => {\r\n        const locations = Array.isArray(b.locations) ? b.locations : [];\r\n        const address = (b.address || '').toLowerCase();\r\n        const cityMatch = address.includes(cityLower) || locations.some(l => (l || '').toLowerCase().includes(cityLower));\r\n        if (cityMatch) {\r\n          locations.forEach(l => { if (l) collected.add(l); });\r\n        }\r\n      });\r\n    } catch {}\r\n    if (collected.size > 0) return Array.from(collected);\r\n    // Fallback: filter master regions list by city token inclusion\r\n    return regions.filter(r => (r || '').toLowerCase().includes(cityLower));\r\n  }, [brokerFilters.city, brokers, regions]);\r\n\r\n  // Filter brokers based on selected filters (client-side filtering)\r\n  const filteredBrokers = brokers.filter(broker => {\r\n    // City filter: backend already applies regionCity when city is selected.\r\n    // To avoid over-filtering due to string mismatches, skip client-side city filtering.\r\n    // Name search filter\r\n    if (nameSearchTerm.trim()) {\r\n      const nameMatch = broker.name.toLowerCase().includes(nameSearchTerm.toLowerCase().trim());\r\n      if (!nameMatch) return false;\r\n    }\r\n\r\n    // Region search filter\r\n    if (regionSearchTerm.trim()) {\r\n      const regionMatch = broker.locations.some(location => \r\n        location.toLowerCase().includes(regionSearchTerm.toLowerCase().trim())\r\n      );\r\n      if (!regionMatch) return false;\r\n    }\r\n\r\n    // Region filter (client-side backup - now using region IDs)\r\n    if (brokerFilters.region.length > 0) {\r\n      console.log('Client-side region filtering with names:', brokerFilters.region);\r\n      console.log('Broker locations:', broker.locations);\r\n      \r\n      const hasMatchingRegion = brokerFilters.region.some(selectedRegion => \r\n        broker.locations.some(brokerLocation => {\r\n          const brokerLoc = brokerLocation.toLowerCase().trim();\r\n          const selectedLoc = selectedRegion.toLowerCase().trim();\r\n          \r\n          console.log(`Comparing broker location \"${brokerLoc}\" with selected region \"${selectedLoc}\"`);\r\n          \r\n          // Exact match\r\n          if (brokerLoc === selectedLoc) {\r\n            console.log('✅ Exact match found');\r\n            return true;\r\n          }\r\n          \r\n          // Check if broker location contains the selected region as a complete word\r\n          const brokerWords = brokerLoc.split(/\\s+/);\r\n          const selectedWords = selectedLoc.split(/\\s+/);\r\n          \r\n          // If selected region has multiple words, check if all words are in broker location\r\n          if (selectedWords.length > 1) {\r\n            const allWordsMatch = selectedWords.every(word => brokerWords.includes(word));\r\n            console.log(`Multi-word check: ${allWordsMatch ? '✅' : '❌'}`);\r\n            return allWordsMatch;\r\n          }\r\n          \r\n          // If selected region is a single word, check if it's a complete word in broker location\r\n          if (selectedWords.length === 1) {\r\n            const singleWordMatch = brokerWords.includes(selectedWords[0]);\r\n            console.log(`Single word check: ${singleWordMatch ? '✅' : '❌'}`);\r\n            return singleWordMatch;\r\n          }\r\n          \r\n          return false;\r\n        })\r\n      );\r\n      \r\n      console.log(`Region filter result for ${broker.name}: ${hasMatchingRegion ? '✅ PASS' : '❌ FAIL'}`);\r\n      if (!hasMatchingRegion) return false;\r\n    }\r\n\r\n    // Experience filter\r\n    if (broker.experience < brokerFilters.experienceRange[0] || \r\n        broker.experience > brokerFilters.experienceRange[1]) {\r\n      console.log(`Broker ${broker.name} filtered out by experience: ${broker.experience} not in range [${brokerFilters.experienceRange[0]}, ${brokerFilters.experienceRange[1]}]`);\r\n      return false;\r\n    }\r\n\r\n\r\n    // Broker type filter\r\n    if (brokerFilters.brokerType.length > 0) {\r\n      const hasMatchingBrokerType = brokerFilters.brokerType.some(selectedType => \r\n        broker.brokerTypes && broker.brokerTypes.includes(selectedType)\r\n      );\r\n      if (!hasMatchingBrokerType) return false;\r\n    }\r\n\r\n    // Rating filter\r\n    if (broker.rating < brokerFilters.ratingRange[0] || \r\n        broker.rating > brokerFilters.ratingRange[1]) {\r\n      return false;\r\n    }\r\n\r\n    // Verified only filter\r\n    if (brokerFilters.showVerifiedOnly && broker.status !== 'Verified') {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  });\r\n\r\n  // Sort brokers based on selected sort option\r\n  const sortedBrokers = [...filteredBrokers].sort((a, b) => {\r\n    switch (sortBy) {\r\n      case 'rating-high':\r\n        return b.rating - a.rating;\r\n      case 'rating-low':\r\n        return a.rating - b.rating;\r\n      case 'experience-high':\r\n        return b.experience - a.experience;\r\n      case 'experience-low':\r\n        return a.experience - b.experience;\r\n      case 'name-asc':\r\n        return a.name.localeCompare(b.name);\r\n      case 'name-desc':\r\n        return b.name.localeCompare(a.name);\r\n      default:\r\n        return b.rating - a.rating;\r\n    }\r\n  });\r\n\r\n  // Pagination calculations\r\n  const totalItems = sortedBrokers.length;\r\n  const totalPages = Math.ceil(totalItems / itemsPerPage);\r\n  const startIndex = (currentPage - 1) * itemsPerPage;\r\n  const endIndex = startIndex + itemsPerPage;\r\n  const paginatedBrokers = sortedBrokers.slice(startIndex, endIndex);\r\n\r\n  // Reset to first page when filters change\r\n  useEffect(() => {\r\n    setCurrentPage(1);\r\n  }, [brokerFilters, sortBy]);\r\n\r\n  // Pagination handlers\r\n  const handlePageChange = (page) => {\r\n    setCurrentPage(page);\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    if (currentPage > 1) {\r\n      setCurrentPage(currentPage - 1);\r\n    }\r\n  };\r\n\r\n  const handleNext = () => {\r\n    if (currentPage < totalPages) {\r\n      setCurrentPage(currentPage + 1);\r\n    }\r\n  };\r\n\r\n  console.log('Total brokers:', brokers.length);\r\n  console.log('Filtered brokers:', filteredBrokers.length);\r\n  console.log('Sorted brokers:', sortedBrokers.length);\r\n  console.log('Current filters:', brokerFilters);\r\n  console.log('Experience range filter:', brokerFilters.experienceRange);\r\n  console.log('Pagination - Current page:', currentPage, 'Total pages:', totalPages, 'Items per page:', itemsPerPage);\r\n\r\n  return (\r\n    <div className=\"grid grid-cols-12 gap-8\">\r\n      {/* Filter Sidebar - 3 columns */}\r\n      <div className=\"col-span-3\">\r\n        {isLoading ? (\r\n          <div className=\"bg-white rounded-lg p-6\">\r\n            <div className=\"space-y-6\">\r\n              {/* Filter Header Skeleton */}\r\n              <div className=\"flex items-center mb-6 pb-4 border-b border-orange-200\">\r\n                <div className=\"w-5 h-5 bg-gray-200 rounded mr-2\"></div>\r\n                <div className=\"h-6 bg-gray-200 rounded w-32\"></div>\r\n              </div>\r\n              \r\n              {/* Location/Region Filter Skeleton */}\r\n              <div className=\"mb-6 pb-6 border-b border-orange-200\">\r\n                <div className=\"h-4 bg-gray-200 rounded w-24 mb-4\"></div>\r\n                <div className=\"h-8 bg-gray-200 rounded w-full\"></div>\r\n              </div>\r\n              \r\n              {/* Experience Years Filter Skeleton */}\r\n              <div className=\"mb-6 pb-6 border-b border-orange-200\">\r\n                <div className=\"h-4 bg-gray-200 rounded w-28 mb-4\"></div>\r\n                <div className=\"h-2 bg-gray-200 rounded\"></div>\r\n              </div>\r\n              \r\n              \r\n              {/* Broker Type Filter Skeleton */}\r\n              <div className=\"mb-6 pb-6 border-b border-orange-200\">\r\n                <div className=\"h-4 bg-gray-200 rounded w-20 mb-4\"></div>\r\n                <div className=\"space-y-3\">\r\n                  {[1,2,3,4].map((i) => (\r\n                    <div key={i} className=\"flex items-center\">\r\n                      <div className=\"w-4 h-4 bg-gray-200 rounded\"></div>\r\n                      <div className=\"ml-3 h-4 bg-gray-200 rounded w-24\"></div>\r\n                    </div>\r\n                  ))}\r\n                  <div className=\"flex items-center mt-3\">\r\n                    <div className=\"w-4 h-4 bg-gray-200 rounded\"></div>\r\n                    <div className=\"ml-3 h-4 bg-gray-200 rounded w-32\"></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              {/* Rating Filter Skeleton */}\r\n              <div className=\"mb-6 pb-6 border-b border-orange-200\">\r\n                <div className=\"h-4 bg-gray-200 rounded w-12 mb-4\"></div>\r\n                <div className=\"h-2 bg-gray-200 rounded\"></div>\r\n              </div>\r\n              \r\n              \r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"bg-white rounded-2xl p-5 shadow-lg border border-gray-100 space-y-6\">\r\n\r\n          {/* Header */}\r\n          <div className=\"flex items-center justify-between pb-3 border-b border-gray-200\">\r\n            <div className=\"flex items-center gap-2\">\r\n              <svg className=\"w-5 h-5 text-green-900\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.293A1 1 0 013 6.586V4z\" />\r\n              </svg>\r\n              <h2 className=\"text-lg font-semibold text-gray-900\">Filters</h2>\r\n            </div>\r\n          </div>\r\n\r\n\r\n          {/* Search by Name */}\r\n          <div>\r\n            <div className=\"mb-2 flex items-center gap-2 text-sm font-medium text-gray-900\">\r\n              \r\n              <span>Search by Name</span>\r\n            </div>\r\n            <div className=\"relative\">\r\n              <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n               \r\n              </div>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search broker name...\"\r\n              value={nameSearchTerm}\r\n              onChange={(e) => setNameSearchTerm(e.target.value)}\r\n                className=\"w-full pl-9 pr-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-yellow-500 focus:border-yellow-500 text-sm bg-white\"\r\n            />\r\n          </div>\r\n          </div>\r\n\r\n\r\n          {/* City Dropdown */}\r\n          <div>\r\n            <div className=\"mb-2 flex items-center gap-2 text-sm font-medium text-gray-900\">\r\n             \r\n              <span>City</span>\r\n            </div>\r\n            <Select\r\n              instanceId=\"brokers-city-select\"\r\n              styles={reactSelectStyles}\r\n              className=\"cursor-pointer\"\r\n              options={cities}\r\n              value={brokerFilters.city ? { value: brokerFilters.city, label: brokerFilters.city } : null}\r\n              onChange={(opt) => {\r\n                setBrokerFilters(prev => ({ ...prev, city: opt?.value || '', region: [] }));\r\n                setCurrentPage(1);\r\n              }}\r\n              isSearchable\r\n              isClearable\r\n              placeholder=\"Select City\"\r\n            />\r\n          </div>\r\n\r\n          {/* Region Dropdown */}\r\n          <div>\r\n            <div className=\"mb-2 flex items-center gap-2 text-sm font-medium text-gray-900\">\r\n             \r\n              <span>Region</span>\r\n            </div>\r\n            {regionsLoading ? (\r\n              <div className=\"h-8 bg-gray-200 rounded animate-pulse\"></div>\r\n            ) : regions.length === 0 ? (\r\n              <div className=\"text-sm text-gray-500\">\r\n                No regions available\r\n              </div>\r\n            ) : (\r\n              <Select\r\n                instanceId=\"brokers-region-select\"\r\n                styles={reactSelectStyles}\r\n                className=\"cursor-pointer\"\r\n                options={regions.map(r => ({ value: r, label: r }))}\r\n                value={brokerFilters.region && brokerFilters.region.length > 0 ? { value: brokerFilters.region[0], label: brokerFilters.region[0] } : null}\r\n                onChange={(opt) => setBrokerFilters(prev => ({\r\n                  ...prev, \r\n                  region: opt ? [opt.value] : []\r\n                }))}\r\n                isSearchable\r\n                isClearable\r\n                placeholder=\"Select Region\"\r\n              />\r\n            )}\r\n          </div>\r\n\r\n\r\n\r\n          {/* Specialization - Chip Selector (no dropdown) */}\r\n          <div>\r\n            <div className=\"mb-2 flex items-center gap-2 text-sm font-medium text-gray-900\">\r\n             \r\n              <span>Specialization</span>\r\n            </div>\r\n            <div className=\"flex flex-wrap gap-2\">\r\n              {brokerTypes.map((type) => {\r\n                const selected = brokerFilters.brokerType.includes(type);\r\n                return (\r\n                  <button\r\n                    key={type}\r\n                    type=\"button\"\r\n                    onClick={() => handleBrokerTypeChange(type)}\r\n                    className={`px-3 py-1 rounded-full text-xs font-medium border transition-colors duration-150 ${selected ? 'bg-gray-600 text-white border-gray-600' : 'bg-gray-100 text-gray-800 border-gray-200 hover:bg-gray-200'}`}\r\n                  >\r\n                    {type}\r\n                  </button>\r\n                );\r\n              })}\r\n              {brokerFilters.brokerType.length > 0 && (\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setBrokerFilters(prev => ({ ...prev, brokerType: [] }))}\r\n                  className=\"ml-1 px-3 py-1 rounded-full text-xs font-medium border bg-gray-100 text-gray-700 hover:bg-gray-200\"\r\n                >\r\n                  Clear\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Experience */}\r\n          <div className=\"mt-5\">\r\n            <div className=\"mb-2 flex items-center gap-2 text-sm font-medium text-gray-900\">\r\n              \r\n              <span>Experience</span>\r\n            </div>\r\n            <div className=\"flex items-center justify-between mb-2\">\r\n              <span className=\"text-base font-semibold text-gray-800\">{brokerFilters.experienceRange[0]}+ years</span>\r\n              <span className=\"text-[11px] text-green-900\">Years</span>\r\n            </div>\r\n            <div className=\"relative\">\r\n                <input\r\n                  type=\"range\"\r\n                min={0}\r\n                max={20}\r\n                step={1}\r\n                  value={brokerFilters.experienceRange[0]}\r\n                  onChange={(e) => handleExperienceChange(0, e.target.value)}\r\n                className=\"w-full accent-green-900\"\r\n              />\r\n              <div className=\"mt-1 flex justify-between text-[10px] text-gray-400\">\r\n                {[0,5,10,15,20].map(v => <span key={v}>{v}</span>)}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Rating Filter */}\r\n          <div className=\"mt-5\">\r\n            <div className=\"mb-2 flex items-center gap-2 text-sm font-medium text-gray-900\">\r\n             \r\n              <span>Minimum Rating</span>\r\n            </div>\r\n            <div className=\"flex items-center gap-1.5\">\r\n              {[1,2,3,4,5].map((i) => (\r\n                <button\r\n                  key={i}\r\n                  type=\"button\"\r\n                  onClick={() => setBrokerFilters(prev => ({ ...prev, ratingRange: [i, 5] }))}\r\n                  className=\"p-0.5 cursor-pointer\"\r\n                  aria-label={`Minimum ${i} stars`}\r\n                >\r\n              <svg className={`w-5 h-5 ${i <= Math.round(brokerFilters.ratingRange[0]) ? 'text-yellow-500' : 'text-slate-300'}`} viewBox=\"0 0 20 20\" fill={i <= Math.round(brokerFilters.ratingRange[0]) ? 'currentColor' : 'none'} stroke=\"currentColor\">\r\n                    <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\r\n                  </svg>\r\n                </button>\r\n              ))}\r\n              <span className=\"ml-2 text-xs text-gray-700\">{Math.round(brokerFilters.ratingRange[0])}+ stars</span>\r\n            </div>\r\n            <div className=\"mt-4 border-t border-gray-100\" />\r\n          </div>\r\n\r\n          {/* Reset Button */}\r\n          <div className=\"pt-5\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={resetFilters}\r\n              className=\"w-full text-white bg-green-900  cursor-pointer flex items-center justify-center px-4 py-2 rounded-lg transition-all duration-200 shadow\"\r\n              aria-label=\"Reset filters\"\r\n            >\r\n              <i className=\"fa-solid fa-arrows-rotate text-sm mr-2 text-white\" aria-hidden=\"true\"></i>\r\n              Reset Filters\r\n            </button>\r\n          </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Brokers Grid - 9 columns */}\r\n      <div className=\"col-span-9\">\r\n        {/* Header with page info and sort filter */}\r\n        <div className=\"flex items-center justify-between mb-6\">\r\n          {/* Page number data on top left */}\r\n          <div className=\"text-sm text-gray-600\">\r\n            {isLoading || brokersLoading ? (\r\n              <div className=\"h-4 w-32 bg-gray-200 rounded animate-pulse\"></div>\r\n            ) : (\r\n              <>\r\n                Showing {startIndex + 1}-{Math.min(endIndex, totalItems)} of {totalItems} brokers\r\n               \r\n              </>\r\n            )}\r\n          </div>\r\n          \r\n          {/* Sort filter on top right */}\r\n          <div className=\"flex items-center gap-2\">\r\n            <span className=\"text-sm text-gray-600\">Sort by:</span>\r\n            <Select\r\n              instanceId=\"brokers-sort-select\"\r\n              styles={{\r\n                control: (base) => ({\r\n                  ...base,\r\n                  minHeight: 36,\r\n                  fontSize: 14,\r\n                  borderColor: '#d1d5db',\r\n                  boxShadow: 'none',\r\n                  cursor: 'pointer',\r\n                  ':hover': { borderColor: '#9ca3af' }\r\n                }),\r\n                option: (base, state) => ({\r\n                  ...base,\r\n                  fontSize: 14,\r\n                  backgroundColor: state.isSelected\r\n                    ? '#0A421E'\r\n                    : state.isFocused\r\n                      ? '#f3f4f6'\r\n                      : 'white',\r\n                  color: state.isSelected ? 'white' : '#111827',\r\n                  cursor: 'pointer'\r\n                }),\r\n                singleValue: (base) => ({ ...base, color: '#111827', fontSize: 14 }),\r\n                placeholder: (base) => ({ ...base, color: '#6b7280', fontSize: 14 }),\r\n                input: (base) => ({ ...base, fontSize: 14 }),\r\n                indicatorSeparator: () => ({ display: 'none' })\r\n              }}\r\n              options={[\r\n                { value: 'rating-high', label: 'Rating (High to Low)' },\r\n                { value: 'rating-low', label: 'Rating (Low to High)' },\r\n                { value: 'experience-high', label: 'Experience (High to Low)' },\r\n                { value: 'experience-low', label: 'Experience (Low to High)' },\r\n                { value: 'name-asc', label: 'Name (A-Z)' },\r\n                { value: 'name-desc', label: 'Name (Z-A)' }\r\n              ]}\r\n              value={[\r\n                { value: 'rating-high', label: 'Rating (High to Low)' },\r\n                { value: 'rating-low', label: 'Rating (Low to High)' },\r\n                { value: 'experience-high', label: 'Experience (High to Low)' },\r\n                { value: 'experience-low', label: 'Experience (Low to High)' },\r\n                { value: 'name-asc', label: 'Name (A-Z)' },\r\n                { value: 'name-desc', label: 'Name (Z-A)' }\r\n              ].find(o => o.value === sortBy)}\r\n              onChange={(opt) => setSortBy(opt?.value || 'rating-high')}\r\n              isSearchable={false}\r\n              className=\"w-48\"\r\n            />\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Brokers Grid */}\r\n        {isLoading || brokersLoading ? (\r\n          <div className=\"grid grid-cols-1 gap-4 lg:gap-6\">\r\n            {[1,2,3,4,5,6].map((i) => (\r\n              <div key={i} className=\"bg-white border border-gray-100 rounded-2xl p-6 shadow-sm\">\r\n                {/* Header: Avatar, name, rating pill */}\r\n                <div className=\"flex items-start gap-3 mb-4\">\r\n                  <div className=\"flex flex-col items-center\">\r\n                    <div className=\"w-18 h-18 bg-gray-200 rounded-full\"></div>\r\n                    <div className=\"mt-2 inline-flex items-center gap-1 px-2 py-1 rounded-full border bg-gray-100\">\r\n                      <div className=\"w-3 h-3 bg-gray-200 rounded\"></div>\r\n                      <div className=\"w-6 h-3 bg-gray-200 rounded\"></div>\r\n            </div>\r\n                  </div>\r\n                  <div className=\"flex-1\">\r\n                    <div className=\"h-4 bg-gray-200 rounded w-32 mb-2\"></div>\r\n                    <div className=\"h-3 bg-gray-200 rounded w-20\"></div>\r\n                </div>\r\n              </div>\r\n                  \r\n                {/* Contact (aligned like live card) */}\r\n                <div className=\"ml-20 mt-2 space-y-2 mb-2\">\r\n                  <div className=\"flex items-center\">\r\n                    <div className=\"w-4 h-4 bg-gray-200 rounded mr-2\"></div>\r\n                    <div className=\"h-4 bg-gray-200 rounded w-40\"></div>\r\n                  </div>\r\n                  <div className=\"flex items-center\">\r\n                    <div className=\"w-4 h-4 bg-gray-200 rounded mr-2\"></div>\r\n                    <div className=\"h-4 bg-gray-200 rounded w-32\"></div>\r\n          </div>\r\n        </div>\r\n\r\n                {/* Status and Locations chips */}\r\n                <div className=\"ml-20 mb-3\">\r\n                  <div className=\"flex flex-wrap gap-1\">\r\n                    <div className=\"h-5 bg-gray-200 rounded-full w-16\"></div>\r\n                    <div className=\"h-5 bg-gray-200 rounded-full w-20\"></div>\r\n                    <div className=\"h-5 bg-gray-200 rounded-full w-16\"></div>\r\n                    </div>\r\n                </div>\r\n\r\n                \r\n\r\n                {/* Agency and Experience */}\r\n                <div className=\"ml-20 flex items-center mb-3\">\r\n                  <div className=\"w-4 h-4 bg-gray-200 rounded mr-2\"></div>\r\n                    <div>\r\n                    <div className=\"h-4 bg-gray-200 rounded w-28 mb-1\"></div>\r\n                    <div className=\"h-3 bg-gray-200 rounded w-20\"></div>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                {/* Address */}\r\n                <div className=\"ml-20 mb-4\">\r\n                  <div className=\"flex items-center\">\r\n                    <div className=\"w-4 h-4 bg-gray-200 rounded mr-2\"></div>\r\n                    <div className=\"h-4 bg-gray-200 rounded w-40\"></div>\r\n                  </div>\r\n                  </div>\r\n                  \r\n                {/* Action Buttons (two) */}\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div className=\"flex-1 h-9 bg-gray-200 rounded-full mr-2\"></div>\r\n                  <div className=\"flex-1 h-9 bg-gray-200 rounded-full\"></div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : totalItems === 0 ? (\r\n          <div className=\"flex flex-col items-center justify-center py-16 px-4\">\r\n            <div className=\"text-center\">\r\n              <div className=\"mx-auto flex items-center justify-center h-24 w-24 rounded-full bg-gray-100 mb-6\">\r\n                <svg className=\"h-12 w-12 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z\" />\r\n                </svg>\r\n              </div>\r\n              <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No Brokers Found</h3>\r\n              <p className=\"text-gray-500 mb-6 max-w-sm\">\r\n                We couldn't find any brokers matching your current filters. Try adjusting your search criteria.\r\n              </p>\r\n              <button\r\n                onClick={resetFilters}\r\n                className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-[#0A421E] hover:bg-[#0b4f24] focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#0A421E] transition-colors\"\r\n              >\r\n                <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\r\n                </svg>\r\n                Reset Filters\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"grid grid-cols-1 gap-4 lg:gap-6\">\r\n            {paginatedBrokers.map((broker) => {\r\n              console.log('Rendering broker card for:', broker.name, {\r\n                specializations: broker.specializations,\r\n                firmName: broker.firmName,\r\n                leadsCreated: broker.leadsCreated,\r\n                locations: broker.locations\r\n              });\r\n              \r\n              // Use raw broker data if transformed data is missing\r\n              const actualSpecializations = broker.specializations || [];\r\n              const actualFirmName = broker.firmName || '';\r\n              const actualLeadsCreated = broker.leadsCreated || { count: 0, items: [] };\r\n              const actualLocations = broker.locations || [];\r\n              \r\n              console.log('Actual data for', broker.name, {\r\n                actualSpecializations,\r\n                actualFirmName,\r\n                actualLeadsCreated,\r\n                actualLocations\r\n              });\r\n              \r\n              return (\r\n            <div\r\n              key={broker.id}\r\n              className=\"relative bg-white rounded-2xl p-6 shadow-lg hover:shadow-xl transition-all duration-300 border border-gray-200 cursor-pointer\"\r\n              onClick={() => {\r\n                const brokerId = broker.userIdRaw || broker.userId || broker._id || broker.id;\r\n                router.push(`/broker-details/${brokerId}`);\r\n              }}\r\n              role=\"button\"\r\n              aria-label={`Open details for ${broker.name || 'broker'}`}\r\n            >\r\n              {/* Header: Avatar, name, rating */}\r\n              <div className=\"flex items-start gap-4 mb-5\">\r\n                <div className=\"flex flex-col items-center\">\r\n                  <img src={broker.profileImage} alt={broker.name} className=\"w-18 h-18 rounded-full object-cover\" />\r\n                  <span className={`mt-2 inline-flex items-center gap-1 px-3 py-1.5 rounded-full text-sm font-bold border-2 shadow-md ${(() => {\r\n                      // Generate rating based on broker data - use the raw broker data directly\r\n                      const leadsCount = broker.leadsCreated?.count || 0;\r\n                      const hasSpecializations = (broker.specializations || []).length > 0;\r\n                      const hasFirmName = broker.firmName && broker.firmName.trim() !== '';\r\n                      const isVerified = broker.approvedByAdmin === 'unblocked';\r\n                      \r\n                      console.log('Rating calculation for', broker.name, {\r\n                        leadsCount,\r\n                        hasSpecializations,\r\n                        hasFirmName,\r\n                        isVerified,\r\n                        specializations: broker.specializations,\r\n                        firmName: broker.firmName,\r\n                        leadsCreated: broker.leadsCreated\r\n                      });\r\n                      \r\n                      // Base rating 3.0, add points for various factors\r\n                      let rating = 3.0;\r\n                      if (leadsCount > 0) rating += 0.5;\r\n                      if (hasSpecializations) rating += 0.3;\r\n                      if (hasFirmName) rating += 0.2;\r\n                      if (isVerified) rating += 0.5;\r\n                      \r\n                      // Cap at 5.0\r\n                      rating = Math.min(rating, 5.0);\r\n                      console.log('Calculated rating:', rating);\r\n                      return getRatingPillClasses(rating);\r\n                    })()}`}>\r\n                    <svg className=\"w-3 h-3\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                        <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\r\n                      </svg>\r\n                    {(() => {\r\n                      // Generate rating based on broker data - same calculation as above\r\n                      const leadsCount = broker.leadsCreated?.count || 0;\r\n                      const hasSpecializations = (broker.specializations || []).length > 0;\r\n                      const hasFirmName = broker.firmName && broker.firmName.trim() !== '';\r\n                      const isVerified = broker.approvedByAdmin === 'unblocked';\r\n                      \r\n                      // Base rating 3.0, add points for various factors\r\n                      let rating = 3.0;\r\n                      if (leadsCount > 0) rating += 0.5;\r\n                      if (hasSpecializations) rating += 0.3;\r\n                      if (hasFirmName) rating += 0.2;\r\n                      if (isVerified) rating += 0.5;\r\n                      \r\n                      // Cap at 5.0\r\n                      rating = Math.min(rating, 5.0);\r\n                      return rating.toFixed(1);\r\n                    })()}\r\n                      </span>\r\n                </div>\r\n                <div className='flex-1'>\r\n                  <div className=\"flex items-center gap-2 mb-2\">\r\n                    <h3 className=\"text-lg font-bold text-gray-900\">{broker.name}</h3>\r\n                    {broker.approvedByAdmin === 'unblocked' && (\r\n                      <span\r\n                        className=\"inline-flex items-center justify-center w-6 h-6 rounded-full bg-gradient-to-r from-green-500 to-emerald-500 shadow-lg border-2 border-white\"\r\n                        title=\"Verified\"\r\n                        aria-label=\"Verified\"\r\n                      >\r\n                        <svg className=\"w-3 h-3 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"3\" d=\"M5 13l4 4L19 7\" />\r\n                        </svg>\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                  {/* Specializations below name - small text */}\r\n                  <div className=\"text-xs text-gray-600 font-medium mb-2\">\r\n                    {actualSpecializations.length > 0 ? (\r\n                      <>\r\n                        {actualSpecializations.slice(0, 1).map((type, index) => (\r\n                          <span key={index}>{type}</span>\r\n                        ))}\r\n                        {actualSpecializations.length > 1 && (\r\n                          <span> +{actualSpecializations.length - 1} more</span>\r\n                        )}\r\n                      </>\r\n                    ) : (\r\n                      <span>General Broker</span>\r\n                    )}\r\n                </div>\r\n\r\n                  {/* Firm name and Experience under red box */}\r\n                  <div className=\"flex items-center gap-2 mb-2\">\r\n                    <svg className=\"w-5 h-5 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4\" />\r\n                    </svg>\r\n                    <div className=\"text-xs font-semibold text-gray-800\">{actualFirmName || 'Independent Broker'}</div>\r\n                  </div>\r\n                  <div className=\"text-xs text-gray-600 font-medium ml-7 mb-3\">\r\n                    {`${Math.max(0, parseInt(broker.experience ?? 0))} years experience`}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Address Display */}\r\n              {broker.address && (\r\n                <div className=\"mb-3 p-3 bg-yellow-50 rounded-lg border border-yellow-200 border-l-4 border-yellow-500 ring-1 ring-yellow-100\">\r\n                  <div className=\"flex items-start gap-2\">\r\n                    <svg className=\"w-4 h-4 text-yellow-600 mt-0.5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\r\n                    </svg>\r\n                    <div className=\"text-sm text-gray-700\">{broker.address}</div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {/* Locations and Leads */}\r\n              <div className=\"mb-4\">\r\n                <div className=\"flex flex-wrap gap-2\">\r\n                  {actualLocations.slice(0, 1).map((location, index) => (\r\n                    <span key={index} className=\"px-2.5 py-1 bg-gray-100 text-gray-700 text-[11px] font-medium rounded-full flex items-center gap-1.5 border border-gray-200\">\r\n                      <svg className=\"w-4 h-4 text-gray-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\r\n                    </svg>\r\n                      {location}\r\n                    </span>\r\n                  ))}\r\n                  {actualLocations.length === 0 && (\r\n                    <span className=\"px-2.5 py-1 bg-gray-100 text-gray-700 text-[11px] font-medium rounded-full flex items-center gap-1.5 border border-gray-200\">\r\n                      <svg className=\"w-4 h-4 text-gray-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\r\n                      </svg>\r\n                      {broker.city || 'Location'}\r\n                    </span>\r\n                  )}\r\n                  <span className=\"px-2.5 py-1 bg-gray-100 text-gray-700 text-[11px] font-medium rounded-full flex items-center gap-1.5 border border-gray-200\">\r\n                    <svg className=\"w-4 h-4 text-gray-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M3 12l9-9 9 9M5 10v10a1 1 0 001 1h3v-5a1 1 0 011-1h2a1 1 0 011 1v5h3a1 1 0 001-1V10\" />\r\n                    </svg>\r\n                    {actualLeadsCreated.count || 0} leads\r\n                  </span>\r\n                  </div>\r\n                </div>\r\n\r\n              {/* Top-right icon actions */}\r\n              <div className=\"absolute top-4 right-4 flex items-center gap-2\">\r\n                  <button \r\n                  onClick={(e) => { e.stopPropagation(); const brokerId = broker.userIdRaw || broker.userId || broker._id || broker.id; router.push(`/broker-details/${brokerId}`); }}\r\n                  className=\"w-9 h-9 rounded-full bg-green-900 text-white flex items-center justify-center shadow hover:bg-green-800\"\r\n                  title=\"View Details\"\r\n                  aria-label=\"View Details\"\r\n                  >\r\n                  {/* Eye icon */}\r\n                  <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M2.458 12C3.732 7.943 7.523 5 12 5s8.268 2.943 9.542 7c-1.274 4.057-5.065 7-9.542 7s-8.268-2.943-9.542-7z\" />\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\r\n                    </svg>\r\n                  </button>\r\n                <button\r\n                  onClick={(e) => { e.stopPropagation(); const brokerId = broker.userIdRaw || broker.userId || broker._id || broker.id; router.push(`/broker-details/${brokerId}?chat=1`); }}\r\n                  className=\"w-9 h-9 rounded-full bg-gray-100 text-gray-600 border border-gray-300 flex items-center justify-center shadow hover:bg-gray-200\"\r\n                  title=\"Chat\"\r\n                  aria-label=\"Chat\"\r\n                >\r\n                  {/* Simple chat bubble outline (gray) */}\r\n                  <svg className=\"w-5 h-5 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M7 8h10a2 2 0 012 2v5a2 2 0 01-2 2H11l-3 3v-3H7a2 2 0 01-2-2v-5a2 2 0 012-2z\" />\r\n                    </svg>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n            })}\r\n          </div>\r\n        )}\r\n\r\n        {/* Pagination */}\r\n        {totalItems > 0 && totalPages > 1 && (\r\n          <div className=\"mt-8 flex flex-col sm:flex-row items-center justify-between gap-4\">\r\n            <div className=\"flex items-center gap-2\">\r\n              <span className=\"text-sm text-gray-600\">Items per page:</span>\r\n              <select\r\n                value={itemsPerPage}\r\n                onChange={(e) => {\r\n                  setItemsPerPage(Number(e.target.value));\r\n                  setCurrentPage(1);\r\n                }}\r\n                className=\"border border-gray-300 rounded-md px-2 py-1 text-sm focus:outline-none focus:ring-2 focus:ring-[#0A421E] focus:border-transparent\"\r\n              >\r\n                <option value={6}>6</option>\r\n                <option value={9}>9</option>\r\n                <option value={12}>12</option>\r\n                <option value={15}>15</option>\r\n                <option value={18}>18</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"flex items-center gap-1 sm:gap-2\">\r\n              <button\r\n                onClick={handlePrevious}\r\n                disabled={currentPage === 1}\r\n                className={`px-2 sm:px-3 py-2 text-xs sm:text-sm font-medium rounded-md ${\r\n                  currentPage === 1\r\n                    ? 'bg-gray-100 text-gray-400 cursor-not-allowed'\r\n                    : 'bg-white text-gray-700 border border-gray-300 hover:bg-gray-50'\r\n                }`}\r\n              >\r\n                <span className=\"hidden sm:inline\">Previous</span>\r\n                <span className=\"sm:hidden\">Prev</span>\r\n              </button>\r\n\r\n              <div className=\"flex items-center gap-1 overflow-x-auto\">\r\n                {/* Always show first page */}\r\n                <button\r\n                  onClick={() => handlePageChange(1)}\r\n                  className={`px-2 sm:px-3 py-2 text-xs sm:text-sm font-medium rounded-md ${\r\n                    currentPage === 1\r\n                      ? 'bg-[#0A421E] text-white'\r\n                      : 'bg-white text-gray-700 border border-gray-300 hover:bg-gray-50'\r\n                  }`}\r\n                >\r\n                  1\r\n                </button>\r\n\r\n                {/* Show ellipsis if current page is far from start */}\r\n                {currentPage > 4 && (\r\n                  <span className=\"px-2 py-2 text-sm text-gray-500\">...</span>\r\n                )}\r\n\r\n                {/* Show pages around current page */}\r\n                {Array.from({ length: totalPages }, (_, i) => i + 1)\r\n                  .filter(page => {\r\n                    // Don't show page 1 (already shown above)\r\n                    if (page === 1) return false;\r\n                    // Don't show last page (shown below)\r\n                    if (page === totalPages) return false;\r\n                    \r\n                    // Show pages 2-4 if current page is 1-3\r\n                    if (currentPage <= 3) {\r\n                      return page >= 2 && page <= 4;\r\n                    }\r\n                    // Show pages around current page\r\n                    if (currentPage > 3 && currentPage < totalPages - 2) {\r\n                      return page >= currentPage - 1 && page <= currentPage + 1;\r\n                    }\r\n                    // Show last few pages if current page is near end\r\n                    if (currentPage >= totalPages - 2) {\r\n                      return page >= totalPages - 3 && page < totalPages;\r\n                    }\r\n                    return false;\r\n                  })\r\n                  .map((page) => (\r\n                    <button\r\n                      key={page}\r\n                      onClick={() => handlePageChange(page)}\r\n                      className={`px-2 sm:px-3 py-2 text-xs sm:text-sm font-medium rounded-md ${\r\n                        currentPage === page\r\n                          ? 'bg-[#0A421E] text-white'\r\n                          : 'bg-white text-gray-700 border border-gray-300 hover:bg-gray-50'\r\n                      }`}\r\n                    >\r\n                      {page}\r\n                    </button>\r\n                  ))}\r\n\r\n                {/* Show ellipsis if current page is far from end */}\r\n                {currentPage < totalPages - 3 && (\r\n                  <span className=\"px-2 py-2 text-sm text-gray-500\">...</span>\r\n                )}\r\n\r\n                {/* Always show last page if there's more than 1 page */}\r\n                {totalPages > 1 && (\r\n                  <button\r\n                    onClick={() => handlePageChange(totalPages)}\r\n                    className={`px-2 sm:px-3 py-2 text-xs sm:text-sm font-medium rounded-md ${\r\n                      currentPage === totalPages\r\n                        ? 'bg-[#0A421E] text-white'\r\n                        : 'bg-white text-gray-700 border border-gray-300 hover:bg-gray-50'\r\n                    }`}\r\n                  >\r\n                    {totalPages}\r\n                  </button>\r\n                )}\r\n              </div>\r\n\r\n              <button\r\n                onClick={handleNext}\r\n                disabled={currentPage === totalPages}\r\n                className={`px-2 sm:px-3 py-2 text-xs sm:text-sm font-medium rounded-md ${\r\n                  currentPage === totalPages\r\n                    ? 'bg-gray-100 text-gray-400 cursor-not-allowed'\r\n                    : 'bg-white text-gray-700 border border-gray-300 hover:bg-gray-50'\r\n                }`}\r\n              >\r\n                Next\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <style jsx>{`\r\n        .slider-single {\r\n          background: transparent;\r\n        }\r\n        /* Allow dragging both thumbs on overlapping dual sliders */\r\n        .slider-dual { pointer-events: none; }\r\n        .slider-dual::-webkit-slider-thumb { pointer-events: auto; }\r\n        .slider-dual::-moz-range-thumb { pointer-events: auto; }\r\n        .slider-single::-webkit-slider-thumb {\r\n          appearance: none;\r\n          width: 20px;\r\n          height: 20px;\r\n          border-radius: 50%;\r\n          background: white;\r\n          cursor: pointer;\r\n          border: 2px solid #0A421E;\r\n          box-shadow: 0 2px 4px rgba(0,0,0,0.2);\r\n        }\r\n        .slider-single::-moz-range-thumb {\r\n          width: 20px;\r\n          height: 20px;\r\n          border-radius: 50%;\r\n          background: white;\r\n          cursor: pointer;\r\n          border: 2px solid #0A421E;\r\n          box-shadow: 0 2px 4px rgba(0,0,0,0.2);\r\n        }\r\n        .slider-single::-webkit-slider-track {\r\n          background: transparent;\r\n        }\r\n        .slider-single::-moz-range-track {\r\n          background: transparent;\r\n        }\r\n      `}</style>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BrokersComponent;\r\n"],"names":[],"mappings":"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"}