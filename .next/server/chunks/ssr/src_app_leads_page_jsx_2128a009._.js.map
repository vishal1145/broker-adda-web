{"version":3,"sources":["turbopack:///[project]/src/app/leads/page.jsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect, useCallback, useMemo, useRef } from \"react\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport HeaderFile from \"../components/Header\";\r\nimport Select, { components as RSComponents } from \"react-select\";\r\nimport ProtectedRoute from \"../components/ProtectedRoute\";\r\nimport siteConfig, { SUPPORT_EMAIL, SUPPORT_PHONE } from \"../config/siteConfig\";\r\n\r\n/* ───────────── Small stat card ───────────── */\r\nconst StatCard = ({ label, value, deltaText, trend = \"up\", color = \"sky\" }) => {\r\n  const colorStrip = {\r\n    sky: \"from-sky-500 to-sky-400\",\r\n    amber: \"from-amber-500 to-amber-400\",\r\n    emerald: \"from-emerald-500 to-emerald-400\",\r\n    violet: \"from-violet-500 to-violet-400\",\r\n    indigo: \"from-indigo-500 to-indigo-400\",\r\n  }[color];\r\n\r\n  const trendDown = trend === \"down\";\r\n  const deltaClass = trendDown ? \"text-rose-600\" : \"text-emerald-600\";\r\n\r\n  return (\r\n    <div className=\"relative overflow-hidden bg-white rounded-2xl border border-slate-200 shadow-[0_2px_12px_rgba(2,6,23,0.06)] hover:shadow-[0_6px_18px_rgba(2,6,23,0.08)] transition-shadow\">\r\n      {/* Left color strip */}\r\n      <div\r\n        className={`absolute inset-y-0 left-0 w-1.5 bg-gradient-to-b ${colorStrip}`}\r\n      />\r\n      <div className=\"px-5 py-6\">\r\n        <p className=\"text-xs font-body text-gray-600 font-medium\">{label}</p>\r\n        <p className=\"mt-5 text-3xl leading-none  text-gray-800\">{value}</p>\r\n        {/* <p className={`mt-5 flex items-center gap-1.5 text-[12px] font-medium ${deltaClass}`}>\r\n          {trendDown ? (\r\n            <svg className=\"w-3.5 h-3.5\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M19 12l-7 7-7-7\" />\r\n            </svg>\r\n          ) : (\r\n            <svg className=\"w-3.5 h-3.5\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M5 12l7-7 7 7\" />\r\n            </svg>\r\n          )}\r\n          <span>{deltaText}</span>\r\n        </p> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default function BrokerLeadsPage() {\r\n  /* ───────────── Filters & UI state ───────────── */\r\n  const [showAdvanced, setShowAdvanced] = useState(false);\r\n  const [leadViewMode, setLeadViewMode] = useState(\"my-leads\"); // 'my-leads' or 'transferred'\r\n  const [filters, setFilters] = useState({\r\n    query: \"\",\r\n    status: { value: \"all\", label: \"All Status\" },\r\n    broker: { value: \"all\", label: \"All Brokers\" },\r\n    region: { value: \"all\", label: \"All Regions\" },\r\n    propertyType: { value: \"all\", label: \"All Property Types\" },\r\n    requirement: { value: \"all\", label: \"All Requirements\" },\r\n    startDate: \"\",\r\n    endDate: \"\",\r\n    budgetMax: 500000,\r\n  });\r\n\r\n  /* ───────────── Regions API ───────────── */\r\n  const [regionsList, setRegionsList] = useState([]);\r\n  const [regionsLoading, setRegionsLoading] = useState(false);\r\n  const [regionsError, setRegionsError] = useState(\"\");\r\n  // Nearest regions for Add Lead modal (based on logged-in broker)\r\n  const [nearestRegionsList, setNearestRegionsList] = useState([]);\r\n  const [nearestRegionsLoading, setNearestRegionsLoading] = useState(false);\r\n  const [nearestRegionsError, setNearestRegionsError] = useState(\"\");\r\n  const [applyingFilters, setApplyingFilters] = useState(false);\r\n  const isAdvancedFiltersApplied = useMemo(() => {\r\n    return (\r\n      (filters.status?.value && filters.status.value !== \"all\") ||\r\n      (filters.broker?.value && filters.broker.value !== \"all\") ||\r\n      (filters.region?.value && filters.region.value !== \"all\") ||\r\n      (filters.propertyType?.value && filters.propertyType.value !== \"all\") ||\r\n      (filters.requirement?.value && filters.requirement.value !== \"all\") ||\r\n      !!filters.startDate ||\r\n      !!filters.endDate ||\r\n      (typeof filters.budgetMax === \"number\" && filters.budgetMax !== 500000)\r\n    );\r\n  }, [filters]);\r\n\r\n  // clearAdvancedFilters is defined later, after pagination and loadLeads are created\r\n  let clearAdvancedFilters = () => {};\r\n\r\n  // Auth and API base\r\n  const token =\r\n    typeof window !== \"undefined\"\r\n      ? localStorage.getItem(\"token\") || localStorage.getItem(\"authToken\")\r\n      : null;\r\n  const apiUrl = process.env.NEXT_PUBLIC_API_URL || \"\";\r\n\r\n  // Get current user ID from token\r\n  const getCurrentUserIdFromToken = (jwtToken) => {\r\n    try {\r\n      if (!jwtToken || typeof window === \"undefined\") return \"\";\r\n      const base64Url = jwtToken.split(\".\")[1];\r\n      if (!base64Url) return \"\";\r\n      const base64 = base64Url.replace(/-/g, \"+\").replace(/_/g, \"/\");\r\n      const jsonPayload = decodeURIComponent(\r\n        atob(base64)\r\n          .split(\"\")\r\n          .map((c) => \"%\" + (\"00\" + c.charCodeAt(0).toString(16)).slice(-2))\r\n          .join(\"\")\r\n      );\r\n      const payload = JSON.parse(jsonPayload);\r\n      // no-op\r\n      // Use brokerId if available, otherwise fall back to userId\r\n      return (\r\n        payload.brokerId || payload.userId || payload.id || payload.sub || \"\"\r\n      );\r\n    } catch {\r\n      return \"\";\r\n    }\r\n  };\r\n  const currentUserId = useMemo(\r\n    () => getCurrentUserIdFromToken(token),\r\n    [token]\r\n  );\r\n\r\n  // State to store the actual broker ID (might be different from token userId)\r\n  const [brokerId, setBrokerId] = useState(\"\");\r\n  const [brokerIdLoading, setBrokerIdLoading] = useState(false);\r\n\r\n  // Function to get broker details and extract the correct broker ID\r\n  const getBrokerId = useCallback(async () => {\r\n    if (!currentUserId || !token) {\r\n      // missing auth\r\n      return;\r\n    }\r\n\r\n    // No hardcoded mapping. Always resolve via API only.\r\n\r\n    try {\r\n      setBrokerIdLoading(true);\r\n      // fetch broker details for user\r\n\r\n      // Try the most likely endpoint first\r\n      const res = await fetch(`${apiUrl}/brokers/${currentUserId}`, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n\r\n      // status read\r\n\r\n      if (res.ok) {\r\n        const data = await res.json();\r\n        // raw data\r\n\r\n        // Try different possible data structures\r\n        const brokerData =\r\n          data?.data?.broker || data?.broker || data?.data || data;\r\n        // processed data\r\n\r\n        // Use the broker's _id for filtering leads\r\n        if (brokerData && brokerData._id) {\r\n          setBrokerId(brokerData._id);\r\n          // set broker id\r\n        } else {\r\n          // no id in response\r\n          // Fallback: do not guess. Keep brokerId empty and log for visibility\r\n          // leave brokerId empty\r\n        }\r\n      } else {\r\n        // failed to fetch broker details\r\n        const errorText = await res.text();\r\n        // Do not fallback to userId; keep brokerId empty so queries won't filter wrongly\r\n      }\r\n    } catch (error) {\r\n      // error fetching broker details\r\n      // Do not fallback to userId; keep brokerId empty so queries won't filter wrongly\r\n    } finally {\r\n      setBrokerIdLoading(false);\r\n    }\r\n  }, [currentUserId, token, apiUrl]);\r\n\r\n  // Get broker ID when currentUserId changes\r\n  useEffect(() => {\r\n    if (currentUserId) {\r\n      getBrokerId();\r\n    }\r\n  }, [currentUserId, getBrokerId]);\r\n\r\n  /* ───────────── Metrics API ───────────── */\r\n  const [metrics, setMetrics] = useState({\r\n    totalLeads: 0,\r\n    newLeadsToday: 0,\r\n    convertedLeads: 0,\r\n    avgDealSize: 0,\r\n    transferredToMe: 0,\r\n    transferredByMe: 0,\r\n  });\r\n  const [metricsLoading, setMetricsLoading] = useState(false);\r\n  const [metricsError, setMetricsError] = useState(\"\");\r\n\r\n  const loadMetrics = useCallback(async () => {\r\n    // Only fetch metrics when brokerId is available to ensure broker-scoped numbers\r\n    if (!brokerId) return;\r\n    try {\r\n      setMetricsLoading(true);\r\n      setMetricsError(\"\");\r\n      const metricsUrl = `${apiUrl}/leads/metrics?createdBy=${brokerId}`;\r\n      const res = await fetch(metricsUrl, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          ...(token ? { Authorization: `Bearer ${token}` } : {}),\r\n        },\r\n      });\r\n      if (!res.ok) {\r\n        try {\r\n          const err = await res.json();\r\n          setMetricsError(\r\n            err?.message || err?.error || \"Failed to load metrics\"\r\n          );\r\n        } catch {\r\n          setMetricsError(\"Failed to load metrics\");\r\n        }\r\n        return;\r\n      }\r\n      const data = await res.json();\r\n      const payload = data?.data || data || {};\r\n      setMetrics({\r\n        totalLeads: Number(payload.totalLeads || payload.total || 0),\r\n        newLeadsToday: Number(payload.newLeadsToday || payload.today || 0),\r\n        convertedLeads: Number(\r\n          payload.convertedLeads || payload.converted || 0\r\n        ),\r\n        avgDealSize: Number(\r\n          payload.avgDealSize || payload.averageDealSize || 0\r\n        ),\r\n        transferredToMe: Number(\r\n          payload.transferredToMe || payload.transfersToMe || 0\r\n        ),\r\n        transferredByMe: Number(\r\n          payload.transferredByMe || payload.transfersByMe || 0\r\n        ),\r\n      });\r\n    } catch {\r\n      setMetricsError(\"Error loading metrics\");\r\n    } finally {\r\n      setMetricsLoading(false);\r\n    }\r\n  }, [apiUrl, token, brokerId]);\r\n  // Load metrics once brokerId is available\r\n  useEffect(() => {\r\n    if (brokerId) loadMetrics();\r\n  }, [brokerId, loadMetrics]);\r\n\r\n  /* ───────────── Leads API ───────────── */\r\n  const [leads, setLeads] = useState([]);\r\n  const [leadsLoading, setLeadsLoading] = useState(true);\r\n  const [leadsError, setLeadsError] = useState(\"\");\r\n  const [page, setPage] = useState(1);\r\n  const [limit, setLimit] = useState(10);\r\n  const [total, setTotal] = useState(0);\r\n  const totalPages = Math.max(1, Math.ceil(total / (limit || 10)));\r\n  const [debouncedQuery, setDebouncedQuery] = useState(\"\");\r\n  const [isSearching, setIsSearching] = useState(false);\r\n  const DEBOUNCE_DELAY = 500; // Configurable debounce delay\r\n  const [viewTab, setViewTab] = useState(\"overview\");\r\n  const [noteText, setNoteText] = useState(\"\");\r\n  useEffect(() => {\r\n    // Show searching indicator when user types (with small delay to avoid flickering)\r\n    const showSearchingTimer = setTimeout(() => {\r\n      if (filters.query !== debouncedQuery) {\r\n        setIsSearching(true);\r\n      }\r\n    }, 100);\r\n\r\n    const debounceTimer = setTimeout(() => {\r\n      setDebouncedQuery(filters.query || \"\");\r\n      setIsSearching(false);\r\n    }, DEBOUNCE_DELAY);\r\n\r\n    return () => {\r\n      clearTimeout(showSearchingTimer);\r\n      clearTimeout(debounceTimer);\r\n    };\r\n  }, [filters.query, debouncedQuery]);\r\n\r\n  const buildRequestUrl = useCallback(\r\n    (\r\n      effectiveFilters,\r\n      p = page,\r\n      l = limit,\r\n      q = debouncedQuery,\r\n      viewMode = leadViewMode\r\n    ) => {\r\n      const params = new URLSearchParams();\r\n      params.set(\"page\", String(p));\r\n      params.set(\"limit\", String(l));\r\n\r\n      // Use different endpoint and parameters for transferred leads\r\n      if (viewMode === \"transferred\") {\r\n        if (brokerId) {\r\n          params.set(\"toBroker\", brokerId);\r\n        }\r\n        if (q) params.set(\"search\", q);\r\n        if (\r\n          effectiveFilters.status?.value &&\r\n          effectiveFilters.status.value !== \"all\"\r\n        )\r\n          params.set(\"status\", effectiveFilters.status.value);\r\n        if (\r\n          effectiveFilters.region?.value &&\r\n          effectiveFilters.region.value !== \"all\"\r\n        )\r\n          params.set(\"region\", effectiveFilters.region.value);\r\n        if (\r\n          effectiveFilters.propertyType?.value &&\r\n          effectiveFilters.propertyType.value !== \"all\"\r\n        )\r\n          params.set(\"propertyType\", effectiveFilters.propertyType.value);\r\n        if (\r\n          effectiveFilters.requirement?.value &&\r\n          effectiveFilters.requirement.value !== \"all\"\r\n        )\r\n          params.set(\"requirement\", effectiveFilters.requirement.value);\r\n        if (effectiveFilters.startDate)\r\n          params.set(\"startDate\", effectiveFilters.startDate);\r\n        if (effectiveFilters.endDate)\r\n          params.set(\"endDate\", effectiveFilters.endDate);\r\n        if (\r\n          typeof effectiveFilters.budgetMax === \"number\" &&\r\n          effectiveFilters.budgetMax !== 500000\r\n        )\r\n          params.set(\"budgetMax\", String(effectiveFilters.budgetMax));\r\n        return `${apiUrl}/leads/transferred?${params.toString()}`;\r\n      }\r\n\r\n      // Default behavior for my leads\r\n      if (brokerId) {\r\n        params.set(\"createdBy\", brokerId);\r\n      }\r\n      if (q) params.set(\"search\", q);\r\n      if (\r\n        effectiveFilters.status?.value &&\r\n        effectiveFilters.status.value !== \"all\"\r\n      )\r\n        params.set(\"status\", effectiveFilters.status.value);\r\n      // Only add broker filter if specifically selected (not 'all')\r\n      if (\r\n        effectiveFilters.broker?.value &&\r\n        effectiveFilters.broker.value !== \"all\"\r\n      ) {\r\n        params.set(\"broker\", effectiveFilters.broker.value);\r\n      }\r\n      if (\r\n        effectiveFilters.region?.value &&\r\n        effectiveFilters.region.value !== \"all\"\r\n      )\r\n        params.set(\"regionId\", effectiveFilters.region.value);\r\n      if (\r\n        effectiveFilters.propertyType?.value &&\r\n        effectiveFilters.propertyType.value !== \"all\"\r\n      )\r\n        params.set(\"propertyType\", effectiveFilters.propertyType.value);\r\n      if (\r\n        effectiveFilters.requirement?.value &&\r\n        effectiveFilters.requirement.value !== \"all\"\r\n      )\r\n        params.set(\"requirement\", effectiveFilters.requirement.value);\r\n      if (effectiveFilters.startDate)\r\n        params.set(\"startDate\", effectiveFilters.startDate);\r\n      if (effectiveFilters.endDate)\r\n        params.set(\"endDate\", effectiveFilters.endDate);\r\n      if (\r\n        typeof effectiveFilters.budgetMax === \"number\" &&\r\n        effectiveFilters.budgetMax !== 500000\r\n      )\r\n        params.set(\"budgetMax\", String(effectiveFilters.budgetMax));\r\n      return `${apiUrl}/leads?${params.toString()}`;\r\n    },\r\n    [apiUrl, page, limit, debouncedQuery, brokerId, leadViewMode]\r\n  );\r\n\r\n  const loadLeads = useCallback(\r\n    async (\r\n      overrideFilters = null,\r\n      overridePage = null,\r\n      overrideLimit = null,\r\n      overrideQuery = null,\r\n      overrideViewMode = null\r\n    ) => {\r\n      // Don't load leads if we don't have brokerId yet\r\n      if (!brokerId && !brokerIdLoading) return;\r\n\r\n      try {\r\n        setLeadsLoading(true);\r\n        setLeadsError(\"\");\r\n        const f = overrideFilters ?? filters;\r\n        const p = overridePage ?? page;\r\n        const l = overrideLimit ?? limit;\r\n        const q = overrideQuery ?? debouncedQuery;\r\n        const v = overrideViewMode ?? leadViewMode;\r\n\r\n        const response = await fetch(buildRequestUrl(f, p, l, q, v), {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            ...(token ? { Authorization: `Bearer ${token}` } : {}),\r\n          },\r\n        });\r\n\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          let items = [],\r\n            totalCount = 0;\r\n          if (Array.isArray(data?.data?.items)) {\r\n            items = data.data.items;\r\n            totalCount = data.data.total ?? data.total ?? items.length;\r\n          } else if (Array.isArray(data?.data?.leads)) {\r\n            items = data.data.leads;\r\n            totalCount = data.data.total ?? data.total ?? items.length;\r\n          } else if (Array.isArray(data?.data)) {\r\n            items = data.data;\r\n            totalCount = data.total ?? items.length;\r\n          } else if (Array.isArray(data?.leads)) {\r\n            items = data.leads;\r\n            totalCount = data.total ?? items.length;\r\n          } else if (Array.isArray(data)) {\r\n            items = data;\r\n            totalCount = items.length;\r\n          }\r\n          setLeads(items);\r\n          setTotal(totalCount);\r\n        } else {\r\n          setLeadsError(\"Failed to load leads\");\r\n          setLeads([]);\r\n          setTotal(0);\r\n        }\r\n      } catch {\r\n        setLeadsError(\"Error loading leads\");\r\n        setLeads([]);\r\n        setTotal(0);\r\n      } finally {\r\n        setLeadsLoading(false);\r\n      }\r\n    },\r\n    [\r\n      filters,\r\n      page,\r\n      limit,\r\n      debouncedQuery,\r\n      token,\r\n      buildRequestUrl,\r\n      brokerId,\r\n      brokerIdLoading,\r\n      leadViewMode,\r\n    ]\r\n  );\r\n\r\n  // Now that page/limit/loadLeads exist, define clearAdvancedFilters\r\n  clearAdvancedFilters = () => {\r\n    const reset = {\r\n      ...filters,\r\n      status: { value: \"all\", label: \"All Status\" },\r\n      broker: { value: \"all\", label: \"All Brokers\" },\r\n      region: { value: \"all\", label: \"All Regions\" },\r\n      propertyType: { value: \"all\", label: \"All Property Types\" },\r\n      requirement: { value: \"all\", label: \"All Requirements\" },\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      budgetMax: 500000,\r\n    };\r\n    setFilters(reset);\r\n    setPage(1);\r\n    loadLeads(reset, 1, limit, debouncedQuery);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadLeads();\r\n  }, [page, limit]); // eslint-disable-line\r\n  useEffect(() => {\r\n    page !== 1 ? setPage(1) : loadLeads();\r\n  }, [debouncedQuery]); // eslint-disable-line\r\n  useEffect(() => {\r\n    if (brokerId) loadLeads();\r\n  }, [brokerId]); // Load leads when brokerId is available\r\n  useEffect(() => {\r\n    loadLeads();\r\n  }, [leadViewMode]); // Load leads when view mode changes\r\n\r\n  /* ───────────── Status styles to match screenshot ───────────── */\r\n  const getStatusBadgeClasses = (status) => {\r\n    const s = (status || \"\").toString().toLowerCase();\r\n    if (s === \"new\") return \"bg-sky-100 text-sky-700\";\r\n    if (s === \"contacted\" || s === \"in progress\")\r\n      return \"bg-amber-100 text-amber-700\";\r\n    if (s === \"qualified\" || s === \"closed\")\r\n      return \"bg-emerald-100 text-emerald-700\";\r\n    if (s === \"rejected\") return \"bg-rose-100 text-rose-700\";\r\n    return \"bg-gray-100 text-gray-700\";\r\n  };\r\n  const getStatusAvatarClasses = (status) => \"bg-sky-50 text-sky-700\";\r\n\r\n  const getInitials = (name) => {\r\n    if (!name || typeof name !== \"string\") return \"?\";\r\n    const [a = \"\", b = \"\"] = name.trim().split(/\\s+/);\r\n    return (a[0] || \"\" + b[0] || \"\").toUpperCase();\r\n  };\r\n\r\n  /* ───────────── Regions fetch ───────────── */\r\n  const loadRegions = async () => {\r\n    try {\r\n      setRegionsLoading(true);\r\n      setRegionsError(\"\");\r\n      const res = await fetch(`${apiUrl}/regions`, {\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n      });\r\n      if (!res.ok) throw new Error(\"bad\");\r\n      const data = await res.json();\r\n      let regions = [];\r\n      if (data?.success && Array.isArray(data?.data?.regions))\r\n        regions = data.data.regions;\r\n      else if (Array.isArray(data)) regions = data;\r\n      else if (Array.isArray(data?.data)) regions = data.data;\r\n      else if (Array.isArray(data?.regions)) regions = data.regions;\r\n      else if (data?._id && data?.name) regions = [data];\r\n      setRegionsList(regions);\r\n    } catch {\r\n      setRegionsError(\"Error loading regions\");\r\n      setRegionsList([]);\r\n    } finally {\r\n      setRegionsLoading(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    loadRegions();\r\n  }, []); // eslint-disable-line\r\n\r\n  // Fetch nearest regions for the logged-in broker to suggest in Add Lead modal\r\n  const loadNearestRegions = useCallback(async () => {\r\n    if (!brokerId) return;\r\n    try {\r\n      setNearestRegionsLoading(true);\r\n      setNearestRegionsError(\"\");\r\n      const url = `${apiUrl}/regions/nearest?brokerId=${encodeURIComponent(\r\n        brokerId\r\n      )}&limit=5`;\r\n      const res = await fetch(url, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          ...(token ? { Authorization: `Bearer ${token}` } : {}),\r\n        },\r\n      });\r\n      if (!res.ok) throw new Error(\"bad\");\r\n      const data = await res.json();\r\n      let regions = [];\r\n      if (data?.success && Array.isArray(data?.data?.regions))\r\n        regions = data.data.regions;\r\n      else if (Array.isArray(data)) regions = data;\r\n      else if (Array.isArray(data?.data)) regions = data.data;\r\n      else if (Array.isArray(data?.regions)) regions = data.regions;\r\n      else if (data?._id && data?.name) regions = [data];\r\n      setNearestRegionsList(regions);\r\n    } catch {\r\n      setNearestRegionsError(\"Error loading nearest regions\");\r\n      setNearestRegionsList([]);\r\n    } finally {\r\n      setNearestRegionsLoading(false);\r\n    }\r\n  }, [apiUrl, token, brokerId]);\r\n\r\n  // (moved) Refresh nearest regions when Add Lead opens; placed after showAddLead is defined\r\n\r\n  /* ───────────── Options & Select styles (light blue per mock) ───────────── */\r\n  const statusOptions = [\r\n    { value: \"all\", label: \"All Status\", isAll: true },\r\n    { value: \"New\", label: \"New\" },\r\n    { value: \"Assigned\", label: \"Assigned\" },\r\n    { value: \"In Progress\", label: \"In Progress\" },\r\n    { value: \"Closed\", label: \"Closed\" },\r\n    { value: \"Rejected\", label: \"Rejected\" },\r\n  ];\r\n  const propertyTypeOptions = [\r\n    { value: \"all\", label: \"All Property Types\" },\r\n    { value: \"Residential\", label: \"Residential\" },\r\n    { value: \"Commercial\", label: \"Commercial\" },\r\n    { value: \"Plot\", label: \"Plot\" },\r\n    { value: \"Other\", label: \"Other\" },\r\n  ];\r\n\r\n  const requirementOptions = [\r\n    { value: \"all\", label: \"All Requirements\" },\r\n    { value: \"buy\", label: \"Buy\" },\r\n    { value: \"rent\", label: \"Rent\" },\r\n    { value: \"sell\", label: \"Sell\" },\r\n  ];\r\n  const regionOptions = useMemo(\r\n    () => [\r\n      { value: \"all\", label: \"All Regions\" },\r\n      ...(Array.isArray(regionsList)\r\n        ? regionsList.map((r) => ({\r\n            value: r._id || r.id || r,\r\n            label: r.name || r.region || r,\r\n          }))\r\n        : []),\r\n    ],\r\n    [regionsList]\r\n  );\r\n\r\n  const nearestRegionOptions = useMemo(\r\n    () =>\r\n      Array.isArray(nearestRegionsList)\r\n        ? nearestRegionsList.map((r) => ({\r\n            value: r._id || r.id || r,\r\n            label: r.name || r.region || r,\r\n          }))\r\n        : [],\r\n    [nearestRegionsList]\r\n  );\r\n\r\n  const customSelectStyles = {\r\n    control: (p, s) => ({\r\n      ...p,\r\n      minHeight: \"40px\",\r\n      borderRadius: 10,\r\n      border: \"1px solid #e5e7eb\",\r\n      fontFamily: \"var(--font-body, inherit)\",\r\n      fontSize: 12,\r\n      boxShadow: s.isFocused ? \"0 0 0 4px rgba(59,130,246,.1)\" : \"0 0 1px #171a1f12, 0 0 2px #171a1f1F\",\r\n      borderColor: s.isFocused ? \"#3b82f6\" : \"#e5e7eb\",\r\n      background: \"white\",\r\n      \":hover\": { borderColor: s.isFocused ? \"#3b82f6\" : \"#d1d5db\" },\r\n    }),\r\n    valueContainer: (p) => ({\r\n      ...p,\r\n      padding: \"2px 10px\",\r\n      fontFamily: \"var(--font-body, inherit)\",\r\n      fontSize: 12,\r\n    }),\r\n    indicatorSeparator: () => ({ display: \"none\" }),\r\n    menuPortal: (p) => ({ ...p, zIndex: 99999 }),\r\n    option: (p, s) => ({\r\n      ...p,\r\n      backgroundColor: s.isSelected\r\n        ? \"#3b82f6\"\r\n        : s.isFocused\r\n        ? \"#f1f5f9\"\r\n        : \"transparent\",\r\n      color: s.isSelected ? \"white\" : s.isFocused ? \"#111827\" : \"#4b5563\",\r\n      fontSize: 14,\r\n      fontFamily: \"var(--font-body, inherit)\",\r\n      borderRadius: 6,\r\n      margin: \"2px 6px\",\r\n      padding: \"8px 12px\",\r\n    }),\r\n    singleValue: (p) => ({\r\n      ...p,\r\n      color: \"#6b7280\",\r\n      fontWeight: 400,\r\n      fontFamily: \"var(--font-body, inherit)\",\r\n      fontSize: 12,\r\n    }),\r\n    input: (p) => ({\r\n      ...p,\r\n      color: \"#6b7280\",\r\n      fontWeight: 400,\r\n      fontFamily: \"var(--font-body, inherit)\",\r\n      fontSize: 12,\r\n    }),\r\n    placeholder: (p) => ({\r\n      ...p,\r\n      color: \"#6b7280\",\r\n      fontWeight: 400,\r\n      fontFamily: \"var(--font-body, inherit)\",\r\n      fontSize: 12,\r\n    }),\r\n    multiValueLabel: (p) => ({\r\n      ...p,\r\n      color: \"#6b7280\",\r\n      fontWeight: 400,\r\n      fontFamily: \"var(--font-body, inherit)\",\r\n      fontSize: 12,\r\n    }),\r\n    menu: (p) => ({\r\n      ...p,\r\n      zIndex: 9999,\r\n      overflow: \"hidden\",\r\n      border: \"1px solid #e5e7eb\",\r\n      borderRadius: 10,\r\n      fontFamily: \"var(--font-body, inherit)\",\r\n      fontSize: 12,\r\n    }),\r\n    menuList: (p) => ({\r\n      ...p,\r\n      maxHeight: 320,\r\n      overflowY: \"auto\",\r\n      overflowX: \"hidden\",\r\n      paddingRight: 0,\r\n      fontFamily: \"var(--font-body, inherit)\",\r\n      fontSize: 12,\r\n    }),\r\n  };\r\n\r\n  // Light avatar color helper\r\n  const getAvatarColor = (seed) => {\r\n    // Solid light colors with dark text for high readability\r\n    const palette = [\r\n      { bg: \"bg-sky-100\", text: \"text-sky-800\" },\r\n      { bg: \"bg-emerald-100\", text: \"text-emerald-800\" },\r\n      { bg: \"bg-violet-100\", text: \"text-violet-800\" },\r\n    ];\r\n    const s = String(seed || \"\");\r\n    let hash = 0;\r\n    for (let i = 0; i < s.length; i++) {\r\n      hash = (hash * 31 + s.charCodeAt(i)) >>> 0;\r\n    }\r\n    return palette[hash % palette.length];\r\n  };\r\n\r\n  // No gradient needed now; avatars use solid light backgrounds\r\n\r\n  // Region helpers (support new and old API shapes)\r\n  const regionIdToName = useMemo(() => {\r\n    const map = new Map();\r\n    (Array.isArray(regionsList) ? regionsList : []).forEach((reg) => {\r\n      const id = reg?._id || reg?.id;\r\n      const name = reg?.name || reg?.region || reg?.city || \"\";\r\n      if (id && name) map.set(String(id), String(name));\r\n    });\r\n    return map;\r\n  }, [regionsList]);\r\n\r\n  const getRegionName = (r) => {\r\n    if (!r) return \"\";\r\n    if (typeof r === \"string\") return regionIdToName.get(r) || r;\r\n    if (typeof r === \"object\") return r.name || r.region || r.city || \"\";\r\n    return \"\";\r\n  };\r\n  const getPrimarySecondaryRegionText = (row) => {\r\n    const primary = row?.primaryRegion || row?.region;\r\n    const secondary = row?.secondaryRegion;\r\n    const p = getRegionName(primary);\r\n    const s = getRegionName(secondary);\r\n    return s ? `${p} • ${s}` : p || \"—\";\r\n  };\r\n\r\n  const getRegionNames = (row) => {\r\n    const primary = getRegionName(row?.primaryRegion || row?.region);\r\n    const secondary = getRegionName(row?.secondaryRegion);\r\n    return { primary, secondary };\r\n  };\r\n\r\n  /* ───────────── Add Lead modal ───────────── */\r\n  const [showAddLead, setShowAddLead] = useState(false);\r\n  const [addLeadLoading, setAddLeadLoading] = useState(false);\r\n  const [newLead, setNewLead] = useState({\r\n    customerName: \"\",\r\n    customerPhone: \"\",\r\n    customerEmail: \"\",\r\n    requirement: { value: \"all\", label: \"All Requirements\" },\r\n    propertyType: { value: \"all\", label: \"All propertyType\" },\r\n    budget: \"\",\r\n    primaryRegion: null,\r\n    secondaryRegion: null,\r\n    notes: \"\",\r\n    files: null,\r\n  });\r\n  const [validationErrors, setValidationErrors] = useState({});\r\n\r\n  // Refresh nearest regions when Add Lead opens; ensure this is declared after showAddLead\r\n  useEffect(() => {\r\n    if (showAddLead && brokerId) {\r\n      loadNearestRegions();\r\n    }\r\n  }, [showAddLead, brokerId, loadNearestRegions]);\r\n\r\n  // Validation functions\r\n  const validatePhone = (phone) => {\r\n    const phoneRegex = /^\\d{10}$/;\r\n    return phoneRegex.test(phone.replace(/\\D/g, \"\"));\r\n  };\r\n\r\n  const validateEmail = (email) => {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailRegex.test(email);\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const errors = {};\r\n\r\n    if (!newLead.customerName.trim()) {\r\n      errors.customerName = \"Customer name is required\";\r\n    }\r\n\r\n    if (!newLead.customerPhone.trim()) {\r\n      errors.customerPhone = \"Phone number is required\";\r\n    } else if (!validatePhone(newLead.customerPhone)) {\r\n      errors.customerPhone = \"Phone number must be exactly 10 digits\";\r\n    }\r\n\r\n    if (!newLead.customerEmail.trim()) {\r\n      errors.customerEmail = \"Email is required\";\r\n    } else if (!validateEmail(newLead.customerEmail)) {\r\n      errors.customerEmail = \"Please enter a valid email address\";\r\n    }\r\n\r\n    setValidationErrors(errors);\r\n    return Object.keys(errors).length === 0;\r\n  };\r\n\r\n  const handleNewLeadChange = (e) => {\r\n    const { name, value, files } = e.target;\r\n\r\n    // Special handling for phone number - only allow digits and limit to 10\r\n    if (name === \"customerPhone\") {\r\n      const digitsOnly = value.replace(/\\D/g, \"\");\r\n      const limitedValue = digitsOnly.slice(0, 10);\r\n      setNewLead((p) => ({ ...p, [name]: limitedValue }));\r\n\r\n      // Real-time validation for phone - only show error if user tries to submit without 10 digits\r\n      const errors = { ...validationErrors };\r\n      if (limitedValue.length > 0 && limitedValue.length < 10) {\r\n        errors.customerPhone = `Phone number must be 10 digits`;\r\n      } else {\r\n        delete errors.customerPhone;\r\n      }\r\n      setValidationErrors(errors);\r\n      return;\r\n    }\r\n\r\n    // Special handling for email - real-time validation\r\n    if (name === \"customerEmail\") {\r\n      setNewLead((p) => ({ ...p, [name]: value }));\r\n\r\n      // Real-time validation for email - only show error if user tries to submit with invalid email\r\n      const errors = { ...validationErrors };\r\n      if (value.length > 0 && !validateEmail(value)) {\r\n        errors.customerEmail = \"Please enter a valid email address\";\r\n      } else {\r\n        delete errors.customerEmail;\r\n      }\r\n      setValidationErrors(errors);\r\n      return;\r\n    }\r\n\r\n    // For other fields\r\n    setNewLead((p) => ({ ...p, [name]: files ? files : value }));\r\n\r\n    // Clear validation error when user starts typing\r\n    if (validationErrors[name]) {\r\n      setValidationErrors((prev) => ({ ...prev, [name]: \"\" }));\r\n    }\r\n  };\r\n\r\n  const modalSelectStyles = {\r\n    ...customSelectStyles,\r\n    menuPortal: (base) => ({ ...base, zIndex: 999999 }), // above modal/overlay\r\n  };\r\n  const handleAddLeadSubmit = async () => {\r\n    // Validate form before submission\r\n    if (!validateForm()) {\r\n      toast.error(\"Please fix the validation errors before submitting\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setAddLeadLoading(true);\r\n      const req =\r\n        typeof newLead.requirement === \"object\"\r\n          ? newLead.requirement.label || newLead.requirement.value\r\n          : newLead.requirement;\r\n      const ptype =\r\n        typeof newLead.propertyType === \"object\"\r\n          ? newLead.propertyType.label || newLead.propertyType.value\r\n          : newLead.propertyType;\r\n      const primaryRegionId =\r\n        newLead.primaryRegion && typeof newLead.primaryRegion === \"object\"\r\n          ? newLead.primaryRegion.value || newLead.primaryRegion._id\r\n          : newLead.primaryRegion;\r\n      const secondaryRegionId =\r\n        newLead.secondaryRegion && typeof newLead.secondaryRegion === \"object\"\r\n          ? newLead.secondaryRegion.value || newLead.secondaryRegion._id\r\n          : newLead.secondaryRegion;\r\n      const payload = {\r\n        customerName: newLead.customerName || \"\",\r\n        customerPhone: newLead.customerPhone || \"\",\r\n        customerEmail: newLead.customerEmail || \"\",\r\n        requirement: req || \"\",\r\n        propertyType: ptype || \"\",\r\n        budget:\r\n          newLead.budget !== \"\" && newLead.budget !== null\r\n            ? parseFloat(newLead.budget)\r\n            : 0,\r\n        // API requires primaryRegionId (required) and secondaryRegionId (optional)\r\n        primaryRegionId:\r\n          primaryRegionId && primaryRegionId !== \"select region\"\r\n            ? primaryRegionId\r\n            : \"\",\r\n        createdBy: brokerId, // Explicitly set the createdBy field\r\n      };\r\n      if (secondaryRegionId && secondaryRegionId !== \"select region\") {\r\n        payload.secondaryRegionId = secondaryRegionId;\r\n      }\r\n\r\n      // creating lead payload\r\n\r\n      const res = await fetch(`${apiUrl}/leads`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          ...(token ? { Authorization: `Bearer ${token}` } : {}),\r\n        },\r\n        body: JSON.stringify(payload),\r\n      });\r\n      if (!res.ok) {\r\n        try {\r\n          const err = await res.json();\r\n          const msg = err?.message || err?.error || \"Failed to create lead\";\r\n          toast.error(msg);\r\n        } catch {\r\n          toast.error(\"Failed to create lead\");\r\n        }\r\n        return;\r\n      }\r\n      // Read created lead from API to use its id for transfer\r\n      let createdLeadResp = null;\r\n      try {\r\n        createdLeadResp = await res.json();\r\n      } catch {}\r\n      const createdLead =\r\n        (createdLeadResp &&\r\n          (createdLeadResp.lead ||\r\n            createdLeadResp.data ||\r\n            createdLeadResp.newLead)) ||\r\n        createdLeadResp ||\r\n        null;\r\n\r\n      toast.success(\"Lead created successfully\");\r\n      await loadLeads();\r\n      // Prefill selectedLead with the newly created lead if available; else fetch latest\r\n      let leadForTransfer =\r\n        createdLead && (createdLead._id || createdLead.id)\r\n          ? createdLead\r\n          : await fetchLatestLead();\r\n      if (leadForTransfer) setSelectedLead(leadForTransfer);\r\n      // Open transfer modal immediately for the newly created lead\r\n      setShowTransfer(true);\r\n      setTransferForm({ brokerIds: [], notes: \"\", selectAllFiltered: false });\r\n      if (!brokersList || brokersList.length === 0) {\r\n        loadBrokers();\r\n      }\r\n      setShowAddLead(false);\r\n      setNewLead({\r\n        customerName: \"\",\r\n        customerPhone: \"\",\r\n        customerEmail: \"\",\r\n        requirement: \"select requirement\",\r\n        propertyType: \"select propertyType\",\r\n        budget: \"\",\r\n        region: \"select region\",\r\n        notes: \"\",\r\n        files: null,\r\n      });\r\n      setValidationErrors({});\r\n    } catch {\r\n      toast.error(\"Error creating lead\");\r\n    } finally {\r\n      setAddLeadLoading(false);\r\n    }\r\n  };\r\n\r\n  /* ───────────── Transfer modal ───────────── */\r\n  const [showTransfer, setShowTransfer] = useState(false);\r\n  const [transferForm, setTransferForm] = useState({\r\n    brokerIds: [],\r\n    notes: \"\",\r\n    selectAllFiltered: false,\r\n  });\r\n  const [transferFilter, setTransferFilter] = useState(\"\");\r\n  const transferSelectRef = useRef(null);\r\n  const [transferMode, setTransferMode] = useState(\"all\"); // 'all' | 'region' | 'select'\r\n  const [transferRegion, setTransferRegion] = useState(null);\r\n\r\n  // Custom react-select MenuList with a Select All checkbox\r\n  const BrokerMenuList = (props) => {\r\n    const { children } = props;\r\n    const selectAllChecked = !!transferForm.selectAllFiltered;\r\n    // Compute visible options from current props (supports single child and groups)\r\n    const rawChildren = props?.children;\r\n    const toArray = (c) => (Array.isArray(c) ? c : c ? [c] : []);\r\n    const options = toArray(rawChildren)\r\n      .flatMap((child) => {\r\n        const direct = child?.props?.data?.value;\r\n        if (direct) return [direct];\r\n        const grouped = toArray(child?.props?.children)\r\n          .map((gc) => gc?.props?.data?.value)\r\n          .filter(Boolean);\r\n        return grouped;\r\n      })\r\n      .filter(Boolean);\r\n    return (\r\n      <div>\r\n        <div className=\"flex items-center justify-between px-3 py-2 border-b border-gray-100 bg-gray-50\">\r\n          <span className=\"text-xs text-slate-600\">Filtered brokers</span>\r\n          <label className=\"flex items-center gap-2 text-xs text-slate-600 cursor-pointer select-none\">\r\n            <input\r\n              type=\"checkbox\"\r\n              className=\"rounded border-gray-300 text-emerald-600 focus:ring-emerald-500 cursor-pointer\"\r\n              checked={selectAllChecked}\r\n              onChange={(e) => {\r\n                const checked = e.target.checked;\r\n                setTransferForm((prev) => ({\r\n                  ...prev,\r\n                  selectAllFiltered: checked,\r\n                  brokerIds: checked\r\n                    ? Array.from(\r\n                        new Set([...(prev.brokerIds || []), ...options])\r\n                      )\r\n                    : (prev.brokerIds || []).filter(\r\n                        (id) => !options.includes(id)\r\n                      ),\r\n                }));\r\n                // keep the menu open and focus the input again\r\n                try {\r\n                  const input = document.querySelector(\r\n                    '[id^=\"react-select\"][id$=\"-input\"]'\r\n                  );\r\n                  input?.focus();\r\n                } catch {}\r\n                // Auto-uncheck after applying so user can use it again easily\r\n                if (checked) {\r\n                  setTimeout(\r\n                    () =>\r\n                      setTransferForm((prev) => ({\r\n                        ...prev,\r\n                        selectAllFiltered: false,\r\n                      })),\r\n                    0\r\n                  );\r\n                }\r\n              }}\r\n            />\r\n            Select all\r\n          </label>\r\n        </div>\r\n        <RSComponents.MenuList {...props}>{children}</RSComponents.MenuList>\r\n      </div>\r\n    );\r\n  };\r\n  const [transferLoading, setTransferLoading] = useState(false);\r\n  const [brokersList, setBrokersList] = useState([]);\r\n  const [brokersLoading, setBrokersLoading] = useState(false);\r\n  const [brokersError, setBrokersError] = useState(\"\");\r\n  // Helper: fetch the most recent lead for this broker\r\n  const fetchLatestLead = useCallback(async () => {\r\n    try {\r\n      const params = new URLSearchParams();\r\n      if (brokerId) params.set(\"createdBy\", brokerId);\r\n      // Fetch a few and sort client-side (API does not allow \"sort\")\r\n      params.set(\"limit\", \"5\");\r\n      const url = `${apiUrl}/leads?${params.toString()}`;\r\n      const res = await fetch(url, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          ...(token ? { Authorization: `Bearer ${token}` } : {}),\r\n        },\r\n      });\r\n      if (!res.ok) return null;\r\n      const data = await res.json();\r\n      const items = Array.isArray(data?.data?.items)\r\n        ? data.data.items\r\n        : Array.isArray(data?.data?.leads)\r\n        ? data.data.leads\r\n        : Array.isArray(data?.data)\r\n        ? data.data\r\n        : Array.isArray(data?.leads)\r\n        ? data.leads\r\n        : Array.isArray(data)\r\n        ? data\r\n        : [];\r\n      if (!items || items.length === 0) return null;\r\n      const withDate = items\r\n        .map((it) => ({\r\n          item: it,\r\n          ts: it?.createdAt\r\n            ? Date.parse(it.createdAt)\r\n            : it?._id\r\n            ? Date.parse(it._id?.toString().substring(0, 8))\r\n            : 0,\r\n        }))\r\n        .sort((a, b) => (b.ts || 0) - (a.ts || 0));\r\n      return withDate[0]?.item || items[0] || null;\r\n    } catch {\r\n      return null;\r\n    }\r\n  }, [apiUrl, token, brokerId]);\r\n\r\n  const loadBrokers = async () => {\r\n    try {\r\n      setBrokersLoading(true);\r\n      setBrokersError(\"\");\r\n      const base = apiUrl;\r\n      const res = await fetch(`${base}/brokers`, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          ...(token ? { Authorization: `Bearer ${token}` } : {}),\r\n        },\r\n      });\r\n      if (!res.ok) throw new Error(\"bad\");\r\n      const data = await res.json();\r\n      let items = [];\r\n      if (Array.isArray(data?.data?.brokers)) items = data.data.brokers;\r\n      else if (Array.isArray(data?.data)) items = data.data;\r\n      else if (Array.isArray(data?.brokers)) items = data.brokers;\r\n      else if (Array.isArray(data)) items = data;\r\n      setBrokersList(items);\r\n    } catch {\r\n      setBrokersError(\"Failed to load brokers\");\r\n      setBrokersList([]);\r\n    } finally {\r\n      setBrokersLoading(false);\r\n    }\r\n  };\r\n\r\n  // Delete lead\r\n  const handleDeleteLead = async (lead) => {\r\n    // Check if lead has been transferred\r\n    const transferredTo =\r\n      lead?.transferredTo || lead?.transferredBrokers || lead?.transfers || [];\r\n    if (Array.isArray(transferredTo) && transferredTo.length > 0) {\r\n      toast.error(\r\n        \"Cannot delete lead that has been transferred to other brokers\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const leadId = lead?._id || lead?.id;\r\n      if (!leadId) {\r\n        toast.error(\"Invalid lead id\");\r\n        return;\r\n      }\r\n      const res = await fetch(`${apiUrl}/leads/${leadId}`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          ...(token ? { Authorization: `Bearer ${token}` } : {}),\r\n        },\r\n      });\r\n      if (!res.ok) {\r\n        try {\r\n          const err = await res.json();\r\n          const msg = err?.message || err?.error || \"Failed to delete lead\";\r\n          toast.error(msg);\r\n        } catch {\r\n          toast.error(\"Failed to delete lead\");\r\n        }\r\n        return;\r\n      }\r\n      toast.success(\"Lead deleted\");\r\n      await loadLeads();\r\n    } catch (e) {\r\n      toast.error(\"Error deleting lead\");\r\n    }\r\n  };\r\n\r\n  const openTransferForLead = (lead) => {\r\n    setSelectedLead(lead);\r\n    setTransferForm({ brokerIds: [], notes: \"\" });\r\n    setTransferMode(\"all\");\r\n    setTransferRegion(null);\r\n    setShowTransfer(true);\r\n    if (!brokersList || brokersList.length === 0) {\r\n      loadBrokers();\r\n    }\r\n  };\r\n\r\n  const brokerMatchesRegion = (b, regionId) => {\r\n    if (!b || !regionId) return false;\r\n    // b.region can be array of objects, single object, or string id\r\n    if (Array.isArray(b.region)) {\r\n      return b.region.some(\r\n        (r) =>\r\n          r &&\r\n          (r._id || r.id || r) &&\r\n          String(r._id || r.id || r) === String(regionId)\r\n      );\r\n    }\r\n    if (b.region && typeof b.region === \"object\") {\r\n      const id = b.region._id || b.region.id;\r\n      return id ? String(id) === String(regionId) : false;\r\n    }\r\n    if (typeof b.region === \"string\") {\r\n      return String(b.region) === String(regionId);\r\n    }\r\n    // some backends use primaryRegion\r\n    if (b.primaryRegion) {\r\n      const id =\r\n        typeof b.primaryRegion === \"object\"\r\n          ? b.primaryRegion._id || b.primaryRegion.id\r\n          : b.primaryRegion;\r\n      return id ? String(id) === String(regionId) : false;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const submitTransfer = async () => {\r\n    if (!selectedLead) {\r\n      toast.error(\"No lead selected\");\r\n      return;\r\n    }\r\n    let leadId = selectedLead._id || selectedLead.id;\r\n    if (!leadId) {\r\n      const latest = await fetchLatestLead();\r\n      if (latest && (latest._id || latest.id)) {\r\n        leadId = latest._id || latest.id;\r\n        setSelectedLead((prev) => ({ ...(latest || prev) }));\r\n      }\r\n    }\r\n    let toBrokers = (transferForm.brokerIds || []).filter((id) => id !== \"all\");\r\n    if (!leadId) {\r\n      toast.error(\"Invalid lead id\");\r\n      return;\r\n    }\r\n    if (transferMode === \"all\") {\r\n      toBrokers = (brokersList || [])\r\n        .filter((b) => (b._id || b.id) && (b._id || b.id) !== currentUserId)\r\n        .map((b) => b._id || b.id);\r\n    }\r\n    if (transferMode === \"region\") {\r\n      if (!(transferRegion && transferRegion.value)) {\r\n        toast.error(\"Select a region to share with\");\r\n        return;\r\n      }\r\n      const regionId = transferRegion.value;\r\n      toBrokers = (brokersList || [])\r\n        .filter(\r\n          (b) =>\r\n            (b._id || b.id) &&\r\n            (b._id || b.id) !== currentUserId &&\r\n            brokerMatchesRegion(b, regionId)\r\n        )\r\n        .map((b) => b._id || b.id);\r\n      if (!toBrokers.length) {\r\n        toast.error(\"No brokers found for the selected region\");\r\n        return;\r\n      }\r\n    }\r\n    if (transferMode === \"select\" && !toBrokers.length) {\r\n      toast.error(\"Select at least one broker\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setTransferLoading(true);\r\n      const res = await fetch(`${apiUrl}/leads/${leadId}/transfer-and-notes`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          ...(token ? { Authorization: `Bearer ${token}` } : {}),\r\n        },\r\n        body: JSON.stringify({ toBrokers, notes: transferForm.notes || \"\" }),\r\n      });\r\n      if (!res.ok) {\r\n        toast.error(\"Failed to share lead\");\r\n        return;\r\n      }\r\n      toast.success(\"Share request sent\");\r\n      setShowTransfer(false);\r\n      setTransferForm({ brokerIds: [], notes: \"\" });\r\n    } catch {\r\n      toast.error(\"Error sending transfer request\");\r\n    } finally {\r\n      setTransferLoading(false);\r\n    }\r\n  };\r\n\r\n  /* ───────────── View Drawer ───────────── */\r\n  const [showView, setShowView] = useState(false);\r\n  const [selectedLead, setSelectedLead] = useState(null);\r\n  const [viewEditMode, setViewEditMode] = useState(false);\r\n  const [viewClosing, setViewClosing] = useState(false);\r\n  const [statusEditMode, setStatusEditMode] = useState(false);\r\n  const [statusSaving, setStatusSaving] = useState(false);\r\n  const [viewForm, setViewForm] = useState({\r\n    name: \"\",\r\n    contact: \"\",\r\n    email: \"\",\r\n    budget: \"\",\r\n    requirement: \"\",\r\n    propertyType: \"\",\r\n    primaryRegion: null,\r\n    secondaryRegion: null,\r\n    status: \"\",\r\n  });\r\n  const [viewSaving, setViewSaving] = useState(false);\r\n  const [pendingDeleteTransferId, setPendingDeleteTransferId] = useState(null);\r\n\r\n  // Ensure nearest regions are loaded when the View Drawer opens as well\r\n  useEffect(() => {\r\n    if (showView && brokerId) {\r\n      loadNearestRegions();\r\n    }\r\n  }, [showView, brokerId, loadNearestRegions]);\r\n\r\n  // Delete a specific transfer (to-broker) for the selected lead\r\n  const deleteTransfer = async (toBrokerId) => {\r\n    try {\r\n      if (!selectedLead || !toBrokerId) return;\r\n      const leadId = selectedLead._id || selectedLead.id;\r\n      const res = await fetch(\r\n        `${apiUrl}/leads/${encodeURIComponent(\r\n          leadId\r\n        )}/transfers/${encodeURIComponent(toBrokerId)}`,\r\n        {\r\n          method: \"DELETE\",\r\n          headers: {\r\n            ...(token ? { Authorization: `Bearer ${token}` } : {}),\r\n            Accept: \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      if (!res.ok) {\r\n        try {\r\n          const err = await res.json();\r\n          toast.error(\r\n            err?.message || err?.error || \"Failed to delete transfer\"\r\n          );\r\n        } catch {\r\n          toast.error(\"Failed to delete transfer\");\r\n        }\r\n        return;\r\n      }\r\n      toast.success(\"Transfer removed\");\r\n      // Refresh selectedLead transfers: reload lead or mutate locally\r\n      // Simple approach: reload the leads list and re-open view drawer\r\n      await loadLeads();\r\n      // Also optimistically remove from selectedLead in memory\r\n      setSelectedLead((prev) => {\r\n        if (!prev) return prev;\r\n        const toId = toBrokerId;\r\n        const filtered = Array.isArray(prev.transfers)\r\n          ? prev.transfers.filter((tr) => {\r\n              const id =\r\n                tr && typeof tr.toBroker === \"object\"\r\n                  ? tr.toBroker?._id || tr.toBroker?.id\r\n                  : tr?.toBroker;\r\n              return String(id) !== String(toId);\r\n            })\r\n          : [];\r\n        return { ...prev, transfers: filtered };\r\n      });\r\n      setPendingDeleteTransferId(null);\r\n    } catch {\r\n      toast.error(\"Error deleting transfer\");\r\n    }\r\n  };\r\n  const saveViewEdits = async () => {\r\n    if (!selectedLead) return;\r\n    try {\r\n      setViewSaving(true);\r\n      const leadId = selectedLead._id || selectedLead.id;\r\n      const payload = {\r\n        customerName:\r\n          viewForm.name !== undefined\r\n            ? viewForm.name\r\n            : selectedLead.customerName || selectedLead.name || \"\",\r\n        customerPhone:\r\n          viewForm.contact !== undefined\r\n            ? viewForm.contact\r\n            : selectedLead.customerPhone || \"\",\r\n        customerEmail:\r\n          viewForm.email !== undefined\r\n            ? viewForm.email\r\n            : selectedLead.customerEmail || \"\",\r\n        requirement:\r\n          viewForm.requirement !== undefined\r\n            ? viewForm.requirement\r\n            : selectedLead.requirement || \"\",\r\n        propertyType:\r\n          viewForm.propertyType !== undefined\r\n            ? viewForm.propertyType\r\n            : selectedLead.propertyType || \"\",\r\n        budget:\r\n          viewForm.budget !== \"\" && viewForm.budget !== null\r\n            ? Number(viewForm.budget)\r\n            : typeof selectedLead.budget === \"number\"\r\n            ? selectedLead.budget\r\n            : 0,\r\n        status: viewForm.status\r\n          ? viewForm.status\r\n          : selectedLead.status || \"New\",\r\n      };\r\n      if (\r\n        viewForm.primaryRegion &&\r\n        viewForm.primaryRegion.value &&\r\n        viewForm.primaryRegion.value !== \"all\"\r\n      ) {\r\n        payload.primaryRegionId = viewForm.primaryRegion.value;\r\n      }\r\n      if (\r\n        viewForm.secondaryRegion &&\r\n        viewForm.secondaryRegion.value &&\r\n        viewForm.secondaryRegion.value !== \"all\"\r\n      ) {\r\n        payload.secondaryRegionId = viewForm.secondaryRegion.value;\r\n      }\r\n\r\n      const res = await fetch(`${apiUrl}/leads/${leadId}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          ...(token ? { Authorization: `Bearer ${token}` } : {}),\r\n        },\r\n        body: JSON.stringify(payload),\r\n      });\r\n      if (!res.ok) {\r\n        try {\r\n          const err = await res.json();\r\n          const msg = err?.message || err?.error || \"Failed to update lead\";\r\n          toast.error(msg);\r\n        } catch {\r\n          toast.error(\"Failed to update lead\");\r\n        }\r\n        return;\r\n      }\r\n      const data = await res.json();\r\n      const updated = data?.data || data;\r\n\r\n      setSelectedLead((prev) => ({\r\n        ...prev,\r\n        ...updated,\r\n        name:\r\n          updated.name || updated.customerName || viewForm.name || prev?.name,\r\n        customerName:\r\n          updated.customerName || viewForm.name || prev?.customerName,\r\n        contact:\r\n          updated.contact ||\r\n          updated.customerPhone ||\r\n          viewForm.contact ||\r\n          prev?.contact,\r\n        customerPhone:\r\n          updated.customerPhone || viewForm.contact || prev?.customerPhone,\r\n        customerEmail:\r\n          updated.customerEmail || viewForm.email || prev?.customerEmail,\r\n        requirement:\r\n          updated.requirement || viewForm.requirement || prev?.requirement,\r\n        propertyType:\r\n          updated.propertyType || viewForm.propertyType || prev?.propertyType,\r\n        budget:\r\n          typeof updated.budget === \"number\"\r\n            ? updated.budget\r\n            : viewForm.budget !== \"\"\r\n            ? Number(viewForm.budget)\r\n            : prev?.budget,\r\n        primaryRegion:\r\n          updated.primaryRegion ||\r\n          (viewForm.primaryRegion\r\n            ? {\r\n                name: viewForm.primaryRegion.label,\r\n                _id: viewForm.primaryRegion.value,\r\n              }\r\n            : prev?.primaryRegion || prev?.region),\r\n        secondaryRegion:\r\n          updated.secondaryRegion ||\r\n          (viewForm.secondaryRegion\r\n            ? {\r\n                name: viewForm.secondaryRegion.label,\r\n                _id: viewForm.secondaryRegion.value,\r\n              }\r\n            : prev?.secondaryRegion),\r\n      }));\r\n\r\n      toast.success(\"Lead updated\");\r\n      setViewEditMode(false);\r\n      await loadLeads();\r\n    } catch (e) {\r\n      toast.error(\"Error updating lead\");\r\n    } finally {\r\n      setViewSaving(false);\r\n    }\r\n  };\r\n\r\n  const saveStatusUpdate = async (newStatus) => {\r\n    if (!selectedLead) return;\r\n    try {\r\n      setStatusSaving(true);\r\n      const leadId = selectedLead._id || selectedLead.id;\r\n      const payload = {\r\n        status: newStatus,\r\n      };\r\n\r\n      const res = await fetch(`${apiUrl}/leads/${leadId}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          ...(token ? { Authorization: `Bearer ${token}` } : {}),\r\n        },\r\n        body: JSON.stringify(payload),\r\n      });\r\n      if (!res.ok) {\r\n        try {\r\n          const err = await res.json();\r\n          const msg = err?.message || err?.error || \"Failed to update status\";\r\n          toast.error(msg);\r\n        } catch {\r\n          toast.error(\"Failed to update status\");\r\n        }\r\n        return;\r\n      }\r\n      const data = await res.json();\r\n      const updated = data?.data || data;\r\n\r\n      setSelectedLead((prev) => ({\r\n        ...prev,\r\n        status: updated.status || newStatus,\r\n      }));\r\n\r\n      toast.success(\"Status updated successfully\");\r\n      setStatusEditMode(false);\r\n      await loadLeads();\r\n    } catch (e) {\r\n      toast.error(\"Error updating status\");\r\n    } finally {\r\n      setStatusSaving(false);\r\n    }\r\n  };\r\n\r\n  const handleViewFieldChange = (e) =>\r\n    setViewForm((p) => ({ ...p, [e.target.name]: e.target.value }));\r\n\r\n  const clearFilters = () => {\r\n    const reset = {\r\n      query: \"\",\r\n      status: { value: \"all\", label: \"All Statuses\" },\r\n      broker: { value: \"all\", label: \"All Brokers\" },\r\n      region: { value: \"all\", label: \"All Regions\" },\r\n      propertyType: { value: \"all\", label: \"All Property Types\" },\r\n      requirement: { value: \"all\", label: \"All Requirements\" },\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      budgetMax: 500000,\r\n    };\r\n    setFilters(reset);\r\n    setPage(1);\r\n    loadLeads(reset, 1, limit, \"\");\r\n  };\r\n\r\n  /* ───────────── Content Loader Components ───────────── */\r\n  const ContentLoader = ({ className = \"\" }) => (\r\n    <div className={`animate-pulse ${className}`}>\r\n      <div className=\"h-4 bg-gray-200 rounded w-3/4 mb-2\"></div>\r\n      <div className=\"h-3 bg-gray-200 rounded w-1/2\"></div>\r\n    </div>\r\n  );\r\n\r\n  const TableRowLoader = () => (\r\n    <div className=\"grid grid-cols-12 items-center px-6 py-4 animate-pulse\">\r\n      <div className=\"col-span-2 flex items-center gap-3\">\r\n        <div className=\"h-4 w-28 rounded bg-gray-200\" />\r\n      </div>\r\n      <div className=\"col-span-2 h-4 w-40 rounded bg-gray-200\" />\r\n      <div className=\"col-span-2 h-4 w-28 rounded bg-gray-200\" />\r\n      <div className=\"col-span-1 h-4 w-14 rounded bg-gray-200\" />\r\n      <div className=\"col-span-2 h-4 w-20 rounded bg-gray-200\" />\r\n      <div className=\"col-span-1 flex justify-center\">\r\n        <div className=\"h-6 w-16 rounded-full bg-gray-200\" />\r\n      </div>\r\n      <div className=\"col-span-2 flex justify-end gap-2\">\r\n        <div className=\"w-7 h-7 rounded-lg bg-gray-200\" />\r\n        <div className=\"w-7 h-7 rounded-lg bg-gray-200\" />\r\n        <div className=\"w-7 h-7 rounded-lg bg-gray-200\" />\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const EmptyState = () => (\r\n    <div className=\"flex flex-col items-center justify-center py-12 px-6\">\r\n      <div className=\"w-16 h-16 rounded-full bg-gray-100 flex items-center justify-center mb-4\">\r\n        <svg\r\n          className=\"w-8 h-8 text-gray-400\"\r\n          fill=\"none\"\r\n          stroke=\"currentColor\"\r\n          viewBox=\"0 0 24 24\"\r\n        >\r\n          <path\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n            strokeWidth=\"2\"\r\n            d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"\r\n          />\r\n        </svg>\r\n      </div>\r\n      <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\r\n        No leads found\r\n      </h3>\r\n      <p className=\"text-sm text-gray-500 text-center max-w-sm\">\r\n        {filters.query ||\r\n        filters.status?.value !== \"all\" ||\r\n        filters.region?.value !== \"all\" ||\r\n        filters.propertyType?.value !== \"all\" ||\r\n        filters.requirement?.value !== \"all\" ||\r\n        filters.budgetMax !== 500000\r\n          ? \"No leads match your current filters. Try adjusting your search criteria.\"\r\n          : \"You don't have any leads yet. Click 'Add New Lead' to get started.\"}\r\n      </p>\r\n      {!filters.query &&\r\n        filters.status?.value === \"all\" &&\r\n        filters.region?.value === \"all\" &&\r\n        filters.propertyType?.value === \"all\" &&\r\n        filters.requirement?.value === \"all\" &&\r\n        filters.budgetMax === 500000 && (\r\n          <button\r\n            onClick={() => setShowAddLead(true)}\r\n            className=\"mt-4 px-4 py-2 bg-green-900 text-white text-sm font-semibold rounded-lg hover:bg-green-950 transition-colors\"\r\n          >\r\n            Add Your First Lead\r\n          </button>\r\n        )}\r\n    </div>\r\n  );\r\n\r\n  const headerData = {\r\n    title: \"My Leads\",\r\n    breadcrumb: [\r\n      { label: \"Home\", href: \"/\" },\r\n      { label: \"Leads\", href: \"/leads\" },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <ProtectedRoute requiredRole=\"broker\">\r\n      <HeaderFile data={headerData} />\r\n      <div className=\"min-h-screen bg-white py-16\">\r\n        <Toaster position=\"top-right\" toastOptions={{ duration: 3000 }} />\r\n        <div className=\"w-full mx-auto  \">\r\n          {/* 9 / 3 layout */}\r\n          <div className=\"grid grid-cols-1 md:grid-cols-12 gap-6\">\r\n            {/* Header */}\r\n            {/* Left 9 */}\r\n            <div className=\"md:col-span-9\">\r\n              <div className=\"mb-6\">\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div>\r\n                    <h1 className=\" font-archivo text-[18px] leading-[36px] font-bold text-[#171A1FFF]\">\r\n                      Lead Management\r\n                    </h1>\r\n                    <p className=\"text-[12px] leading-[20px] font-normal text-[#565D6DFF]\">\r\n                      Capture leads, share with brokers, and track progress —\r\n                      all in one place.\r\n                    </p>\r\n                  </div>\r\n\r\n                  {/* View Mode Toggle (single switch with label) */}\r\n                  <div className=\"flex items-center gap-3\">\r\n                    <button\r\n                      type=\"button\"\r\n                      role=\"switch\"\r\n                      aria-checked={leadViewMode === \"transferred\"}\r\n                      onClick={() => {\r\n                        const next =\r\n                          leadViewMode === \"my-leads\"\r\n                            ? \"transferred\"\r\n                            : \"my-leads\";\r\n                        setLeadViewMode(next);\r\n                        setPage(1);\r\n                        loadLeads(filters, 1, limit, debouncedQuery, next);\r\n                      }}\r\n                      className={`relative inline-flex h-5 w-10 items-center rounded-full transition-colors duration-200 border ${\r\n                        leadViewMode === \"transferred\"\r\n                          ? \"bg-sky-600 border-sky-600\"\r\n                          : \"bg-gray-200 border-gray-300\"\r\n                      }`}\r\n                    >\r\n                      <span\r\n                        className={`inline-block h-5 w-5 transform rounded-full bg-white shadow transition-transform duration-200 ${\r\n                          leadViewMode === \"transferred\"\r\n                            ? \"translate-x-5\"\r\n                            : \"translate-x-0\"\r\n                        }`}\r\n                      />\r\n                    </button>\r\n                    <span className=\"text-[12px] leading-5 font-normal text-[#565D6D]\">\r\n                      {leadViewMode === \"transferred\"\r\n                        ? \"Transferred to Me\"\r\n                        : \"My Leads\"}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Stat row */}\r\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-5\">\r\n                {/* Total Leads (Active Card with Purple Border) */}\r\n                <div className=\"border border-gray-200 shadow-[0_0_1px_#171a1f12,0_0_2px_#171a1f1F] bg-white rounded-lg p-4\">\r\n                  <p className=\"text-[12px] text-[#565D6DFF] font-medium\">\r\n                    Total Leads\r\n                  </p>\r\n                  <p className=\"text-[18px] font-semibold text-gray-900 mt-1\">\r\n                    {metricsLoading ? \"—\" : metrics.totalLeads.toLocaleString()}\r\n                  </p>\r\n                </div>\r\n\r\n                {/* Shared With Me */}\r\n                <div className=\"border border-gray-200 shadow-[0_0_1px_#171a1f12,0_0_2px_#171a1f1F] bg-white rounded-lg p-4\">\r\n                  <p className=\"text-[12px] text-[#565D6DFF] font-medium\">\r\n                    Shared With Me\r\n                  </p>\r\n                  <p className=\"text-[18px] font-semibold text-gray-900 mt-1\">\r\n                    {metricsLoading\r\n                      ? \"—\"\r\n                      : Number(\r\n                          metrics.transferredToMe || metrics.transfersToMe || 0\r\n                        ).toLocaleString()}\r\n                  </p>\r\n                </div>\r\n\r\n                {/* Shared By Me */}\r\n                <div className=\"border shadow-[0_0_1px_#171a1f12,0_0_2px_#171a1f1F] border-gray-200 bg-white rounded-lg p-4\">\r\n                  <p className=\"text-[12px] text-[#565D6DFF] font-medium\">\r\n                    Shared By Me\r\n                  </p>\r\n                  <p className=\"text-[18px] font-semibold text-gray-900 mt-1\">\r\n                    {metricsLoading\r\n                      ? \"—\"\r\n                      : Number(\r\n                          metrics.transferredByMe || metrics.transfersByMe || 0\r\n                        ).toLocaleString()}\r\n                  </p>\r\n                </div>\r\n                {/* <StatCard\r\n    color=\"violet\"\r\n    label=\"Avg. Deal Size\"\r\n    value={metricsLoading ? '—' : `$${Number(metrics.avgDealSize || 0).toLocaleString()}`}\r\n    deltaText={metricsError ? 'Unable to load' : '↑ 5.1% vs last month'}\r\n    trend=\"up\"\r\n  /> */}\r\n              </div>\r\n\r\n              {/* subtle divider before lead cards */}\r\n              <div className=\"mt-4\" />\r\n              {/* Search + status + buttons - Flexible layout */}\r\n              <div className=\"mt-6 flex items-center gap-3\">\r\n                {/* Search - Fixed width to match status dropdown */}\r\n                <div className=\"w-80 relative\">\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Search leads...\"\r\n                    value={filters.query}\r\n                    onChange={(e) =>\r\n                      setFilters({ ...filters, query: e.target.value })\r\n                    }\r\n                    className=\"w-full pl-11 pr-4 py-2 border border-gray-200 rounded-xl shadow-[0_0_1px_#171a1f12,0_0_2px_#171a1f1F] bg-white text-[12px] font-body placeholder-gray-500 focus:outline-none focus:ring-4 focus:ring-sky-100 focus:border-sky-500\"\r\n                    style={{ minHeight: \"40px\", fontSize: \"12px\" }}\r\n                  />\r\n                  <svg\r\n                    className=\"w-5 h-5 text-gray-500 absolute left-3 top-1/2 -translate-y-1/2\"\r\n                    fill=\"none\"\r\n                    stroke=\"currentColor\"\r\n                    viewBox=\"0 0 24 24\"\r\n                  >\r\n                    <path\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      strokeWidth=\"2\"\r\n                      d=\"M21 21l-4.35-4.35M10 18a8 8 0 100-16 8 8 0 000 16z\"\r\n                    />\r\n                  </svg>\r\n                  {/* Search indicator */}\r\n                  {isSearching && (\r\n                    <div className=\"absolute right-3 top-1/2 -translate-y-1/2\">\r\n                      <div className=\"w-4 h-4 border-2 border-sky-500 border-t-transparent rounded-full animate-spin\"></div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                {/* Status Filter - Same width as search */}\r\n                <div className=\"w-52\">\r\n                  <Select\r\n                    value={filters.status}\r\n                    onChange={(opt) => {\r\n                      const next = { ...filters, status: opt };\r\n                      setFilters(next);\r\n                      setPage(1);\r\n                      loadLeads(next, 1, limit, debouncedQuery);\r\n                    }}\r\n                    options={statusOptions}\r\n                    styles={customSelectStyles}\r\n                    isSearchable\r\n                    menuPlacement=\"bottom\"\r\n                  />\r\n                </div>\r\n\r\n                {/* Advanced Filters - Gray color with icon */}\r\n                <div>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => setShowAdvanced(true)}\r\n                    className=\"px-3 py-2.5 rounded-xl text-[12px] font-body border border-gray-200 bg-white text-gray-500 hover:text-gray-600 hover:bg-white hover:border-gray-300 shadow-[0_0_1px_#171a1f12,0_0_2px_#171a1f1F] cursor-pointer whitespace-nowrap flex items-center gap-2\"\r\n                    style={{ minHeight: \"40px\", fontSize: \"12px\" }}\r\n                  >\r\n                    <svg\r\n                      className=\"w-4 h-4\"\r\n                      fill=\"none\"\r\n                      stroke=\"currentColor\"\r\n                      viewBox=\"0 0 24 24\"\r\n                    >\r\n                      <path\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        strokeWidth=\"2\"\r\n                        d=\"M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.207A1 1 0 013 6.5V4z\"\r\n                      />\r\n                    </svg>\r\n                    Advanced Filters\r\n                  </button>\r\n                </div>\r\n\r\n                {/* Add New Lead - Outline style */}\r\n                <div>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => setShowAddLead(true)}\r\n                    className=\"px-3 py-2.5 rounded-xl text-[12px] border border-green-600 text-white bg-[#0D542B]  hover:bg-[#0B4624]  hover:border-green-700 shadow-[0_0_1px_#171a1f12,0_0_2px_#171a1f1F] cursor-pointer whitespace-nowrap flex items-center gap-2\"\r\n                    style={{ minHeight: \"40px\", fontSize: \"12px\" }}\r\n                  >\r\n                    <svg\r\n                      className=\"w-4 h-4\"\r\n                      fill=\"none\"\r\n                      stroke=\"currentColor\"\r\n                      viewBox=\"0 0 24 24\"\r\n                    >\r\n                      <path\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        strokeWidth=\"2\"\r\n                        d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"\r\n                      />\r\n                    </svg>\r\n                    Add New Lead\r\n                  </button>\r\n                </div>\r\n\r\n                {/* Clear Filters - Fixed width, only when needed */}\r\n                {isAdvancedFiltersApplied && (\r\n                  <div>\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={clearAdvancedFilters}\r\n                      className=\"px-3 py-2.5 rounded-xl text-[12px] font-semibold border border-gray-200 text-gray-700 hover:bg-gray-50 shadow-sm cursor-pointer whitespace-nowrap\"\r\n                      title=\"Clear advanced filters\"\r\n                    >\r\n                      Clear Filters\r\n                    </button>\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              {/* Table */}\r\n              <div className=\"mt-6\">\r\n                {/* Loading */}\r\n                {leadsLoading && (\r\n                  <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n                    {[...Array(6)].map((_, i) => (\r\n                      <div\r\n                        key={i}\r\n                        className=\"rounded-2xl border border-gray-200 bg-white shadow-sm p-4 animate-pulse\"\r\n                      >\r\n                        <div className=\"h-5 w-2/3 bg-gray-200 rounded mb-3\" />\r\n                        <div className=\"h-4 w-1/2 bg-gray-200 rounded mb-4\" />\r\n                        <div className=\"h-28 w-full bg-gray-100 rounded mb-4\" />\r\n                        <div className=\"flex items-center justify-between\">\r\n                          <div className=\"h-7 w-28 bg-gray-200 rounded\" />\r\n                          <div className=\"flex gap-2\">\r\n                            <div className=\"h-7 w-7 bg-gray-200 rounded-lg\" />\r\n                            <div className=\"h-7 w-7 bg-gray-200 rounded-lg\" />\r\n                            <div className=\"h-7 w-7 bg-gray-200 rounded-lg\" />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n\r\n                {/* Empty State */}\r\n                {!leadsLoading &&\r\n                  Array.isArray(leads) &&\r\n                  leads.length === 0 && <EmptyState />}\r\n\r\n                {/* Cards */}\r\n                {!leadsLoading && Array.isArray(leads) && leads.length > 0 && (\r\n                  <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-2 md:grid-cols-2 xl:grid-cols-2 gap-6\">\r\n                    {leads.map((row, idx) => {\r\n                      // ----- Shared With (avatars from transfers) -----\r\n                      const transfers = Array.isArray(row?.transfers)\r\n                        ? row.transfers\r\n                        : [];\r\n                      const toBrokers = transfers\r\n                        .map((t) =>\r\n                          typeof t?.toBroker === \"object\"\r\n                            ? t.toBroker\r\n                            : { _id: t?.toBroker }\r\n                        )\r\n                        .filter((b) => b && (b._id || b.name || b.email));\r\n                      const uniqueToBrokers = Array.from(\r\n                        new Map(\r\n                          toBrokers.map((b) => [b._id || b.email || b.name, b])\r\n                        ).values()\r\n                      );\r\n                      const idToBroker = new Map(\r\n                        (brokersList || []).map((b) => [b._id || b.id, b])\r\n                      );\r\n                      const avatars = uniqueToBrokers.map((b) => {\r\n                        const merged = b._id\r\n                          ? { ...(idToBroker.get(b._id) || {}), ...b }\r\n                          : b;\r\n                        return {\r\n                          id:\r\n                            merged._id ||\r\n                            merged.id ||\r\n                            merged.email ||\r\n                            merged.name,\r\n                          name:\r\n                            merged.name ||\r\n                            merged.fullName ||\r\n                            merged.email ||\r\n                            \"Broker\",\r\n                          image:\r\n                            merged.brokerImage ||\r\n                            merged.avatarUrl ||\r\n                            merged.imageUrl ||\r\n                            \"\",\r\n                        };\r\n                      });\r\n\r\n                      const isTransferred = (() => {\r\n                        const transferredTo =\r\n                          row?.transferredTo ||\r\n                          row?.transferredBrokers ||\r\n                          row?.transfers ||\r\n                          [];\r\n                        return (\r\n                          Array.isArray(transferredTo) &&\r\n                          transferredTo.length > 0\r\n                        );\r\n                      })();\r\n\r\n                      return (\r\n                        <div\r\n                          key={row._id || row.id || idx}\r\n                          className=\"group relative border shadow-[0_0_1px_#171a1f12,0_0_2px_#171a1f1F] border-gray-200 bg-white rounded-lg\"\r\n                        >\r\n                          {/* Status Badge - Horizontal Ribbon with Folded Corner */}\r\n                          <div className=\"absolute top-0 right-0 z-10\">\r\n                            <div\r\n                              className=\"text-black text-[10px] leading-[20px] font-semibold px-[2x] py-[1px] rounded-full text-center shadow-md relative\"\r\n                              style={{\r\n                                background:\r\n                                  row.status?.toLowerCase() === \"new\"\r\n                                    ? \"#FDC700\"\r\n                                    : row.status?.toLowerCase() === \"assigned\"\r\n                                    ? \"linear-gradient(90deg, #3b82f6 0%, #1e40af 100%)\"\r\n                                    : row.status?.toLowerCase() ===\r\n                                      \"in progress\"\r\n                                    ? \"linear-gradient(90deg, #f59e0b 0%, #dc2626 100%)\"\r\n                                    : row.status?.toLowerCase() === \"closed\"\r\n                                    ? \"linear-gradient(90deg, #10b981 0%, #047857 100%)\"\r\n                                    : row.status?.toLowerCase() === \"rejected\"\r\n                                    ? \"linear-gradient(90deg, #ef4444 0%, #dc2626 100%)\"\r\n                                    : row.status?.toLowerCase() ===\r\n                                      \"transferred\"\r\n                                    ? \"linear-gradient(90deg, #f97316 0%, #ea580c 100%)\"\r\n                                    : row.status?.toLowerCase() === \"active\"\r\n                                    ? \"linear-gradient(90deg, #10b981 0%, #047857 100%)\"\r\n                                    : \"#FDC700\", // default yellow\r\n                                // clipPath:\r\n                                //   \"polygon(0 0, calc(100% - 10px) 0, 100% 100%, 10px 100%)\",\r\n                                minWidth: \"40px\",\r\n                              }}\r\n                            >\r\n                              {row.status ? row.status.toUpperCase() : \"NEW\"}\r\n                            </div>\r\n                          </div>\r\n\r\n                          {/* Card Content */}\r\n                          <div className=\"p-6 pt-8\">\r\n                            {/* Header Section */}\r\n                            <div className=\"flex items-start justify-between mb-4\">\r\n                              {/* Left Side - Avatar and Name */}\r\n                              <div className=\"flex items-start gap-4\">\r\n                                {(() => {\r\n                                  const seed = row.customerName || row.name;\r\n                                  const c = getAvatarColor(seed);\r\n                                  return (\r\n                                    <div\r\n                                      className={`w-12 h-12 rounded-full flex items-center justify-center text-[12px] font-semibold ${c.bg} ${c.text}`}\r\n                                    >\r\n                                      {(row.customerName || row.name || \"-\")\r\n                                        .split(\" \")\r\n                                        .map((s) => s[0])\r\n                                        .filter(Boolean)\r\n                                        .join(\"\")\r\n                                        .slice(0, 2)\r\n                                        .toUpperCase()}\r\n                                    </div>\r\n                                  );\r\n                                })()}\r\n                                <div className=\"flex-1 pr-4\">\r\n                                  <h3 className=\"break-words text-[14px] leading-[24px] font-semibold text-[#171A1F]\">\r\n                                    {row.customerName || row.name || \"-\"}\r\n                                  </h3>\r\n                                  <p className=\"text-[12px] font-normal text-[#565D6D] break-words leading-tight\">\r\n                                    {row.customerEmail ||\r\n                                      row.customerPhone ||\r\n                                      row.contact ||\r\n                                      \"-\"}\r\n                                  </p>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n\r\n                            {/* Lead Details Section - Two Rows */}\r\n                            <div className=\"space-y-3\">\r\n                              {/* First Row */}\r\n                              <div className=\"flex justify-between items-center  border-gray-100\">\r\n                                <div className=\"flex-1\">\r\n                                  <div className=\"text-[12px] font-normal text-[#565D6D] break-words uppercase tracking-wide mb-1\">\r\n                                    REQUIREMENT\r\n                                  </div>\r\n                                  <div className=\"break-words text-[14px] leading-[16px]  font-medium text-[#171A1F]\">\r\n                                    {row.requirement || row.req || \"—\"}\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"flex-1 pl-4\">\r\n                                  <div className=\"text-[12px] font-normal text-[#565D6D] break-words uppercase tracking-wide mb-1\">\r\n                                    PROPERTY TYPE\r\n                                  </div>\r\n                                  <div className=\"break-words text-[14px] leading-[16px]  font-medium text-[#171A1F]\">\r\n                                    {row.propertyType || \"—\"}\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n\r\n                              {/* Second Row */}\r\n                              <div className=\"flex justify-between items-top\">\r\n                                <div className=\"flex-1\">\r\n                                  <div className=\"text-[12px] font-normal text-[#565D6D] break-words uppercase tracking-wide mb-1\">\r\n                                    BUDGET\r\n                                  </div>\r\n                                  <div className=\"break-words text-[14px] leading-[16px]  font-medium  text-[#171A1F]\">\r\n                                    {typeof row.budget === \"number\"\r\n                                      ? `$${row.budget.toLocaleString()}`\r\n                                      : row.budget || \"—\"}\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"flex-1 pl-4\">\r\n                                  <div className=\"text-[12px] font-normal text-[#565D6D] break-words uppercase tracking-wide mb-1\">\r\n                                    REGION(S)\r\n                                  </div>\r\n                                  {(() => {\r\n                                    const { primary, secondary } =\r\n                                      getRegionNames(row);\r\n                                    return (\r\n                                      <div className=\"break-words text-[14px] leading-[16px] flex flex-col gap-2 font-medium text-[#171A1F]\">\r\n                                        <div>{primary || \"—\"}</div>\r\n                                        {secondary && (\r\n                                          <div className=\"break-words text-[14px] leading-[16px]  font-medium text-[#171A1F]\">\r\n                                            {secondary}\r\n                                          </div>\r\n                                        )}\r\n                                      </div>\r\n                                    );\r\n                                  })()}\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n\r\n                            {/* Bottom Section - Shared With and Actions */}\r\n                            <div className=\"flex items-end justify-between  pt-4 \">\r\n                              {/* Shared With */}\r\n                              <div>\r\n                                <div className=\"uppercase tracking-wide mb-2 text-[12px] leading-[12px] font-normal text-[#565D6D]\">\r\n                                  SHARED WITH\r\n                                </div>\r\n                                {(() => {\r\n                                  const transfers = Array.isArray(\r\n                                    row?.transfers\r\n                                  )\r\n                                    ? row.transfers\r\n                                    : [];\r\n                                  // Extract toBroker objects/ids and normalize\r\n                                  const toBrokers = transfers\r\n                                    .map((t) =>\r\n                                      typeof t?.toBroker === \"object\"\r\n                                        ? t.toBroker\r\n                                        : { _id: t?.toBroker }\r\n                                    )\r\n                                    .filter(\r\n                                      (b) => b && (b._id || b.name || b.email)\r\n                                    );\r\n                                  const uniqueToBrokers = Array.from(\r\n                                    new Map(\r\n                                      toBrokers.map((b) => [\r\n                                        b._id || b.email || b.name,\r\n                                        b,\r\n                                      ])\r\n                                    ).values()\r\n                                  );\r\n\r\n                                  if (uniqueToBrokers.length === 0) {\r\n                                    return (\r\n                                      <span className=\"text-[10px]  font-normal text-[#565D6D]\">\r\n                                        Not shared\r\n                                      </span>\r\n                                    );\r\n                                  }\r\n\r\n                                  // Map to avatar data: prefer brokerImage from embedded object; fallback to brokersList by id\r\n                                  const idToBroker = new Map(\r\n                                    (brokersList || []).map((b) => [\r\n                                      b._id || b.id,\r\n                                      b,\r\n                                    ])\r\n                                  );\r\n                                  const avatars = uniqueToBrokers.map((b) => {\r\n                                    const merged = b._id\r\n                                      ? {\r\n                                          ...(idToBroker.get(b._id) || {}),\r\n                                          ...b,\r\n                                        }\r\n                                      : b;\r\n                                    return {\r\n                                      id:\r\n                                        merged._id ||\r\n                                        merged.id ||\r\n                                        merged.email ||\r\n                                        merged.name,\r\n                                      name:\r\n                                        merged.name ||\r\n                                        merged.fullName ||\r\n                                        merged.email ||\r\n                                        \"Broker\",\r\n                                      image:\r\n                                        merged.brokerImage ||\r\n                                        merged.avatarUrl ||\r\n                                        merged.imageUrl ||\r\n                                        \"\",\r\n                                    };\r\n                                  });\r\n\r\n                                  const visible = avatars.slice(0, 2);\r\n                                  const remaining = Math.max(\r\n                                    0,\r\n                                    avatars.length - visible.length\r\n                                  );\r\n\r\n                                  return (\r\n                                    <div className=\"flex items-center\">\r\n                                      <div className=\"flex -space-x-2\">\r\n                                        {visible.map((a, i) => (\r\n                                          <div\r\n                                            key={`${a.id || \"broker\"}-${i}`}\r\n                                            className=\"w-7 h-7 rounded-full ring-2 ring-white bg-gray-200 overflow-hidden flex items-center justify-center text-[10px] text-gray-600\"\r\n                                            title={a.name}\r\n                                          >\r\n                                            <img\r\n                                              src={\r\n                                                a.image ||\r\n                                                \"https://www.w3schools.com/howto/img_avatar.png\"\r\n                                              }\r\n                                              alt={a.name}\r\n                                              className=\"w-full h-full object-cover\"\r\n                                            />\r\n                                          </div>\r\n                                        ))}\r\n                                        {remaining > 0 && (\r\n                                          <div\r\n                                            className=\"w-7 h-7 rounded-full ring-2 ring-white bg-yellow-400 text-black flex items-center justify-center text-[11px] font-semibold\"\r\n                                            title={`+${remaining} more`}\r\n                                          >\r\n                                            +{remaining}\r\n                                          </div>\r\n                                        )}\r\n                                      </div>\r\n                                    </div>\r\n                                  );\r\n                                })()}\r\n                              </div>\r\n\r\n                              {/* Action Icons */}\r\n                              <div className=\"flex items-center gap-4\">\r\n                                {/* View Button */}\r\n                                <button\r\n                                  title=\"View Details\"\r\n                                  className=\"flex items-center gap-1 text-[12px] font-medium text-[#565D6D] hover:text-green-900 transition-colors cursor-pointer\"\r\n                                  onClick={() => {\r\n                                    setSelectedLead(row);\r\n                                    setViewEditMode(false);\r\n                                    setViewClosing(false);\r\n                                    setViewForm({\r\n                                      name: row.customerName || row.name || \"\",\r\n                                      contact:\r\n                                        row.customerPhone || row.contact || \"\",\r\n                                      email: row.customerEmail || \"\",\r\n                                      budget: String(row.budget ?? \"\"),\r\n                                      requirement:\r\n                                        row.requirement || row.req || \"\",\r\n                                      propertyType: row.propertyType || \"\",\r\n                                      primaryRegion: row.primaryRegion\r\n                                        ? {\r\n                                            value:\r\n                                              row.primaryRegion._id ||\r\n                                              row.primaryRegion.id ||\r\n                                              row.primaryRegion,\r\n                                            label:\r\n                                              row.primaryRegion.name ||\r\n                                              row.primaryRegion,\r\n                                          }\r\n                                        : row.region\r\n                                        ? typeof row.region === \"object\"\r\n                                          ? {\r\n                                              value:\r\n                                                row.region._id ||\r\n                                                row.region.id ||\r\n                                                row.region,\r\n                                              label:\r\n                                                row.region.name || row.region,\r\n                                            }\r\n                                          : {\r\n                                              value: row.region,\r\n                                              label:\r\n                                                getRegionName(row.region) ||\r\n                                                row.region,\r\n                                            }\r\n                                        : null,\r\n                                      secondaryRegion: row.secondaryRegion\r\n                                        ? {\r\n                                            value:\r\n                                              row.secondaryRegion._id ||\r\n                                              row.secondaryRegion.id ||\r\n                                              row.secondaryRegion,\r\n                                            label:\r\n                                              row.secondaryRegion.name ||\r\n                                              row.secondaryRegion,\r\n                                          }\r\n                                        : null,\r\n                                      status: row.status || \"active\",\r\n                                    });\r\n                                    setShowView(true);\r\n                                  }}\r\n                                >\r\n                                  <svg\r\n                                    className=\"w-5 h-5\"\r\n                                    fill=\"none\"\r\n                                    stroke=\"currentColor\"\r\n                                    viewBox=\"0 0 24 24\"\r\n                                  >\r\n                                    <path\r\n                                      strokeLinecap=\"round\"\r\n                                      strokeLinejoin=\"round\"\r\n                                      strokeWidth={2}\r\n                                      d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\r\n                                    />\r\n                                    <path\r\n                                      strokeLinecap=\"round\"\r\n                                      strokeLinejoin=\"round\"\r\n                                      strokeWidth={2}\r\n                                      d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"\r\n                                    />\r\n                                  </svg>\r\n                                  <span className=\"text-[12px] font-medium text-[#565D6D]\">\r\n                                    View\r\n                                  </span>\r\n                                </button>\r\n\r\n                                {/* Transfer Button */}\r\n                                <button\r\n                                  title=\"Transfer Lead\"\r\n                                  className=\"flex items-center gap-1 text-[12px] font-medium text-[#565D6D] hover:text-blue-800 transition-colors cursor-pointer\"\r\n                                  onClick={() => openTransferForLead(row)}\r\n                                >\r\n                                  <svg\r\n                                    className=\"w-4 h-4\"\r\n                                    viewBox=\"0 0 24 24\"\r\n                                    fill=\"none\"\r\n                                    stroke=\"currentColor\"\r\n                                    strokeWidth=\"2\"\r\n                                    strokeLinecap=\"round\"\r\n                                    strokeLinejoin=\"round\"\r\n                                  >\r\n                                    <line x1=\"22\" y1=\"2\" x2=\"11\" y2=\"13\" />\r\n                                    <polygon points=\"22 2 15 22 11 13 2 9 22 2\" />\r\n                                  </svg>\r\n                                  <span className=\"text-[12px] font-medium text-[#565D6D]\">\r\n                                    Share\r\n                                  </span>\r\n                                </button>\r\n\r\n                                {/* Delete Button */}\r\n                                <button\r\n                                  title=\"Delete Lead\"\r\n                                  className={`flex items-center gap-1 text-[12px] font-medium text-[#565D6D] transition-colors ${\r\n                                    isTransferred\r\n                                      ? \"text-gray-300 cursor-not-allowed\"\r\n                                      : \"text-[#565D6D] hover:text-[#565D6D] cursor-pointer\"\r\n                                  }`}\r\n                                  onClick={() =>\r\n                                    !isTransferred && handleDeleteLead(row)\r\n                                  }\r\n                                  disabled={isTransferred}\r\n                                >\r\n                                  <svg\r\n                                    className=\"w-4 h-4\"\r\n                                    fill=\"none\"\r\n                                    stroke=\"currentColor\"\r\n                                    viewBox=\"0 0 24 24\"\r\n                                  >\r\n                                    <path\r\n                                      strokeLinecap=\"round\"\r\n                                      strokeLinejoin=\"round\"\r\n                                      strokeWidth={2}\r\n                                      d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\r\n                                    />\r\n                                  </svg>\r\n                                  <span className=\"flex items-center gap-1 text-[12px] font-medium text-[#565D6D]\">\r\n                                    Delete\r\n                                  </span>\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              {/* Pagination */}\r\n              <div className=\"flex items-center justify-between mt-4\">\r\n                <div className=\"text-sm text-gray-600\">\r\n                  Page {page} of {totalPages}\r\n                </div>\r\n                <div className=\"flex items-center gap-2\">\r\n                  <button\r\n                    className=\"px-3 py-1.5 rounded-lg border border-gray-200 text-sm disabled:opacity-50 bg-white cursor-pointer\"\r\n                    onClick={() => setPage((p) => Math.max(1, p - 1))}\r\n                    disabled={page <= 1}\r\n                  >\r\n                    Prev\r\n                  </button>\r\n                  <button\r\n                    className=\"px-3 py-1.5 rounded-lg border border-gray-200 text-sm disabled:opacity-50 bg-white cursor-pointer\"\r\n                    onClick={() => setPage((p) => Math.min(totalPages, p + 1))}\r\n                    disabled={page >= totalPages}\r\n                  >\r\n                    Next\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Right 3 (sticky) */}\r\n            <aside className=\"md:col-span-3 space-y-6 md:sticky md:top-6 self-start\">\r\n              {/* Recent Activity */}\r\n              <div className=\"bg-white  p-4 rounded-[10px] border border-[#DEE1E6] shadow-[0_0_1px_#171a1f12,0_0_2px_#171a1f1F]\">\r\n                <h4 className=\" mb-3 flex items-center gap-2 text-[14px] leading-6 font-semibold text-[#171A1F]\">\r\n                  {/* clock-in-circle */}\r\n                  <svg\r\n                    className=\"w-4 h-4 text-gray-600 shrink-0 overflow-visible\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    fill=\"none\"\r\n                    stroke=\"currentColor\"\r\n                    strokeWidth=\"2\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    aria-hidden=\"true\"\r\n                  >\r\n                    <circle cx=\"12\" cy=\"12\" r=\"10\" />\r\n                    <path d=\"M12 7v5l4 2\" />\r\n                  </svg>\r\n                  Recent Activity\r\n                </h4>\r\n\r\n                <ul className=\"text-sm text-slate-900 space-y-3\">\r\n                  {/* New lead created */}\r\n                  <li className=\"flex items-start gap-3\">\r\n                    <span className=\"mt-0.5 inline-flex items-center justify-center w-7 h-7 rounded-full bg-gray-100 text-gray-600 ring-1 ring-gray-200\">\r\n                      {/* user-plus */}\r\n                      <svg\r\n                        className=\"w-=4 h-4\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        fill=\"none\"\r\n                        stroke=\"currentColor\"\r\n                        strokeWidth=\"2\"\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        aria-hidden=\"true\"\r\n                      >\r\n                        <path d=\"M16 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\" />\r\n                        <circle cx=\"10\" cy=\"7\" r=\"4\" />\r\n                        <path d=\"M19 8v6M22 11h-6\" />\r\n                      </svg>\r\n                    </span>\r\n                    <div className=\"flex-1\">\r\n                      <div className=\"text-[12px] leading-5 font-normal text-[#171A1F]\">\r\n                        New lead created\r\n                      </div>\r\n                      <div className=\"text-[10px] leading-5 font-normal text-[#565D6D]\">\r\n                        Today, 10:45 AM\r\n                      </div>\r\n                    </div>\r\n                  </li>\r\n\r\n                  {/* Follow-up email */}\r\n                  <li className=\"flex items-start gap-3\">\r\n                    <span className=\"mt-0.5 inline-flex items-center justify-center w-7 h-7 rounded-full bg-gray-100 text-gray-600 ring-1 ring-gray-200\">\r\n                      {/* mail */}\r\n                      <svg\r\n                        className=\"w-4 h-4\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        fill=\"none\"\r\n                        stroke=\"currentColor\"\r\n                        strokeWidth=\"2\"\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        aria-hidden=\"true\"\r\n                      >\r\n                        <rect x=\"3\" y=\"5\" width=\"18\" height=\"14\" rx=\"2\" />\r\n                        <path d=\"M22 7 12 13 2 7\" />\r\n                      </svg>\r\n                    </span>\r\n                    <div className=\"flex-1\">\r\n                      <div className=\"text-[12px] leading-5 font-normal text-[#171A1F]\">\r\n                        Follow-up email sent to Michael Chen\r\n                      </div>\r\n                      <div className=\"text-[10px] leading-5 font-normal text-[#565D6D]\">\r\n                        Yesterday, 3:20 PM\r\n                      </div>\r\n                    </div>\r\n                  </li>\r\n\r\n                  {/* Qualified */}\r\n                  <li className=\"flex items-start gap-3\">\r\n                    <span className=\"mt-0.5 inline-flex items-center justify-center w-7 h-7 rounded-full bg-gray-100 text-gray-600 ring-1 ring-gray-200\">\r\n                      {/* check */}\r\n                      <svg\r\n                        className=\"w-4 h-4\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        fill=\"none\"\r\n                        stroke=\"currentColor\"\r\n                        strokeWidth=\"2\"\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        aria-hidden=\"true\"\r\n                      >\r\n                        <path d=\"M20 6 9 17l-5-5\" />\r\n                      </svg>\r\n                    </span>\r\n                    <div className=\"flex-1\">\r\n                      <div className=\"text-[12px] leading-5 font-normal text-[#171A1F]\">\r\n                        Lead status changed to Qualified\r\n                      </div>\r\n                      <div className=\"text-[10px] leading-5 font-normal text-[#565D6D]\">\r\n                        Yesterday, 11:15 AM\r\n                      </div>\r\n                    </div>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n\r\n              {/* Lead Help & Resources */}\r\n              <div className=\"bg-white  p-4 rounded-[10px] border border-[#DEE1E6] shadow-[0_0_1px_#171a1f12,0_0_2px_#171a1f1F]\">\r\n                <div className=\"flex items-center justify-between mb-2\">\r\n                  <h4 className=\"flex items-center gap-2 text-[14px] leading-6 font-semibold text-[#171A1F]\">\r\n                    {/* chat/faq icon */}\r\n                    <svg\r\n                      className=\"w-4 h-4 text-gray-600 shrink-0 overflow-visible\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      fill=\"none\"\r\n                      stroke=\"currentColor\"\r\n                      strokeWidth=\"2\"\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      aria-hidden=\"true\"\r\n                    >\r\n                      {/* message square */}\r\n                      <rect x=\"3\" y=\"4\" width=\"18\" height=\"14\" rx=\"3\" />\r\n                      {/* tail */}\r\n                      <path d=\"M8 18v3l3-3\" />\r\n                    </svg>\r\n                    FAQ\r\n                  </h4>\r\n                  <a\r\n                    href=\"/faq\"\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                    className=\" text-green-950 hover:underline hover:text-green-950 transition-colors text-[12px] leading-5 font-medium \"\r\n                  >\r\n                    View all\r\n                  </a>\r\n                </div>\r\n\r\n                <div className=\"space-y-2 text-[12px\">\r\n                  {/* FAQ 1 - tailored to leads */}\r\n                  <details\r\n                    className=\"group relative rounded-xl border border-slate-100 p-4 pr-5 transition-colors\"\r\n                    open\r\n                  >\r\n                    <summary className=\"list-none cursor-pointer flex items-center justify-between\">\r\n                      <span className=\"text-[12px] leading-5 font-normal text-[#171A1F]\">\r\n                        How do I add a new lead quickly?\r\n                      </span>\r\n                      <svg\r\n                        className=\"w-4 h-4 text-slate-400 transition-transform group-open:rotate-180 group-open:text-gray-600 shrink-0 overflow-visible\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        fill=\"none\"\r\n                        stroke=\"currentColor\"\r\n                        strokeWidth=\"2\"\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                      >\r\n                        <path d=\"m6 9 6 6 6-6\" />\r\n                      </svg>\r\n                    </summary>\r\n                    <p className=\"mt-2 pl-3 md:pl-4 text-[10px] leading-4 text-gray-600 border-l-2 border-gray-300\">\r\n                      Use the Add Lead button, fill name, phone, requirement and\r\n                      region. You can edit details later in Lead Details.\r\n                    </p>\r\n                  </details>\r\n\r\n                  {/* FAQ 2 */}\r\n                  <details className=\"group relative rounded-xl border border-slate-100 p-4 pr-5 transition-colors\">\r\n                    <summary className=\"list-none cursor-pointer flex items-center justify-between\">\r\n                      <span className=\"text-[12px] leading-5 font-normal text-[#171A1F]\">\r\n                        How do I change a lead status?\r\n                      </span>\r\n                      <svg\r\n                        className=\"w-4 h-4 text-slate-400 transition-transform group-open:rotate-180 group-open:text-gray-600 shrink-0 overflow-visible\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        fill=\"none\"\r\n                        stroke=\"currentColor\"\r\n                        strokeWidth=\"2\"\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                      >\r\n                        <path d=\"m6 9 6 6 6-6\" />\r\n                      </svg>\r\n                    </summary>\r\n                    <p className=\"mt-2 pl-3 md:pl-4 text-[10px] leading-4 text-slate-600 border-l-2 border-gray-300\">\r\n                      Open a lead, click Edit Status in the drawer header, pick\r\n                      the status and save.\r\n                    </p>\r\n                  </details>\r\n\r\n                  {/* FAQ 3 */}\r\n                  <details className=\"group relative rounded-xl border border-slate-100 p-4 pr-5 transition-colors\">\r\n                    <summary className=\"list-none cursor-pointer flex items-center justify-between\">\r\n                      <span className=\"text-[12px] leading-5 font-normal text-[#171A1F]\">\r\n                        How do I share a lead with another broker?\r\n                      </span>\r\n                      <svg\r\n                        className=\"w-4 h-4 text-slate-400 transition-transform group-open:rotate-180 group-open:text-gray-600 shrink-0 overflow-visible\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        fill=\"none\"\r\n                        stroke=\"currentColor\"\r\n                        strokeWidth=\"2\"\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                      >\r\n                        <path d=\"m6 9 6 6 6-6\" />\r\n                      </svg>\r\n                    </summary>\r\n                    <p className=\"mt-2 pl-3 md:pl-4 text-[10px] leading-4 text-slate-600 border-l-2 border-gray-300\">\r\n                      Use Share/Transfer, choose brokers, add notes and confirm.\r\n                      The transfer history appears in Lead Details.\r\n                    </p>\r\n                  </details>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Help & Support */}\r\n              <div className=\"bg-white  p-4 rounded-[10px] border border-[#DEE1E6] shadow-[0_0_1px_#171a1f12,0_0_2px_#171a1f1F]\">\r\n                <div className=\"p-4\">\r\n                  <h4 className=\"mb-3 flex items-center gap-2 text-[14px] leading-6 font-semibold text-[#171A1F]\">\r\n                    {/* Headset */}\r\n                    <svg\r\n                      className=\"w-4 h-4 text-green-950 shrink-0 overflow-visible\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      fill=\"none\"\r\n                      stroke=\"currentColor\"\r\n                      strokeWidth=\"2.3\"\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      aria-hidden=\"true\"\r\n                    >\r\n                      <path d=\"M4 11a8 8 0 0 1 16 0\" />\r\n                      <rect x=\"2.6\" y=\"11\" width=\"4.8\" height=\"6\" rx=\"2.2\" />\r\n                      <path d=\"M20 16.5a4 4 0 0 1-4 4H12\" />\r\n                    </svg>\r\n                    Help & Support\r\n                  </h4>\r\n\r\n                  {/* Links */}\r\n                  <ul className=\"text-[12px] font-normal text-[#171A1F] space-y-1\">\r\n                    <li>\r\n                      <a\r\n                        href=\"/help/getting-started\"\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                        className=\"py-2 flex items-center gap-3 pl-0.5 \"\r\n                      >\r\n                        {/* Doc */}\r\n                        <svg\r\n                          className=\"w-4 h-4 text-green-950 shrink-0 overflow-visible\"\r\n                          viewBox=\"0 0 24 24\"\r\n                          fill=\"none\"\r\n                          stroke=\"currentColor\"\r\n                          strokeWidth=\"2\"\r\n                          strokeLinecap=\"round\"\r\n                          strokeLinejoin=\"round\"\r\n                        >\r\n                          <path d=\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\" />\r\n                          <path d=\"M14 2v6h6\" />\r\n                        </svg>\r\n                        Getting Started Guide\r\n                      </a>\r\n                    </li>\r\n                    <li>\r\n                      <a\r\n                        href=\"/help/documentation\"\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                        className=\"py-2 flex items-center gap-3 pl-0.5 \"\r\n                      >\r\n                        {/* Docs list */}\r\n                        <svg\r\n                          className=\"w-4 h-4 text-green-950 shrink-0 overflow-visible\"\r\n                          viewBox=\"0 0 24 24\"\r\n                          fill=\"none\"\r\n                          stroke=\"currentColor\"\r\n                          strokeWidth=\"2\"\r\n                          strokeLinecap=\"round\"\r\n                          strokeLinejoin=\"round\"\r\n                        >\r\n                          <rect x=\"3\" y=\"4\" width=\"18\" height=\"16\" rx=\"2\" />\r\n                          <path d=\"M7 8h10M7 12h10M7 16h6\" />\r\n                        </svg>\r\n                        Documentation\r\n                      </a>\r\n                    </li>\r\n                    <li>\r\n                      <a\r\n                        href=\"/help/legal-compliance\"\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                        className=\"py-2 flex items-center gap-3 pl-0.5 \"\r\n                      >\r\n                        {/* Docs list */}\r\n                        <svg\r\n                          className=\"w-4 h-4 text-green-950 shrink-0 overflow-visible\"\r\n                          viewBox=\"0 0 24 24\"\r\n                          fill=\"none\"\r\n                          stroke=\"currentColor\"\r\n                          strokeWidth=\"2\"\r\n                          strokeLinecap=\"round\"\r\n                          strokeLinejoin=\"round\"\r\n                        >\r\n                          <rect x=\"3\" y=\"4\" width=\"18\" height=\"16\" rx=\"2\" />\r\n                          <path d=\"M7 8h10M7 12h10M7 16h6\" />\r\n                        </svg>\r\n                        Legal & Compliance Guide\r\n                      </a>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n\r\n                {/* Divider like screenshot */}\r\n                {/* <div className=\"h-px bg-slate-100 mx-4\" /> */}\r\n\r\n                {/* Contact */}\r\n                <div className=\"px-4 py-3 text-[12px] font-normal leading-6 text-[#171A1F] space-y-2\">\r\n                  <div className=\"flex items-center gap-3 pl-0.5\">\r\n                    {/* Mail */}\r\n                    <svg\r\n                      className=\"w-4 h-4 text-green-950 shrink-0 overflow-visible\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      fill=\"none\"\r\n                      stroke=\"currentColor\"\r\n                      strokeWidth=\"2\"\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                    >\r\n                      <rect x=\"3\" y=\"5\" width=\"18\" height=\"14\" rx=\"2\" />\r\n                      <path d=\"M22 7 12 13 2 7\" />\r\n                    </svg>\r\n                    <a href={`mailto:${SUPPORT_EMAIL}`}>{SUPPORT_EMAIL}</a>\r\n                  </div>\r\n                  <div className=\"flex items-center gap-3 pl-0.5\">\r\n                    {/* Phone (handset) */}\r\n                    <svg\r\n                      className=\"w-4 h-4 text-green-950 shrink-0 overflow-visible\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      fill=\"none\"\r\n                      stroke=\"currentColor\"\r\n                      strokeWidth=\"2\"\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                    >\r\n                      <path d=\"M22 16.92V21a2 2 0 0 1-2.18 2A19.8 19.8 0 0 1 3 6.18 2 2 0 0 1 5 4h3.3a1 1 0 0 1 .95.68l1.2 3.6a1 1 0 0 1-.27 1.06l-1.8 1.8a12 12 0 0 0 6.8 6.8l1.8-1.8a1 1 0 0 1 1.06-.27l3.6 1.2A1 1 0 0 1 22 16.92z\" />\r\n                    </svg>\r\n                    <a href={`tel:${SUPPORT_PHONE.replace(/\\s+/g, \"\")}`}>\r\n                      {\" \"}\r\n                      {SUPPORT_PHONE}\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </aside>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Advanced Filters Modal */}\r\n        {showAdvanced && (\r\n          <div\r\n            className=\"fixed inset-0 z-[100] flex items-center justify-center\"\r\n            role=\"dialog\"\r\n            aria-modal=\"true\"\r\n          >\r\n            <div\r\n              className=\"absolute inset-0 bg-black/60\"\r\n              onClick={() => setShowAdvanced(false)}\r\n            />\r\n            <div className=\"relative w-full max-w-xl mx-4 bg-white rounded-2xl shadow-xl\">\r\n              <div className=\"flex items-center justify-between px-6 py-4 border-b border-gray-100\">\r\n                <h4 className=\"text-lg font-semibold text-slate-900\">\r\n                  Advanced Filters\r\n                </h4>\r\n                <button\r\n                  onClick={() => setShowAdvanced(false)}\r\n                  className=\"p-2 rounded-lg hover:bg-gray-100\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <svg\r\n                    className=\"w-5 h-5 text-gray-500\"\r\n                    fill=\"none\"\r\n                    stroke=\"currentColor\"\r\n                    viewBox=\"0 0 24 24\"\r\n                  >\r\n                    <path\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      strokeWidth=\"2\"\r\n                      d=\"M6 18L18 6M6 6l12 12\"\r\n                    />\r\n                  </svg>\r\n                </button>\r\n              </div>\r\n\r\n              <div className=\"px-6 py-5 space-y-6 max-h-[70vh] overflow-auto\">\r\n                {/* Region */}\r\n                <div>\r\n                  <label className=\"block text-xs font-label text-gray-700 mb-2\">\r\n                    Region\r\n                  </label>\r\n                  {regionsLoading ? (\r\n                    <div className=\"flex items-center justify-center py-3 border border-gray-200 rounded-lg bg-gray-50\">\r\n                      <div className=\"flex items-center gap-2\">\r\n                        <svg\r\n                          className=\"w-4 h-4 animate-spin text-gray-500\"\r\n                          fill=\"none\"\r\n                          viewBox=\"0 0 24 24\"\r\n                        >\r\n                          <circle\r\n                            className=\"opacity-25\"\r\n                            cx=\"12\"\r\n                            cy=\"12\"\r\n                            r=\"10\"\r\n                            stroke=\"currentColor\"\r\n                            strokeWidth=\"4\"\r\n                          ></circle>\r\n                          <path\r\n                            className=\"opacity-75\"\r\n                            fill=\"currentColor\"\r\n                            d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\r\n                          ></path>\r\n                        </svg>\r\n                        <span className=\"text-sm text-gray-500\">\r\n                          Loading regions...\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  ) : regionsError ? (\r\n                    <div className=\"bg-rose-50 border border-rose-200 rounded-lg p-3 text-sm text-rose-700\">\r\n                      {regionsError}\r\n                    </div>\r\n                  ) : (\r\n                    <Select\r\n                      value={filters.region}\r\n                      onChange={(opt) =>\r\n                        setFilters({ ...filters, region: opt })\r\n                      }\r\n                      options={regionOptions}\r\n                      styles={{\r\n                        ...customSelectStyles,\r\n                        menuPortal: (base) => ({ ...base, zIndex: 99999 }),\r\n                        menu: (base) => ({ ...base, zIndex: 99999 }),\r\n                      }}\r\n                      menuPortalTarget={\r\n                        typeof window !== \"undefined\" ? document.body : null\r\n                      }\r\n                      menuPosition=\"fixed\"\r\n                      isSearchable\r\n                    />\r\n                  )}\r\n                </div>\r\n                {/* Requirement */}\r\n                <div>\r\n                  <label className=\"block text-xs font-label text-gray-700 mb-2\">\r\n                    Requirement\r\n                  </label>\r\n                  <Select\r\n                    value={filters.requirement}\r\n                    onChange={(opt) =>\r\n                      setFilters({ ...filters, requirement: opt })\r\n                    }\r\n                    options={requirementOptions}\r\n                    styles={{\r\n                      ...customSelectStyles,\r\n                      menuPortal: (base) => ({ ...base, zIndex: 99999 }),\r\n                      menu: (base) => ({ ...base, zIndex: 99999 }),\r\n                    }}\r\n                    menuPortalTarget={\r\n                      typeof window !== \"undefined\" ? document.body : null\r\n                    }\r\n                    menuPosition=\"fixed\"\r\n                    isSearchable\r\n                  />{\" \"}\r\n                </div>\r\n\r\n                {/* Property Type */}\r\n                <div>\r\n                  <label className=\"block text-xs font-label text-gray-700 mb-2\">\r\n                    Property Type\r\n                  </label>\r\n                  <Select\r\n                    value={filters.propertyType}\r\n                    onChange={(opt) =>\r\n                      setFilters({ ...filters, propertyType: opt })\r\n                    }\r\n                    options={propertyTypeOptions}\r\n                    styles={{\r\n                      ...customSelectStyles,\r\n                      menuPortal: (base) => ({ ...base, zIndex: 99999 }),\r\n                      menu: (base) => ({ ...base, zIndex: 99999 }),\r\n                    }}\r\n                    menuPortalTarget={\r\n                      typeof window !== \"undefined\" ? document.body : null\r\n                    }\r\n                    menuPosition=\"fixed\"\r\n                    isSearchable\r\n                  />{\" \"}\r\n                </div>\r\n\r\n                {/* Max Budget */}\r\n                <div>\r\n                  <label className=\"block text-xs font-label text-gray-700 mb-4\">\r\n                    Max Budget:{\" \"}\r\n                    <span className=\"text-sky-700 font-semibold\">\r\n                      ${filters.budgetMax.toLocaleString()}\r\n                    </span>\r\n                  </label>\r\n                  <input\r\n                    type=\"range\"\r\n                    min=\"0\"\r\n                    max=\"1000000\"\r\n                    step=\"10000\"\r\n                    value={filters.budgetMax}\r\n                    onChange={(e) =>\r\n                      setFilters({\r\n                        ...filters,\r\n                        budgetMax: Number(e.target.value),\r\n                      })\r\n                    }\r\n                    className=\"w-full accent-sky-600\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"px-6 py-4 border-t border-gray-100 flex items-center justify-end gap-3\">\r\n                {isAdvancedFiltersApplied && (\r\n                  <button\r\n                    onClick={clearAdvancedFilters}\r\n                    disabled={applyingFilters}\r\n                    className=\"px-4 py-2.5 rounded-xl border border-gray-200 text-sm font-medium text-slate-700 bg-white hover:bg-slate-50 cursor-pointer disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                  >\r\n                    Clear Filters\r\n                  </button>\r\n                )}\r\n                <button\r\n                  onClick={async () => {\r\n                    setApplyingFilters(true);\r\n                    setPage(1);\r\n                    await loadLeads(filters, 1, limit, debouncedQuery);\r\n                    setApplyingFilters(false);\r\n                    setShowAdvanced(false);\r\n                  }}\r\n                  disabled={applyingFilters}\r\n                  className=\"px-3 py-2.5 rounded-xl text-sm font-semibold text-white bg-green-900 hover:bg-green-950 shadow-sm cursor-pointer disabled:opacity-60 disabled:cursor-not-allowed flex items-center gap-2\"\r\n                >\r\n                  {applyingFilters && (\r\n                    <svg\r\n                      className=\"w-4 h-4 animate-spin\"\r\n                      fill=\"none\"\r\n                      viewBox=\"0 0 24 24\"\r\n                    >\r\n                      <circle\r\n                        className=\"opacity-25\"\r\n                        cx=\"12\"\r\n                        cy=\"12\"\r\n                        r=\"10\"\r\n                        stroke=\"currentColor\"\r\n                        strokeWidth=\"4\"\r\n                      ></circle>\r\n                      <path\r\n                        className=\"opacity-75\"\r\n                        fill=\"currentColor\"\r\n                        d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\r\n                      ></path>\r\n                    </svg>\r\n                  )}\r\n                  {applyingFilters ? \"Applying...\" : \"Apply Filters\"}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Add Lead Modal */}\r\n        {showAddLead && (\r\n          <div\r\n            className=\"fixed inset-0 z-[100] flex items-center justify-center\"\r\n            role=\"dialog\"\r\n            aria-modal=\"true\"\r\n          >\r\n            <div\r\n              className=\"absolute inset-0 bg-black/60\"\r\n              onClick={() => {\r\n                setShowAddLead(false);\r\n                setValidationErrors({});\r\n              }}\r\n            />\r\n            <div className=\"relative w-full max-w-xl mx-4 bg-white rounded-2xl shadow-xl\">\r\n              <div className=\"flex items-center justify-between px-6 py-4 border-b border-gray-100\">\r\n                <h4 className=\"text-lg font-semibold text-slate-900\">\r\n                  Add New Lead\r\n                </h4>\r\n                <button\r\n                  onClick={() => {\r\n                    setShowAddLead(false);\r\n                    setValidationErrors({});\r\n                  }}\r\n                  className=\"p-2 rounded-lg hover:bg-gray-100\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <svg\r\n                    className=\"w-5 h-5 text-gray-500\"\r\n                    fill=\"none\"\r\n                    stroke=\"currentColor\"\r\n                    viewBox=\"0 0 24 24\"\r\n                  >\r\n                    <path\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      strokeWidth=\"2\"\r\n                      d=\"M6 18L18 6M6 6l12 12\"\r\n                    />\r\n                  </svg>\r\n                </button>\r\n              </div>\r\n\r\n              <div className=\"px-6 py-5 space-y-5 max-h-[70vh] overflow-auto\">\r\n                <div>\r\n                  <label className=\"block text-xs font-label text-gray-700 mb-1\">\r\n                    Customer Name\r\n                  </label>\r\n                  <input\r\n                    name=\"customerName\"\r\n                    value={newLead.customerName}\r\n                    onChange={handleNewLeadChange}\r\n                    type=\"text\"\r\n                    placeholder=\"Enter customer's full name\"\r\n                    className={`w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-4 text-sm bg-white ${\r\n                      validationErrors.customerName\r\n                        ? \"border-red-300 focus:ring-red-100 focus:border-red-500\"\r\n                        : \"border-gray-200 focus:ring-sky-100 focus:border-sky-600\"\r\n                    }`}\r\n                  />\r\n                  {validationErrors.customerName && (\r\n                    <p className=\"mt-1 text-xs text-red-600\">\r\n                      {validationErrors.customerName}\r\n                    </p>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                  <div>\r\n                    <label className=\"block text-xs font-label text-gray-700 mb-1\">\r\n                      Contact Phone\r\n                    </label>\r\n                    <input\r\n                      name=\"customerPhone\"\r\n                      value={newLead.customerPhone}\r\n                      onChange={handleNewLeadChange}\r\n                      type=\"tel\"\r\n                      placeholder=\"Enter 10-digit phone number\"\r\n                      maxLength=\"10\"\r\n                      className={`w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-4 text-sm bg-white ${\r\n                        validationErrors.customerPhone\r\n                          ? \"border-red-300 focus:ring-red-100 focus:border-red-500\"\r\n                          : \"border-gray-200 focus:ring-sky-100 focus:border-sky-600\"\r\n                      }`}\r\n                    />\r\n                    {validationErrors.customerPhone && (\r\n                      <p className=\"mt-1 text-xs text-red-600\">\r\n                        {validationErrors.customerPhone}\r\n                      </p>\r\n                    )}\r\n                  </div>\r\n                  <div>\r\n                    <label className=\"block text-xs font-label text-gray-700 mb-1\">\r\n                      Contact Email\r\n                    </label>\r\n                    <input\r\n                      name=\"customerEmail\"\r\n                      value={newLead.customerEmail}\r\n                      onChange={handleNewLeadChange}\r\n                      type=\"email\"\r\n                      placeholder=\"e.g., john.doe@example.com\"\r\n                      className={`w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-4 text-sm bg-white ${\r\n                        validationErrors.customerEmail\r\n                          ? \"border-red-300 focus:ring-red-100 focus:border-red-500\"\r\n                          : \"border-gray-200 focus:ring-sky-100 focus:border-sky-600\"\r\n                      }`}\r\n                    />\r\n                    {validationErrors.customerEmail && (\r\n                      <div className=\"mt-1\">\r\n                        <p className=\"text-xs text-red-600\">\r\n                          {validationErrors.customerEmail}\r\n                        </p>\r\n                        <p className=\"text-xs text-gray-500\">\r\n                          eg. john@example.com\r\n                        </p>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                  <div>\r\n                    <label className=\"block text-xs font-label text-gray-700 mb-1\">\r\n                      Requirement\r\n                    </label>\r\n                    <div className=\"flex flex-wrap gap-2\">\r\n                      {requirementOptions\r\n                        .filter((o) => o.value !== \"all\")\r\n                        .map((opt) => {\r\n                          const isSelected =\r\n                            (newLead.requirement &&\r\n                              (newLead.requirement.value ||\r\n                                newLead.requirement)) === opt.value;\r\n                          return (\r\n                            <button\r\n                              key={opt.value}\r\n                              type=\"button\"\r\n                              aria-pressed={isSelected}\r\n                              onClick={() =>\r\n                                setNewLead({ ...newLead, requirement: opt })\r\n                              }\r\n                              className={`px-3.5 py-1.5 rounded-full text-[12px] font-semibold border transition-colors transition-shadow duration-150 ${\r\n                                isSelected\r\n                                  ? \"bg-blue-50 text-blue-700 border-blue-200 ring-1 ring-blue-100 shadow-sm\"\r\n                                  : \"bg-white text-slate-700 border-gray-200 hover:border-gray-300 hover:bg-slate-50\"\r\n                              }`}\r\n                            >\r\n                              {opt.label}\r\n                            </button>\r\n                          );\r\n                        })}\r\n                    </div>\r\n                  </div>\r\n                  <div>\r\n                    <label className=\"block text-xs font-label text-gray-700 mb-1\">\r\n                      Property Type\r\n                    </label>\r\n                    <div className=\"flex flex-wrap gap-2\">\r\n                      {propertyTypeOptions\r\n                        .filter((o) => o.value !== \"all\")\r\n                        .map((opt) => {\r\n                          const isSelected =\r\n                            (newLead.propertyType &&\r\n                              (newLead.propertyType.value ||\r\n                                newLead.propertyType)) === opt.value;\r\n                          return (\r\n                            <button\r\n                              key={opt.value}\r\n                              type=\"button\"\r\n                              aria-pressed={isSelected}\r\n                              onClick={() =>\r\n                                setNewLead({ ...newLead, propertyType: opt })\r\n                              }\r\n                              className={`px-3.5 py-1.5 rounded-full text-[12px] font-semibold border transition-colors transition-shadow duration-150 ${\r\n                                isSelected\r\n                                  ? \"bg-blue-50 text-blue-700 border-blue-200 ring-1 ring-blue-100 shadow-sm\"\r\n                                  : \"bg-white text-slate-700 border-gray-200 hover:border-gray-300 hover:bg-slate-50\"\r\n                              }`}\r\n                            >\r\n                              {opt.label}\r\n                            </button>\r\n                          );\r\n                        })}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-xs font-label text-gray-700 mb-1\">\r\n                    Budget\r\n                  </label>\r\n                  {(() => {\r\n                    const pTypeRaw =\r\n                      typeof newLead.propertyType === \"object\"\r\n                        ? newLead.propertyType.value ||\r\n                          newLead.propertyType.label ||\r\n                          \"\"\r\n                        : newLead.propertyType || \"\";\r\n                    const pType = String(pTypeRaw).toLowerCase();\r\n                    const presets = {\r\n                      residential: { min: 5000, max: 100000000, step: 5000 }, // 10 Cr\r\n                      commercial: { min: 10000, max: 500000000, step: 10000 }, // 50 Cr\r\n                      plot: { min: 50000, max: 250000000, step: 50000 }, // 25 Cr\r\n                      other: { min: 1000, max: 50000000, step: 1000 }, // 5 Cr\r\n                    };\r\n                    const preset = presets[pType] || {\r\n                      min: 0,\r\n                      max: 10000000,\r\n                      step: 5000,\r\n                    };\r\n                    const budgetMin = preset.min;\r\n                    const budgetMax = preset.max;\r\n                    const budgetStep = preset.step;\r\n                    const raw = Number(newLead.budget || 0);\r\n                    const value = isNaN(raw)\r\n                      ? budgetMin\r\n                      : Math.min(budgetMax, Math.max(budgetMin, raw));\r\n                    const pct =\r\n                      ((value - budgetMin) / (budgetMax - budgetMin)) * 100;\r\n                    const fillPct = value > budgetMin ? Math.max(2, pct) : 0;\r\n                    return (\r\n                      <div className=\"space-y-2\">\r\n                        <div className=\"relative\">\r\n                          <input\r\n                            type=\"range\"\r\n                            min={budgetMin}\r\n                            max={budgetMax}\r\n                            step={budgetStep}\r\n                            value={value}\r\n                            onChange={(e) =>\r\n                              setNewLead({\r\n                                ...newLead,\r\n                                budget: Number(e.target.value),\r\n                              })\r\n                            }\r\n                            className=\"w-full h-2 rounded-full appearance-none focus:outline-none\"\r\n                            style={{\r\n                              background: `linear-gradient(to right, #2563eb 0%, #2563eb ${fillPct}%, #e5e7eb ${fillPct}%, #e5e7eb 100%)`,\r\n                            }}\r\n                          />\r\n                          <div className=\"absolute -top-6 right-0 flex items-center border border-blue-200 rounded-full bg-blue-50 px-2 py-0.5\">\r\n                            <span className=\"text-[11px] font-semibold text-blue-600 mr-1\">\r\n                              ₹\r\n                            </span>\r\n                            <input\r\n                              type=\"text\"\r\n                              inputMode=\"numeric\"\r\n                              value={String(value)}\r\n                              onChange={(e) => {\r\n                                const n = Number(\r\n                                  (e.target.value || \"\").replace(/[^0-9]/g, \"\")\r\n                                );\r\n                                const clamped = isNaN(n)\r\n                                  ? 0\r\n                                  : Math.min(budgetMax, Math.max(budgetMin, n));\r\n                                setNewLead({ ...newLead, budget: clamped });\r\n                              }}\r\n                              className=\"w-[2ch] text-[11px] font-semibold text-blue-700 bg-transparent text-right focus:outline-none font-mono tabular-nums\"\r\n                              style={{\r\n                                width: `calc(${Math.max(\r\n                                  3,\r\n                                  String(value).length\r\n                                )}ch + 0.15rem)`, // dynamic width\r\n                              }}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                        {/* removed below-slider controls per request */}\r\n                      </div>\r\n                    );\r\n                  })()}\r\n                </div>\r\n\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                  <div>\r\n                    <label className=\"block text-xs font-label text-gray-700 mb-1\">\r\n                      Primary Region *\r\n                    </label>\r\n                    <Select\r\n                      value={newLead.primaryRegion}\r\n                      onChange={(opt) =>\r\n                        setNewLead({ ...newLead, primaryRegion: opt })\r\n                      }\r\n                      options={regionOptions}\r\n                      styles={modalSelectStyles}\r\n                      isSearchable\r\n                      isLoading={nearestRegionsLoading}\r\n                      menuPortalTarget={\r\n                        typeof window !== \"undefined\" ? document.body : null\r\n                      }\r\n                      menuPosition=\"fixed\"\r\n                      menuPlacement=\"auto\"\r\n                    />{\" \"}\r\n                  </div>\r\n                  <div>\r\n                    <label className=\"block text-xs font-label text-gray-700 mb-1\">\r\n                      Optional Region\r\n                    </label>\r\n                    <Select\r\n                      value={newLead.secondaryRegion}\r\n                      onChange={(opt) =>\r\n                        setNewLead({ ...newLead, secondaryRegion: opt })\r\n                      }\r\n                      options={regionOptions}\r\n                      styles={modalSelectStyles}\r\n                      isSearchable\r\n                      isLoading={nearestRegionsLoading}\r\n                      menuPortalTarget={\r\n                        typeof window !== \"undefined\" ? document.body : null\r\n                      }\r\n                      menuPosition=\"fixed\"\r\n                      menuPlacement=\"auto\"\r\n                    />{\" \"}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"px-6 py-4 border-t border-gray-100 flex items-center justify-end gap-3\">\r\n                <button\r\n                  onClick={() => {\r\n                    setShowAddLead(false);\r\n                    setValidationErrors({});\r\n                  }}\r\n                  disabled={addLeadLoading}\r\n                  className=\"px-4 py-2 rounded-lg border border-gray-200 text-sm font-medium text-slate-700 bg-white hover:bg-slate-50 cursor-pointer disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  onClick={handleAddLeadSubmit}\r\n                  disabled={addLeadLoading}\r\n                  className=\"px-4 py-2 rounded-lg text-sm font-semibold text-white bg-green-900 hover:bg-green-950 cursor-pointer disabled:opacity-60 disabled:cursor-not-allowed flex items-center gap-2\"\r\n                >\r\n                  {addLeadLoading && (\r\n                    <svg\r\n                      className=\"w-4 h-4 animate-spin\"\r\n                      fill=\"none\"\r\n                      viewBox=\"0 0 24 24\"\r\n                    >\r\n                      <circle\r\n                        className=\"opacity-25\"\r\n                        cx=\"12\"\r\n                        cy=\"12\"\r\n                        r=\"10\"\r\n                        stroke=\"currentColor\"\r\n                        strokeWidth=\"4\"\r\n                      ></circle>\r\n                      <path\r\n                        className=\"opacity-75\"\r\n                        fill=\"currentColor\"\r\n                        d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\r\n                      ></path>\r\n                    </svg>\r\n                  )}\r\n                  {addLeadLoading ? \"Adding Lead...\" : \"Add Lead\"}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Transfer Modal */}\r\n        {showTransfer && (\r\n          <div className=\"fixed inset-0 z-50 flex items-center justify-center\">\r\n            <div\r\n              className=\"absolute inset-0 bg-black/60\"\r\n              onClick={() => setShowTransfer(false)}\r\n            />\r\n            <div className=\"relative w-full max-w-md mx-4 bg-white rounded-2xl shadow-xl\">\r\n              <div className=\"flex items-center justify-between px-6 py-4 border-b border-gray-100\">\r\n                <h4 className=\"text-lg font-semibold text-slate-900\">\r\n                  Share Lead\r\n                </h4>\r\n                <button\r\n                  onClick={() => setShowTransfer(false)}\r\n                  className=\"p-2 rounded-lg hover:bg-gray-100\"\r\n                >\r\n                  <svg\r\n                    className=\"w-5 h-5 text-gray-500 cursor-pointer\"\r\n                    fill=\"none\"\r\n                    stroke=\"currentColor\"\r\n                    viewBox=\"0 0 24 24\"\r\n                  >\r\n                    <path\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      strokeWidth=\"2\"\r\n                      d=\"M6 18L18 6M6 6l12 12\"\r\n                    />\r\n                  </svg>\r\n                </button>\r\n              </div>\r\n              <div className=\"px-6 py-5 space-y-5\">\r\n                {/* Share mode toggles (radio) */}\r\n                <div className=\"space-y-3\">\r\n                  <label className=\"inline-flex items-center gap-2 cursor-pointer select-none\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      name=\"transferMode\"\r\n                      className=\"h-4 w-4 accent-blue-600 cursor-pointer\"\r\n                      checked={transferMode === \"all\"}\r\n                      onChange={() => setTransferMode(\"all\")}\r\n                    />\r\n                    <span className=\"text-sm  text-slate-800\">\r\n                      Share with all brokers\r\n                    </span>\r\n                  </label>\r\n                  <div className=\"flex items-center gap-3\">\r\n                    <label className=\"inline-flex items-center gap-2 cursor-pointer select-none\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"transferMode\"\r\n                        className=\"h-4 w-4 accent-blue-600 cursor-pointer\"\r\n                        checked={transferMode === \"region\"}\r\n                        onChange={() => setTransferMode(\"region\")}\r\n                      />\r\n                      <span className=\"text-sm  text-slate-800\">\r\n                        Share with brokers of a region\r\n                      </span>\r\n                    </label>\r\n                  </div>\r\n                  <label className=\"inline-flex items-center gap-2 cursor-pointer select-none\">\r\n                    <input\r\n                      type=\"radio\"\r\n                      name=\"transferMode\"\r\n                      className=\"h-4 w-4 accent-blue-600 cursor-pointer\"\r\n                      checked={transferMode === \"select\"}\r\n                      onChange={() => setTransferMode(\"select\")}\r\n                    />\r\n                    <span className=\"text-sm  text-slate-800\">\r\n                      Share with selected brokers\r\n                    </span>\r\n                  </label>\r\n                </div>\r\n\r\n                {transferMode === \"region\" && (\r\n                  <div>\r\n                    <label className=\"block text-xs font-label text-gray-700 mb-1\">\r\n                      Select Region\r\n                    </label>\r\n                    <Select\r\n                      value={transferRegion}\r\n                      onChange={(opt) => setTransferRegion(opt)}\r\n                      options={regionOptions.filter((o) => o.value !== \"all\")}\r\n                      styles={customSelectStyles}\r\n                      isSearchable\r\n                      placeholder=\"Select region\"\r\n                    />\r\n                  </div>\r\n                )}\r\n\r\n                {transferMode === \"select\" && (\r\n                  <div>\r\n                    <label className=\"block text-xs font-label text-gray-700 mb-1\">\r\n                      Select Broker(s)\r\n                    </label>\r\n                    <Select\r\n                      value={transferForm.brokerIds\r\n                        .filter((id) =>\r\n                          (brokersList || []).some(\r\n                            (x) =>\r\n                              (x._id || x.id) === id &&\r\n                              (x._id || x.id) !== currentUserId\r\n                          )\r\n                        )\r\n                        .map((id) => {\r\n                          const b = (brokersList || []).find(\r\n                            (x) => (x._id || x.id) === id\r\n                          );\r\n                          let regionName = \"\";\r\n                          if (\r\n                            b?.region &&\r\n                            Array.isArray(b.region) &&\r\n                            b.region.length > 0\r\n                          ) {\r\n                            regionName = b.region[0].name || \"Unknown\";\r\n                          } else if (\r\n                            b?.region &&\r\n                            typeof b.region === \"object\" &&\r\n                            !Array.isArray(b.region)\r\n                          ) {\r\n                            regionName =\r\n                              b.region.name || b.region.region || \"Unknown\";\r\n                          } else if (typeof b?.region === \"string\") {\r\n                            regionName = b.region;\r\n                          }\r\n                          return {\r\n                            value: id,\r\n                            label: `${\r\n                              b?.name || b?.fullName || b?.email || id\r\n                            }${regionName ? ` (${regionName})` : \"\"}`,\r\n                          };\r\n                        })}\r\n                      onChange={(opts, meta) => {\r\n                        const selectedValues = (opts || []).map((o) => o.value);\r\n                        setTransferForm((prev) => ({\r\n                          ...prev,\r\n                          brokerIds: selectedValues,\r\n                        }));\r\n                      }}\r\n                      options={(brokersList || [])\r\n                        .filter(\r\n                          (b) =>\r\n                            (b._id || b.id) && (b._id || b.id) !== currentUserId\r\n                        )\r\n                        .map((b) => {\r\n                          let regionName = \"\";\r\n                          if (\r\n                            b.region &&\r\n                            Array.isArray(b.region) &&\r\n                            b.region.length > 0\r\n                          ) {\r\n                            regionName = b.region[0].name || \"Unknown\";\r\n                          } else if (\r\n                            b.region &&\r\n                            typeof b.region === \"object\" &&\r\n                            !Array.isArray(b.region)\r\n                          ) {\r\n                            regionName =\r\n                              b.region.name || b.region.region || \"Unknown\";\r\n                          } else if (typeof b.region === \"string\") {\r\n                            regionName = b.region;\r\n                          }\r\n                          return {\r\n                            value: b._id || b.id,\r\n                            label: `${\r\n                              b.name || b.fullName || b.email || \"Unnamed\"\r\n                            }${regionName ? ` (${regionName})` : \"\"}`,\r\n                          };\r\n                        })}\r\n                      styles={customSelectStyles}\r\n                      components={{ MenuList: BrokerMenuList }}\r\n                      onInputChange={(inputValue, { action }) => {\r\n                        if (\r\n                          action === \"input-change\" &&\r\n                          transferForm.selectAllFiltered\r\n                        ) {\r\n                          // Defer actual selection to MenuList header using props.children\r\n                        }\r\n                        setTransferFilter(inputValue || \"\");\r\n                        return inputValue;\r\n                      }}\r\n                      isMulti\r\n                      isSearchable\r\n                      closeMenuOnSelect={false}\r\n                      hideSelectedOptions\r\n                      placeholder={\r\n                        brokersLoading\r\n                          ? \"Loading brokers...\"\r\n                          : brokersError\r\n                          ? brokersError\r\n                          : \"Choose brokers...\"\r\n                      }\r\n                      isLoading={brokersLoading}\r\n                    />\r\n                  </div>\r\n                )}\r\n                <div>\r\n                  <label className=\"block text-xs font-label text-gray-700 mb-1\">\r\n                    Share Notes (Optional)\r\n                  </label>\r\n                  <textarea\r\n                    rows={3}\r\n                    value={transferForm.notes}\r\n                    onChange={(e) =>\r\n                      setTransferForm({\r\n                        ...transferForm,\r\n                        notes: e.target.value,\r\n                      })\r\n                    }\r\n                    placeholder=\"Add any specific instructions or context...\"\r\n                    className=\"w-full px-3 py-2 border border-gray-200 rounded-lg focus:outline-none focus:ring-4 focus:ring-sky-100 focus:border-sky-600 text-sm bg-white\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"px-6 py-4 border-t border-gray-100 flex items-center justify-end gap-3\">\r\n                <button\r\n                  onClick={() => setShowTransfer(false)}\r\n                  className=\"px-4 py-2 rounded-lg border border-gray-200 text-sm font-medium text-slate-700 bg-white hover:bg-slate-50 cursor-pointer\"\r\n                  disabled={transferLoading}\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  onClick={submitTransfer}\r\n                  className=\"px-4 py-2 rounded-lg text-sm font-semibold text-white bg-green-900 hover:bg-green-950 cursor-pointer disabled:opacity-60 flex items-center gap-2\"\r\n                  disabled={transferLoading}\r\n                >\r\n                  {transferLoading && (\r\n                    <svg\r\n                      className=\"w-4 h-4 animate-spin\"\r\n                      fill=\"none\"\r\n                      viewBox=\"0 0 24 24\"\r\n                    >\r\n                      <circle\r\n                        className=\"opacity-25\"\r\n                        cx=\"12\"\r\n                        cy=\"12\"\r\n                        r=\"10\"\r\n                        stroke=\"currentColor\"\r\n                        strokeWidth=\"4\"\r\n                      ></circle>\r\n                      <path\r\n                        className=\"opacity-75\"\r\n                        fill=\"currentColor\"\r\n                        d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\r\n                      ></path>\r\n                    </svg>\r\n                  )}\r\n                  {transferLoading ? \"Sending...\" : \"Share with broker\"}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* View Drawer */}\r\n        {showView && selectedLead && (\r\n          <div\r\n            className={`fixed inset-0 z-50 ${\r\n              viewClosing ? \"pointer-events-none\" : \"\"\r\n            }`}\r\n          >\r\n            {/* Backdrop */}\r\n            <div\r\n              className=\"absolute inset-0 bg-black/50\"\r\n              onClick={() => {\r\n                setViewClosing(true);\r\n                setTimeout(() => setShowView(false), 200);\r\n              }}\r\n            />\r\n            {/* Panel */}\r\n            <div\r\n              className={`absolute right-0 top-0 h-full w-full max-w-md bg-slate-50 shadow-2xl ${\r\n                viewClosing ? \"animate-slide-out\" : \"animate-slide-in\"\r\n              }`}\r\n            >\r\n              {/* Header Bar */}\r\n              <div className=\"flex items-center justify-between px-5 py-4 border-b border-gray-200 bg-white\">\r\n                <h4 className=\"text-[18px] font-semibold text-slate-900 flex items-center gap-2\">\r\n                  <svg\r\n                    className=\"w-5 h-5 text-sky-600\"\r\n                    fill=\"none\"\r\n                    stroke=\"currentColor\"\r\n                    viewBox=\"0 0 24 24\"\r\n                  >\r\n                    <path\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      strokeWidth=\"2\"\r\n                      d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"\r\n                    />\r\n                  </svg>\r\n                  Lead Details\r\n                </h4>\r\n                <button\r\n                  onClick={() => {\r\n                    setViewClosing(true);\r\n                    setTimeout(() => setShowView(false), 200);\r\n                  }}\r\n                  className=\"p-2 rounded hover:bg-gray-100\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <svg\r\n                    className=\"w-5 h-5 text-gray-500\"\r\n                    fill=\"none\"\r\n                    stroke=\"currentColor\"\r\n                    viewBox=\"0 0 24 24\"\r\n                  >\r\n                    <path\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      strokeWidth=\"2\"\r\n                      d=\"M6 18L18 6M6 6l12 12\"\r\n                    />\r\n                  </svg>\r\n                </button>\r\n              </div>\r\n\r\n              {/* Scroll Area */}\r\n              <div className=\"h-[calc(100%-56px)] overflow-y-auto no-scrollbar p-5\">\r\n                {/* Profile Header */}\r\n                <div className=\"bg-white rounded-2xl border border-gray-200 shadow-sm p-4\">\r\n                  <div className=\"flex items-center gap-3\">\r\n                    <div className=\"w-12 h-12 rounded-full overflow-hidden ring-2 ring-white bg-sky-100 text-sky-700 flex items-center justify-center text-sm font-semibold\">\r\n                      {getInitials(\r\n                        selectedLead.name || selectedLead.customerName || \"?\"\r\n                      )}\r\n                    </div>\r\n                    <div className=\"min-w-0\">\r\n                      <div className=\"text-[16px] font-semibold text-slate-900 truncate\">\r\n                        {selectedLead.name || selectedLead.customerName || \"—\"}\r\n                      </div>\r\n                      <div className=\"text-[12px] text-slate-500 mt-0.5\">\r\n                        {selectedLead.contact ||\r\n                          selectedLead.customerPhone ||\r\n                          \"—\"}\r\n                      </div>\r\n                    </div>\r\n                    <span\r\n                      className={`ml-auto inline-flex items-center px-2 py-0.5 rounded-full text-[11px] font-semibold ${getStatusBadgeClasses(\r\n                        selectedLead.status || \"Closed\"\r\n                      )}`}\r\n                    >\r\n                      {selectedLead.status || \"Closed\"}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Tabs */}\r\n                <div className=\"mt-4 bg-white rounded-2xl border border-gray-200 shadow-sm\">\r\n                  <div className=\"flex items-center gap-1 px-3 pt-3\">\r\n                    {(() => {\r\n                      const TabButton = ({ active, children, onClick }) => (\r\n                        <button\r\n                          onClick={onClick}\r\n                          className={`px-3 py-1.5 rounded-lg text-sm font-semibold ${\r\n                            active\r\n                              ? \"bg-slate-900 text-white\"\r\n                              : \"text-slate-600 hover:bg-slate-100\"\r\n                          }`}\r\n                        >\r\n                          {children}\r\n                        </button>\r\n                      );\r\n                      return (\r\n                        <div className=\"flex gap-2\">\r\n                          <TabButton\r\n                            active={viewTab === \"overview\"}\r\n                            onClick={() => setViewTab(\"overview\")}\r\n                          >\r\n                            Overview\r\n                          </TabButton>\r\n                          <TabButton\r\n                            active={viewTab === \"share\"}\r\n                            onClick={() => setViewTab(\"share\")}\r\n                          >\r\n                            Share\r\n                          </TabButton>\r\n                          {/* Removed Notes tab as requested */}\r\n                        </div>\r\n                      );\r\n                    })()}\r\n                  </div>\r\n\r\n                  {/* Tab Panels */}\r\n                  <div className=\"p-4\">\r\n                    {/* OVERVIEW */}\r\n                    {(!viewTab || viewTab === \"overview\") && (\r\n                      <div className=\"space-y-4\">\r\n                        {/* Contact Details */}\r\n                        <div className=\"rounded-xl border border-gray-200 bg-white p-4\">\r\n                          <div className=\"flex items-center justify-between mb-3\">\r\n                            <h5 className=\"text-[15px] font-semibold text-slate-900 flex items-center gap-2\">\r\n                              <svg\r\n                                className=\"w-4 h-4 text-sky-600\"\r\n                                fill=\"none\"\r\n                                stroke=\"currentColor\"\r\n                                viewBox=\"0 0 24 24\"\r\n                              >\r\n                                <path\r\n                                  strokeLinecap=\"round\"\r\n                                  strokeLinejoin=\"round\"\r\n                                  strokeWidth=\"2\"\r\n                                  d=\"M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z\"\r\n                                />\r\n                              </svg>\r\n                              Contact Details\r\n                            </h5>\r\n                          </div>\r\n                          <div className=\"space-y-3 text-[14px]\">\r\n                            {(() => {\r\n                              const isOwner = !!(\r\n                                (selectedLead?.createdBy &&\r\n                                  (selectedLead.createdBy._id ||\r\n                                    selectedLead.createdBy.id) ===\r\n                                    currentUserId) ||\r\n                                (selectedLead?.brokerId &&\r\n                                  String(selectedLead.brokerId) ===\r\n                                    String(currentUserId))\r\n                              );\r\n                              return null;\r\n                            })()}\r\n                            <div className=\"flex items-center gap-2 text-slate-700\">\r\n                              <span className=\"w-5 h-5 inline-flex items-center justify-center rounded bg-sky-50\">\r\n                                <svg\r\n                                  className=\"w-3.5 h-3.5 text-gray-500\"\r\n                                  viewBox=\"0 0 24 24\"\r\n                                  fill=\"none\"\r\n                                  stroke=\"currentColor\"\r\n                                >\r\n                                  <path\r\n                                    strokeLinecap=\"round\"\r\n                                    strokeLinejoin=\"round\"\r\n                                    strokeWidth=\"2\"\r\n                                    d=\"M3 5h6l2 5-2 1a10 10 0 005 5l1-2 5 2v6a2 2 0 01-2 2A16 16 0 013 7z\"\r\n                                  />\r\n                                </svg>\r\n                              </span>\r\n                              {viewEditMode &&\r\n                              ((selectedLead?.createdBy &&\r\n                                (selectedLead.createdBy._id ||\r\n                                  selectedLead.createdBy.id) === brokerId) ||\r\n                                (selectedLead?.brokerId &&\r\n                                  String(selectedLead.brokerId) ===\r\n                                    String(brokerId))) ? (\r\n                                <input\r\n                                  type=\"tel\"\r\n                                  name=\"contact\"\r\n                                  value={\r\n                                    viewForm.contact ??\r\n                                    (selectedLead.contact ||\r\n                                      selectedLead.customerPhone ||\r\n                                      \"\")\r\n                                  }\r\n                                  onChange={handleViewFieldChange}\r\n                                  className=\"w-full px-3 py-2 bg-gray-50 border border-gray-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-sky-100 focus:border-sky-600 text-[14px]\"\r\n                                  placeholder=\"Phone number\"\r\n                                />\r\n                              ) : (\r\n                                selectedLead.contact ||\r\n                                selectedLead.customerPhone ||\r\n                                \"—\"\r\n                              )}\r\n                            </div>\r\n                            <div className=\"flex items-center gap-2 text-slate-700\">\r\n                              <span className=\"w-5 h-5 inline-flex items-center justify-center rounded bg-sky-50\">\r\n                                <svg\r\n                                  className=\"w-3.5 h-3.5 text-gray-500\"\r\n                                  viewBox=\"0 0 24 24\"\r\n                                  fill=\"none\"\r\n                                  stroke=\"currentColor\"\r\n                                >\r\n                                  <path\r\n                                    strokeLinecap=\"round\"\r\n                                    strokeLinejoin=\"round\"\r\n                                    strokeWidth=\"2\"\r\n                                    d=\"M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\"\r\n                                  />\r\n                                </svg>\r\n                              </span>\r\n                              {viewEditMode &&\r\n                              ((selectedLead?.createdBy &&\r\n                                (selectedLead.createdBy._id ||\r\n                                  selectedLead.createdBy.id) === brokerId) ||\r\n                                (selectedLead?.brokerId &&\r\n                                  String(selectedLead.brokerId) ===\r\n                                    String(brokerId))) ? (\r\n                                <input\r\n                                  type=\"email\"\r\n                                  name=\"email\"\r\n                                  value={\r\n                                    viewForm.email ??\r\n                                    (selectedLead.customerEmail || \"\")\r\n                                  }\r\n                                  onChange={handleViewFieldChange}\r\n                                  className=\"w-full px-3 py-2 bg-gray-50 border border-gray-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-sky-100 focus:border-sky-600 text-[14px]\"\r\n                                  placeholder=\"Email address\"\r\n                                />\r\n                              ) : (\r\n                                selectedLead.customerEmail || \"—\"\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        {/* Property Preferences */}\r\n                        <div className=\"rounded-xl border border-gray-200 bg-white p-4\">\r\n                          <div className=\"flex items-center justify-between mb-3\">\r\n                            <h5 className=\"text-[15px] font-semibold text-slate-900 flex items-center gap-2\">\r\n                              <svg\r\n                                className=\"w-4 h-4 text-sky-600\"\r\n                                fill=\"none\"\r\n                                stroke=\"currentColor\"\r\n                                viewBox=\"0 0 24 24\"\r\n                              >\r\n                                <path\r\n                                  strokeLinecap=\"round\"\r\n                                  strokeLinejoin=\"round\"\r\n                                  strokeWidth=\"2\"\r\n                                  d=\"M7 8h10M7 12h7M5 20l2.5-2.5M19 20l-2.5-2.5\"\r\n                                />\r\n                              </svg>\r\n                              Property Preferences\r\n                            </h5>\r\n                          </div>\r\n                          <div className=\"space-y-3 text-[14px]\">\r\n                            <div className=\"flex items-center gap-2 text-slate-700\">\r\n                              <span className=\"w-5 h-5 inline-flex items-center justify-center rounded bg-sky-50\">\r\n                                <svg\r\n                                  className=\"w-3 h-3 text-slate-400\"\r\n                                  fill=\"none\"\r\n                                  stroke=\"currentColor\"\r\n                                  viewBox=\"0 0 24 24\"\r\n                                >\r\n                                  <path\r\n                                    strokeLinecap=\"round\"\r\n                                    strokeLinejoin=\"round\"\r\n                                    strokeWidth=\"2\"\r\n                                    d=\"M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2H5a2 2 0 00-2-2z\"\r\n                                  />\r\n                                  <path\r\n                                    strokeLinecap=\"round\"\r\n                                    strokeLinejoin=\"round\"\r\n                                    strokeWidth=\"2\"\r\n                                    d=\"M8 5a2 2 0 012-2h4a2 2 0 012 2v2H8V5z\"\r\n                                  />\r\n                                </svg>\r\n                              </span>\r\n                              <span className=\"text-slate-500 mr-1\">\r\n                                Property Type:\r\n                              </span>\r\n                              {viewEditMode &&\r\n                              ((selectedLead?.createdBy &&\r\n                                (selectedLead.createdBy._id ||\r\n                                  selectedLead.createdBy.id) === brokerId) ||\r\n                                (selectedLead?.brokerId &&\r\n                                  String(selectedLead.brokerId) ===\r\n                                    String(brokerId))) ? (\r\n                                <Select\r\n                                  name=\"propertyType\"\r\n                                  options={(() => {\r\n                                    const base = propertyTypeOptions.filter(\r\n                                      (o) => o.value !== \"all\"\r\n                                    );\r\n                                    const v =\r\n                                      viewForm.propertyType ??\r\n                                      selectedLead.propertyType ??\r\n                                      \"\";\r\n                                    return base.some((o) => o.value === v)\r\n                                      ? base\r\n                                      : [...base, { value: v, label: v }];\r\n                                  })()}\r\n                                  value={(() => {\r\n                                    const v =\r\n                                      viewForm.propertyType ??\r\n                                      selectedLead.propertyType ??\r\n                                      \"\";\r\n                                    const opts = (() => {\r\n                                      const base = propertyTypeOptions.filter(\r\n                                        (o) => o.value !== \"all\"\r\n                                      );\r\n                                      return base.some((o) => o.value === v)\r\n                                        ? base\r\n                                        : [...base, { value: v, label: v }];\r\n                                    })();\r\n                                    return (\r\n                                      opts.find((o) => o.value === v) || null\r\n                                    );\r\n                                  })()}\r\n                                  onChange={(opt) =>\r\n                                    setViewForm((prev) => ({\r\n                                      ...prev,\r\n                                      propertyType: opt?.value || \"\",\r\n                                    }))\r\n                                  }\r\n                                  classNamePrefix=\"react-select\"\r\n                                  styles={customSelectStyles}\r\n                                />\r\n                              ) : (\r\n                                <span className=\"text-slate-900\">\r\n                                  {selectedLead.propertyType || \"—\"}\r\n                                </span>\r\n                              )}\r\n                            </div>\r\n                            <div className=\"flex items-center gap-2 text-slate-700\">\r\n                              <span className=\"w-5 h-5 inline-flex items-center justify-center rounded bg-sky-50\">\r\n                                <svg\r\n                                  className=\"w-3 h-3 text-slate-400\"\r\n                                  fill=\"currentColor\"\r\n                                  viewBox=\"0 0 24 24\"\r\n                                >\r\n                                  <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1.41 16.09V20h-2.67v-1.93c-1.71-.36-3.16-1.46-3.27-3.4h1.96c.1 1.05.82 1.87 2.65 1.87 1.96 0 2.4-.98 2.4-1.59 0-.83-.44-1.61-2.67-2.14-2.48-.6-4.18-1.62-4.18-3.67 0-1.72 1.39-2.84 3.11-3.21V4h2.67v1.95c1.86.45 2.79 1.86 2.85 3.39H14.3c-.05-1.11-.64-1.87-2.22-1.87-1.5 0-2.4.68-2.4 1.64 0 .84.65 1.39 2.67 1.91s4.18 1.39 4.18 3.91c-.01 1.83-1.38 2.83-3.12 3.16z\" />\r\n                                </svg>\r\n                              </span>\r\n                              <span className=\"text-slate-500 mr-1\">\r\n                                Budget:\r\n                              </span>\r\n                              {viewEditMode &&\r\n                              ((selectedLead?.createdBy &&\r\n                                (selectedLead.createdBy._id ||\r\n                                  selectedLead.createdBy.id) === brokerId) ||\r\n                                (selectedLead?.brokerId &&\r\n                                  String(selectedLead.brokerId) ===\r\n                                    String(brokerId))) ? (\r\n                                <input\r\n                                  type=\"number\"\r\n                                  name=\"budget\"\r\n                                  value={\r\n                                    viewForm.budget ?? selectedLead.budget ?? \"\"\r\n                                  }\r\n                                  onChange={handleViewFieldChange}\r\n                                  className=\"flex-1 px-3 py-2 bg-gray-50 border border-gray-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-sky-100 focus:border-sky-600 text-[14px]\"\r\n                                  placeholder=\"Budget\"\r\n                                />\r\n                              ) : (\r\n                                <span className=\"text-slate-900\">\r\n                                  {typeof selectedLead.budget === \"number\"\r\n                                    ? `$${selectedLead.budget.toLocaleString()}`\r\n                                    : selectedLead.budget || \"—\"}\r\n                                </span>\r\n                              )}\r\n                            </div>\r\n                            <div className=\"flex items-center gap-2 text-slate-700\">\r\n                              <span className=\"w-5 h-5 inline-flex items-center justify-center rounded bg-sky-50\">\r\n                                <svg\r\n                                  className=\"w-3 h-3 text-slate-400\"\r\n                                  fill=\"none\"\r\n                                  stroke=\"currentColor\"\r\n                                  viewBox=\"0 0 24 24\"\r\n                                >\r\n                                  <path\r\n                                    strokeLinecap=\"round\"\r\n                                    strokeLinejoin=\"round\"\r\n                                    strokeWidth=\"2\"\r\n                                    d=\"M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\"\r\n                                  />\r\n                                </svg>\r\n                              </span>\r\n                              <span className=\"text-slate-500 mr-1\">\r\n                                Requirement:\r\n                              </span>\r\n                              {viewEditMode &&\r\n                              ((selectedLead?.createdBy &&\r\n                                (selectedLead.createdBy._id ||\r\n                                  selectedLead.createdBy.id) ===\r\n                                  currentUserId) ||\r\n                                (selectedLead?.brokerId &&\r\n                                  String(selectedLead.brokerId) ===\r\n                                    String(currentUserId))) ? (\r\n                                <Select\r\n                                  name=\"requirement\"\r\n                                  options={(() => {\r\n                                    const base = requirementOptions.filter(\r\n                                      (o) => o.value !== \"all\"\r\n                                    );\r\n                                    const v =\r\n                                      viewForm.requirement ??\r\n                                      selectedLead.requirement ??\r\n                                      selectedLead.req ??\r\n                                      \"\";\r\n                                    return base.some((o) => o.value === v)\r\n                                      ? base\r\n                                      : [...base, { value: v, label: v }];\r\n                                  })()}\r\n                                  value={(() => {\r\n                                    const v =\r\n                                      viewForm.requirement ??\r\n                                      selectedLead.requirement ??\r\n                                      selectedLead.req ??\r\n                                      \"\";\r\n                                    const opts = (() => {\r\n                                      const base = requirementOptions.filter(\r\n                                        (o) => o.value !== \"all\"\r\n                                      );\r\n                                      return base.some((o) => o.value === v)\r\n                                        ? base\r\n                                        : [...base, { value: v, label: v }];\r\n                                    })();\r\n                                    return (\r\n                                      opts.find((o) => o.value === v) || null\r\n                                    );\r\n                                  })()}\r\n                                  onChange={(opt) =>\r\n                                    setViewForm((prev) => ({\r\n                                      ...prev,\r\n                                      requirement: opt?.value || \"\",\r\n                                    }))\r\n                                  }\r\n                                  classNamePrefix=\"react-select\"\r\n                                  styles={customSelectStyles}\r\n                                />\r\n                              ) : (\r\n                                <span className=\"text-slate-900\">\r\n                                  {selectedLead.requirement ||\r\n                                    selectedLead.req ||\r\n                                    \"—\"}\r\n                                </span>\r\n                              )}\r\n                            </div>\r\n                            {/* Regions */}\r\n                            <div className=\"flex items-center gap-2 text-slate-700\">\r\n                              <span className=\"w-5 h-5 inline-flex items-center justify-center rounded bg-sky-50\">\r\n                                <svg\r\n                                  className=\"w-3 h-3 text-slate-400\"\r\n                                  fill=\"none\"\r\n                                  stroke=\"currentColor\"\r\n                                  viewBox=\"0 0 24 24\"\r\n                                >\r\n                                  <path\r\n                                    strokeLinecap=\"round\"\r\n                                    strokeLinejoin=\"round\"\r\n                                    strokeWidth=\"2\"\r\n                                    d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\"\r\n                                  />\r\n                                  <path\r\n                                    strokeLinecap=\"round\"\r\n                                    strokeLinejoin=\"round\"\r\n                                    strokeWidth=\"2\"\r\n                                    d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\"\r\n                                  />\r\n                                </svg>\r\n                              </span>\r\n                              <span className=\"text-slate-500 mr-1\">\r\n                                Primary Region:\r\n                              </span>\r\n                              {viewEditMode &&\r\n                              ((selectedLead?.createdBy &&\r\n                                (selectedLead.createdBy._id ||\r\n                                  selectedLead.createdBy.id) === brokerId) ||\r\n                                (selectedLead?.brokerId &&\r\n                                  String(selectedLead.brokerId) ===\r\n                                    String(brokerId))) ? (\r\n                                <Select\r\n                                  name=\"primaryRegion\"\r\n                                  options={regionOptions}\r\n                                  value={viewForm.primaryRegion || null}\r\n                                  onChange={(opt) =>\r\n                                    setViewForm((prev) => ({\r\n                                      ...prev,\r\n                                      primaryRegion: opt,\r\n                                    }))\r\n                                  }\r\n                                  classNamePrefix=\"react-select\"\r\n                                />\r\n                              ) : (\r\n                                <span className=\"text-slate-900\">\r\n                                  {getRegionName(\r\n                                    selectedLead?.primaryRegion ||\r\n                                      selectedLead?.region\r\n                                  ) || \"—\"}\r\n                                </span>\r\n                              )}\r\n                            </div>\r\n                            <div className=\"flex items-center gap-2 text-slate-700\">\r\n                              <span className=\"w-5 h-5 inline-flex items-center justify-center rounded bg-sky-50\">\r\n                                <svg\r\n                                  className=\"w-3 h-3 text-slate-400\"\r\n                                  fill=\"none\"\r\n                                  stroke=\"currentColor\"\r\n                                  viewBox=\"0 0 24 24\"\r\n                                >\r\n                                  <path\r\n                                    strokeLinecap=\"round\"\r\n                                    strokeLinejoin=\"round\"\r\n                                    strokeWidth=\"2\"\r\n                                    d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\"\r\n                                  />\r\n                                  <path\r\n                                    strokeLinecap=\"round\"\r\n                                    strokeLinejoin=\"round\"\r\n                                    strokeWidth=\"2\"\r\n                                    d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\"\r\n                                  />\r\n                                </svg>\r\n                              </span>\r\n                              <span className=\"text-slate-500 mr-1\">\r\n                                Secondary Region:\r\n                              </span>\r\n                              {viewEditMode &&\r\n                              ((selectedLead?.createdBy &&\r\n                                (selectedLead.createdBy._id ||\r\n                                  selectedLead.createdBy.id) === brokerId) ||\r\n                                (selectedLead?.brokerId &&\r\n                                  String(selectedLead.brokerId) ===\r\n                                    String(brokerId))) ? (\r\n                                <Select\r\n                                  name=\"secondaryRegion\"\r\n                                  options={regionOptions}\r\n                                  value={viewForm.secondaryRegion || null}\r\n                                  onChange={(opt) =>\r\n                                    setViewForm((prev) => ({\r\n                                      ...prev,\r\n                                      secondaryRegion: opt,\r\n                                    }))\r\n                                  }\r\n                                  classNamePrefix=\"react-select\"\r\n                                />\r\n                              ) : (\r\n                                <span className=\"text-slate-900\">\r\n                                  {getRegionName(\r\n                                    selectedLead?.secondaryRegion\r\n                                  ) || \"—\"}\r\n                                </span>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        {/* Lead Status + Actions */}\r\n                        <div className=\"rounded-xl border border-gray-200 bg-white p-4\">\r\n                          <div className=\"flex items-center justify-between\">\r\n                            <div>\r\n                              <div className=\"text-[13px] text-slate-500\">\r\n                                Status\r\n                              </div>\r\n                              <div className=\"mt-0.5\">\r\n                                {viewEditMode ? (\r\n                                  <Select\r\n                                    name=\"status\"\r\n                                    options={statusOptions.filter(\r\n                                      (o) => o.value !== \"all\"\r\n                                    )}\r\n                                    value={(() => {\r\n                                      const v =\r\n                                        viewForm.status ??\r\n                                        selectedLead.status ??\r\n                                        \"New\";\r\n                                      return (\r\n                                        statusOptions.find(\r\n                                          (o) => o.value === v\r\n                                        ) || null\r\n                                      );\r\n                                    })()}\r\n                                    onChange={(opt) =>\r\n                                      setViewForm((prev) => ({\r\n                                        ...prev,\r\n                                        status: opt?.value || \"New\",\r\n                                      }))\r\n                                    }\r\n                                    classNamePrefix=\"react-select\"\r\n                                    styles={customSelectStyles}\r\n                                  />\r\n                                ) : (\r\n                                  <span\r\n                                    className={`inline-flex items-center px-2 py-0.5 rounded-full text-[11px] font-semibold ${getStatusBadgeClasses(\r\n                                      selectedLead.status || \"Closed\"\r\n                                    )}`}\r\n                                  >\r\n                                    {selectedLead.status || \"Closed\"}\r\n                                  </span>\r\n                                )}\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"flex items-center gap-2\">\r\n                              {!viewEditMode ? (\r\n                                <button\r\n                                  onClick={() => {\r\n                                    // prefill edit form from selectedLead\r\n                                    const primaryId =\r\n                                      (selectedLead?.primaryRegion &&\r\n                                        (selectedLead.primaryRegion._id ||\r\n                                          selectedLead.primaryRegion.id ||\r\n                                          selectedLead.primaryRegion.value)) ||\r\n                                      selectedLead?.region ||\r\n                                      null;\r\n                                    const primaryLabel =\r\n                                      (selectedLead?.primaryRegion &&\r\n                                        (selectedLead.primaryRegion.name ||\r\n                                          selectedLead.primaryRegion.label)) ||\r\n                                      getRegionName(\r\n                                        selectedLead?.primaryRegion ||\r\n                                          selectedLead?.region\r\n                                      ) ||\r\n                                      \"\";\r\n                                    const secondaryId =\r\n                                      selectedLead?.secondaryRegion &&\r\n                                      (selectedLead.secondaryRegion._id ||\r\n                                        selectedLead.secondaryRegion.id ||\r\n                                        selectedLead.secondaryRegion.value);\r\n                                    const secondaryLabel =\r\n                                      selectedLead?.secondaryRegion &&\r\n                                      (selectedLead.secondaryRegion.name ||\r\n                                        selectedLead.secondaryRegion.label);\r\n                                    setViewForm({\r\n                                      name:\r\n                                        selectedLead.name ||\r\n                                        selectedLead.customerName ||\r\n                                        \"\",\r\n                                      contact:\r\n                                        selectedLead.contact ||\r\n                                        selectedLead.customerPhone ||\r\n                                        \"\",\r\n                                      email: selectedLead.customerEmail || \"\",\r\n                                      requirement:\r\n                                        selectedLead.requirement ||\r\n                                        selectedLead.req ||\r\n                                        \"\",\r\n                                      propertyType:\r\n                                        selectedLead.propertyType || \"\",\r\n                                      budget:\r\n                                        typeof selectedLead.budget === \"number\"\r\n                                          ? selectedLead.budget\r\n                                          : selectedLead.budget || \"\",\r\n                                      status: selectedLead.status || \"Closed\",\r\n                                      primaryRegion: primaryId\r\n                                        ? {\r\n                                            value: primaryId,\r\n                                            label: primaryLabel,\r\n                                          }\r\n                                        : null,\r\n                                      secondaryRegion: secondaryId\r\n                                        ? {\r\n                                            value: secondaryId,\r\n                                            label: secondaryLabel || \"\",\r\n                                          }\r\n                                        : null,\r\n                                    });\r\n                                    setViewEditMode(true);\r\n                                  }}\r\n                                  className=\"px-3 py-1.5 rounded-lg text-sm font-semibold text-white bg-green-900 hover:bg-green-950\"\r\n                                >\r\n                                  {(selectedLead?.createdBy &&\r\n                                    (selectedLead.createdBy._id ||\r\n                                      selectedLead.createdBy.id) ===\r\n                                      brokerId) ||\r\n                                  (selectedLead?.brokerId &&\r\n                                    String(selectedLead.brokerId) ===\r\n                                      String(brokerId))\r\n                                    ? \"Edit\"\r\n                                    : \"Edit Status\"}\r\n                                </button>\r\n                              ) : (\r\n                                <>\r\n                                  <button\r\n                                    onClick={saveViewEdits}\r\n                                    className=\"px-3 py-1.5 rounded-lg text-sm font-semibold text-white bg-sky-600 hover:bg-sky-700\"\r\n                                  >\r\n                                    Save\r\n                                  </button>\r\n                                  <button\r\n                                    onClick={() => setViewEditMode(false)}\r\n                                    className=\"px-3 py-1.5 rounded-lg text-sm font-semibold text-slate-700 bg-gray-100 hover:bg-gray-200 border border-gray-200\"\r\n                                  >\r\n                                    Cancel\r\n                                  </button>\r\n                                </>\r\n                              )}\r\n                              {/* <button\r\n                        onClick={() => setViewTab(\"share\")}\r\n                        className=\"px-3 py-1.5 rounded-lg text-sm font-semibold text-slate-700 bg-gray-100 hover:bg-gray-200 border border-gray-200\"\r\n                      >\r\n                        Share\r\n                      </button> */}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n\r\n                    {/* SHARE DETAILS */}\r\n                    {viewTab === \"share\" && (\r\n                      <div className=\"space-y-3 text-[14px]\">\r\n                        <div className=\"border border-gray-200 rounded-xl p-4 shadow-sm bg-white\">\r\n                          <h5 className=\"text-[16px] font-semibold text-slate-900 mb-3 flex items-center gap-2\">\r\n                            <svg\r\n                              className=\"w-4 h-4 text-sky-600\"\r\n                              fill=\"none\"\r\n                              stroke=\"currentColor\"\r\n                              viewBox=\"0 0 24 24\"\r\n                            >\r\n                              <path\r\n                                strokeLinecap=\"round\"\r\n                                strokeLinejoin=\"round\"\r\n                                strokeWidth=\"2\"\r\n                                d=\"M7 8h10M7 12h7M5 20l2.5-2.5M19 20l-2.5-2.5\"\r\n                              />\r\n                            </svg>\r\n                            Share History\r\n                          </h5>\r\n                          {(() => {\r\n                            const transfers = Array.isArray(\r\n                              selectedLead?.transfers\r\n                            )\r\n                              ? selectedLead.transfers\r\n                              : [];\r\n                            if (!transfers.length) {\r\n                              return (\r\n                                <div className=\"text-[14px] text-slate-500\">\r\n                                  Not shared yet.\r\n                                </div>\r\n                              );\r\n                            }\r\n                            const idToBroker = new Map(\r\n                              (brokersList || []).map((b) => [b._id || b.id, b])\r\n                            );\r\n                            return (\r\n                              <ul className=\"text-[14px] text-slate-700 space-y-3\">\r\n                                {transfers.map((t, i) => {\r\n                                  const toB =\r\n                                    t && typeof t.toBroker === \"object\"\r\n                                      ? t.toBroker\r\n                                      : idToBroker.get(t?.toBroker) || {};\r\n                                  const fromB =\r\n                                    t && typeof t.fromBroker === \"object\"\r\n                                      ? t.fromBroker\r\n                                      : idToBroker.get(t?.fromBroker) || {};\r\n                                  const toName =\r\n                                    toB.name ||\r\n                                    toB.fullName ||\r\n                                    toB.email ||\r\n                                    toB._id ||\r\n                                    t?.toBroker ||\r\n                                    \"Unknown broker\";\r\n                                  const fromName =\r\n                                    fromB.name ||\r\n                                    fromB.fullName ||\r\n                                    fromB.email ||\r\n                                    fromB._id ||\r\n                                    t?.fromBroker ||\r\n                                    \"Unknown broker\";\r\n                                  const toAvatar =\r\n                                    toB.brokerImage ||\r\n                                    toB.avatarUrl ||\r\n                                    toB.imageUrl ||\r\n                                    \"\";\r\n                                  const fromAvatar =\r\n                                    fromB.brokerImage ||\r\n                                    fromB.avatarUrl ||\r\n                                    fromB.imageUrl ||\r\n                                    \"\";\r\n                                  const when = t?.createdAt\r\n                                    ? new Date(t.createdAt).toLocaleString()\r\n                                    : \"\";\r\n                                  const keyFrom =\r\n                                    (typeof t?.fromBroker === \"object\"\r\n                                      ? t?.fromBroker?._id\r\n                                      : t?.fromBroker) || \"from\";\r\n                                  const keyTo =\r\n                                    (typeof t?.toBroker === \"object\"\r\n                                      ? t?.toBroker?._id\r\n                                      : t?.toBroker) || \"to\";\r\n                                  const fromRegion =\r\n                                    getRegionName(fromB?.region) ||\r\n                                    getRegionName(fromB?.primaryRegion) ||\r\n                                    \"\";\r\n                                  const toRegion =\r\n                                    getRegionName(toB?.region) ||\r\n                                    getRegionName(toB?.primaryRegion) ||\r\n                                    \"\";\r\n                                  const toId =\r\n                                    t && typeof t.toBroker === \"object\"\r\n                                      ? t.toBroker?._id || t.toBroker?.id\r\n                                      : t?.toBroker;\r\n                                  const isPending =\r\n                                    pendingDeleteTransferId === String(toId);\r\n                                  return (\r\n                                    <li\r\n                                      key={`${keyFrom}-${keyTo}-${t?._id || i}`}\r\n                                      className=\"flex items-center gap-3\"\r\n                                    >\r\n                                      <div className=\"flex items-center gap-2\">\r\n                                        <div\r\n                                          className=\"w-7 h-7 rounded-full bg-gray-200 overflow-hidden ring-2 ring-white flex items-center justify-center text-[11px] text-gray-700\"\r\n                                          title={\r\n                                            typeof toName === \"string\"\r\n                                              ? toName\r\n                                              : String(toName)\r\n                                          }\r\n                                        >\r\n                                          <img\r\n                                            src={\r\n                                              toAvatar ||\r\n                                              \"https://www.w3schools.com/howto/img_avatar.png\"\r\n                                            }\r\n                                            alt={\r\n                                              typeof toName === \"string\"\r\n                                                ? toName\r\n                                                : \"Broker\"\r\n                                            }\r\n                                            className=\"w-full h-full object-cover\"\r\n                                          />\r\n                                        </div>\r\n                                      </div>\r\n                                      <div className=\"flex-1 min-w-0\">\r\n                                        <div className=\"font-medium text-slate-900 truncate\">\r\n                                          {typeof fromName === \"string\"\r\n                                            ? fromName\r\n                                            : String(fromName)}\r\n                                          <span className=\"mx-1 text-slate-400\">\r\n                                            →\r\n                                          </span>\r\n                                          {typeof toName === \"string\"\r\n                                            ? toName\r\n                                            : String(toName)}\r\n                                        </div>\r\n                                        <div className=\"text-[12px] text-slate-500 truncate\">\r\n                                          {fromRegion || \"—\"}{\" \"}\r\n                                          <span className=\"mx-1 text-slate-400\">\r\n                                            →\r\n                                          </span>{\" \"}\r\n                                          {toRegion || \"—\"}\r\n                                        </div>\r\n                                        {when && (\r\n                                          <div className=\"text-[11px] text-slate-400\">\r\n                                            Shared on {when}\r\n                                          </div>\r\n                                        )}\r\n                                      </div>\r\n                                      <button\r\n                                        type=\"button\"\r\n                                        disabled={isPending}\r\n                                        onClick={async () => {\r\n                                          if (!toId) return;\r\n                                          setPendingDeleteTransferId(\r\n                                            String(toId)\r\n                                          );\r\n                                          await deleteTransfer(toId);\r\n                                        }}\r\n                                        className={`ml-2 inline-flex items-center px-2 py-1 text-[12px] rounded border ${\r\n                                          isPending\r\n                                            ? \"border-gray-200 text-gray-400\"\r\n                                            : \"border-rose-200 text-rose-700 hover:bg-rose-50\"\r\n                                        }`}\r\n                                        title=\"Delete transfer\"\r\n                                      >\r\n                                        {isPending ? \"Removing…\" : \"Delete\"}\r\n                                      </button>\r\n                                    </li>\r\n                                  );\r\n                                })}\r\n                              </ul>\r\n                            );\r\n                          })()}\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n\r\n                {/* (Optional) Share history card – keep your existing logic if you want it below */}\r\n                {/* <YourShareHistoryCard /> */}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <style jsx global>{`\r\n        .no-scrollbar::-webkit-scrollbar {\r\n          display: none;\r\n        }\r\n        .no-scrollbar {\r\n          -ms-overflow-style: none;\r\n          scrollbar-width: none;\r\n        }\r\n        @keyframes slideInFromRight {\r\n          from {\r\n            transform: translateX(100%);\r\n            opacity: 0.6;\r\n          }\r\n          to {\r\n            transform: translateX(0);\r\n            opacity: 1;\r\n          }\r\n        }\r\n        .animate-slide-in {\r\n          animation: slideInFromRight 0.25s ease-out both;\r\n        }\r\n        @keyframes slideOutToRight {\r\n          from {\r\n            transform: translateX(0);\r\n            opacity: 1;\r\n          }\r\n          to {\r\n            transform: translateX(100%);\r\n            opacity: 0.4;\r\n          }\r\n        }\r\n        .animate-slide-out {\r\n          animation: slideOutToRight 0.2s ease-in both;\r\n        }\r\n      `}</style>\r\n    </ProtectedRoute>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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"}