{"version":3,"sources":["turbopack:///[project]/src/app/myaccount/MyAccount.jsx"],"sourcesContent":["\"use client\";\nimport React, { useState } from \"react\";\nimport data from \"../data/myaccount.json\";\n\nimport HeaderFile from '../components/Header';\n\nimport toast, { Toaster } from \"react-hot-toast\";\n\nconst MyAccount = () => {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    firmName: \"\",\n    regions: [],\n    aadharFile: null,\n    panFile: null,\n    gstFile: null,\n    brokerImage: null\n  });\n  const [activeTab, setActiveTab] = useState(\"Dashboard\");\n\n  // Check for tab parameter in URL\n  React.useEffect(() => {\n    if (typeof window !== 'undefined') {\n      const urlParams = new URLSearchParams(window.location.search);\n      const tab = urlParams.get('tab');\n      if (tab) {\n        setActiveTab(tab);\n      }\n    }\n  }, []);\n  const [submitting, setSubmitting] = useState(false);\n  const [regionsList, setRegionsList] = useState([]);\n  const [regionsLoading, setRegionsLoading] = useState(false);\n  const [regionsError, setRegionsError] = useState(\"\");\n  const [profileLoading, setProfileLoading] = useState(true);\n  const [brokerData, setBrokerData] = useState(null);\n  const [brokerLoading, setBrokerLoading] = useState(false);\n  const [isRegionDropdownOpen, setIsRegionDropdownOpen] = useState(false);\n\n  // Logout function\n  const handleLogout = () => {\n    // Clear token from localStorage\n    if (typeof window !== 'undefined') {\n      localStorage.removeItem('token');\n    }\n    // Redirect to homepage\n    window.location.href = '/';\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prev) => ({ ...prev, [name]: value }));\n  };\n\n  // Load phone number from token and profile data on component mount\n  React.useEffect(() => {\n    const loadPhoneFromToken = () => {\n      try {\n        const token = typeof window !== 'undefined' ? localStorage.getItem('token') : null;\n        console.log('Token from localStorage:', token);\n        if (token) {\n          // Decode JWT token to get phone number\n          const payload = JSON.parse(atob(token.split('.')[1]));\n          console.log('Decoded token payload:', payload);\n          if (payload.phone) {\n            console.log('Setting phone from token:', payload.phone);\n            setFormData(prev => ({ ...prev, phone: payload.phone }));\n          } else {\n            console.log('No phone found in token payload');\n          }\n        } else {\n          console.log('No token found in localStorage');\n        }\n      } catch (error) {\n        console.error('Error loading phone from token:', error);\n      }\n    };\n    \n    const loadProfileData = async () => {\n      try {\n        const token = typeof window !== 'undefined' ? localStorage.getItem('token') : null;\n        if (token) {\n         \n          \n          if (res.ok) {\n            const profileData = await res.json();\n            if (profileData.data) {\n              setFormData(prev => ({\n                ...prev,\n                name: profileData.data.name || prev.name,\n                email: profileData.data.email || prev.email,\n                firmName: profileData.data.brokerDetails?.firmName || prev.firmName,\n                regions: profileData.data.brokerDetails?.region || prev.regions\n              }));\n            }\n          } else {\n            // If profile API fails, just log the error but don't break the page\n            console.warn('Profile API failed, continuing with token data only:', res.status);\n          }\n        }\n      } catch (error) {\n        // Don't show error to user, just log it\n        console.warn('Profile data loading failed, using token data only:', error.message);\n      }\n    };\n    \n    loadPhoneFromToken();\n    loadProfileData().finally(() => {\n      setProfileLoading(false);\n    });\n    \n    // Debug: Log formData changes\n    console.log('Current formData:', formData);\n  }, []);\n\n\n\n  React.useEffect(() => {\n    const fetchRegions = async () => {\n      setRegionsLoading(true);\n      setRegionsError(\"\");\n      try {\n        const res = await fetch(`${process.env.NEXT_PUBLIC_API_URL}/regions`, {\n          headers: { 'Accept': 'application/json' }\n        });\n        const contentType = res.headers.get('content-type') || '';\n        const raw = await res.text();\n        if (!res.ok) {\n          throw new Error(raw || `Failed to load regions (${res.status})`);\n        }\n        let parsed;\n        if (contentType.includes('application/json')) {\n          try { parsed = JSON.parse(raw); } catch { /* fallthrough */ }\n        }\n        if (!parsed) {\n          throw new Error('Regions API returned non-JSON. Check NEXT_PUBLIC_API_URL value.');\n        }\n        const list = Array.isArray(parsed?.data?.regions) ? parsed.data.regions : (Array.isArray(parsed) ? parsed : []);\n        setRegionsList(list);\n      } catch (err) {\n        setRegionsError(err?.message || 'Failed to load regions');\n      } finally {\n        setRegionsLoading(false);\n      }\n    };\n    fetchRegions();\n  }, []);\n\n  // Close dropdown when clicking outside\n  React.useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (isRegionDropdownOpen && !event.target.closest('.region-dropdown')) {\n        setIsRegionDropdownOpen(false);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isRegionDropdownOpen]);\n\n  const handleFileChange = (e) => {\n    const { name, files } = e.target;\n    setFormData((prev) => ({ ...prev, [name]: files[0] }));\n  };\n\n  const handleRegionChange = (e) => {\n    const { value, checked } = e.target;\n    setFormData((prev) => {\n      if (checked) {\n        return { ...prev, regions: [...prev.regions, value] };\n      } else {\n        return { ...prev, regions: prev.regions.filter(region => region !== value) };\n      }\n    });\n  };\n\n  const handleRegionsSelectChange = (e) => {\n    const selected = Array.from(e.target.selectedOptions).map((opt) => opt.value);\n    setFormData((prev) => ({ ...prev, regions: selected }));\n  };\n\n  // Function to fetch broker data by ID\n  const fetchBrokerById = async (brokerId) => {\n    if (!brokerId) return;\n    \n    setBrokerLoading(true);\n    try {\n      const token = typeof window !== 'undefined' ? localStorage.getItem('token') : null;\n   \n\n      if (response.ok) {\n        const data = await response.json();\n        setBrokerData(data);\n        console.log('Broker data fetched:', data);\n        toast.success('Broker data loaded successfully!');\n      } else {\n        const errorData = await response.json().catch(() => ({ message: 'Unknown error' }));\n        toast.error(errorData.message || `Failed to fetch broker data (${response.status})`);\n        console.error('Failed to fetch broker data:', errorData);\n      }\n    } catch (error) {\n      console.error('Error fetching broker data:', error);\n      toast.error(\"Network error. Please try again.\");\n    } finally {\n      setBrokerLoading(false);\n    }\n  };\n\n\n  const renderContent = () => {\n    switch (activeTab) {\n      case \"Dashboard\":\n        return (\n          <div className=\"w-full lg:w-3/4 bg-white rounded-lg \">\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-6 cursor-pointer\">Dashboard</h2>\n            \n            {/* Broker Data Fetch Section */}\n        \n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              <div className=\"bg-green-50 p-6 rounded-lg\">\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">Total Leads</h3>\n                <p className=\"text-3xl font-bold text-green-600\">24</p>\n                <p className=\"text-sm text-gray-600\">+12% from last month</p>\n              </div>\n              <div className=\"bg-blue-50 p-6 rounded-lg\">\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">Properties Listed</h3>\n                <p className=\"text-3xl font-bold text-blue-600\">8</p>\n                <p className=\"text-sm text-gray-600\">3 new this week</p>\n              </div>\n              <div className=\"bg-yellow-50 p-6 rounded-lg\">\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">Visitors</h3>\n                <p className=\"text-3xl font-bold text-yellow-600\">156</p>\n                <p className=\"text-sm text-gray-600\">+8% from last week</p>\n              </div>\n            </div>\n          </div>\n        );\n\n      case \"Profile\":\n        return (\n          <div className=\"w-full lg:w-3/4 bg-white rounded-lg \">\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">Profile</h2>\n            \n            {/* Broker Profile Image Upload */}\n            <div className=\"mb-8\">\n             \n              <div className=\"flex items-center gap-6\">\n                {/* Current Profile Image Display */}\n                <div className=\"relative\">\n                  <div className=\"w-24 h-24 bg-gray-200 rounded-full flex items-center justify-center overflow-hidden\">\n                    {formData.brokerImage ? (\n                      <img\n                        src={URL.createObjectURL(formData.brokerImage)}\n                        alt=\"Broker Profile\"\n                        className=\"w-full h-full object-cover\"\n                      />\n                    ) : (\n                      <svg className=\"w-8 h-8 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\n                      </svg>\n                    )}\n                  </div>\n                  <button\n                    type=\"button\"\n                    className=\"absolute -bottom-1 -right-1 bg-green-600 w-7 h-7 rounded-full flex items-center justify-center hover:bg-green-700 transition-colors\"\n                    onClick={() => document.getElementById('broker-image-upload').click()}\n                  >\n                    <svg className=\"w-4 h-4 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n                    </svg>\n                  </button>\n                </div>\n                \n                {/* Upload Button and Info */}\n                {/* <div className=\"flex-1\">\n                  <input\n                    type=\"file\"\n                    name=\"brokerImage\"\n                    onChange={handleFileChange}\n                    accept=\".jpg,.jpeg,.png\"\n                    className=\"hidden\"\n                    id=\"broker-image-upload\"\n                  />\n                  <button\n                    type=\"button\"\n                    onClick={() => document.getElementById('broker-image-upload').click()}\n                    className=\"px-6 py-3 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors font-medium\"\n                  >\n                    {formData.brokerImage ? 'Change Profile Image' : 'Upload Profile Image'}\n                  </button>\n                  <p className=\"text-sm text-gray-500 mt-2\">\n                    {formData.brokerImage ? formData.brokerImage.name : 'JPG, PNG up to 10MB'}\n                  </p>\n                </div> */}\n              </div>\n            </div>\n            \n            {profileLoading ? (\n              <div className=\"flex items-center justify-center py-12\">\n                <div className=\"text-center\">\n                  <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-green-600 mx-auto mb-4\"></div>\n                  <p className=\"text-gray-600\">Loading profile data...</p>\n                </div>\n              </div>\n            ) : (\n            \n            <form className=\"space-y-6\" onSubmit={async (e) => {\n              e.preventDefault();\n              setSubmitting(true);\n              if (!Array.isArray(formData.regions) || formData.regions.length === 0) {\n                toast.error('Please select at least one region.');\n                setSubmitting(false);\n                return;\n              }\n              try {\n                const token = typeof window !== 'undefined' ? localStorage.getItem('token') : null;\n                \n                // Create FormData for multipart/form-data submission\n                const formDataToSend = new FormData();\n                formDataToSend.append('phone', formData.phone);\n                formDataToSend.append('name', formData.name);\n                formDataToSend.append('email', formData.email);\n                formDataToSend.append('brokerDetails[firmName]', formData.firmName || \"\");\n                \n                // Add regions\n                formData.regions.forEach((regionId, index) => {\n                  formDataToSend.append(`brokerDetails[region][${index}]`, regionId);\n                });\n                \n                // Add file uploads\n                if (formData.aadharFile) {\n                  formDataToSend.append('aadhar', formData.aadharFile);\n                }\n                if (formData.panFile) {\n                  formDataToSend.append('pan', formData.panFile);\n                }\n                if (formData.gstFile) {\n                  formDataToSend.append('gst', formData.gstFile);\n                }\n                if (formData.brokerImage) {\n                  formDataToSend.append('brokerImage', formData.brokerImage);\n                }\n\n                const res = await fetch(`${process.env.NEXT_PUBLIC_API_URL}/auth/complete-profile`, {\n                  method: 'POST',\n                  headers: {\n                    ...(token ? { 'Authorization': `Bearer ${token}` } : {})\n                  },\n                  body: formDataToSend\n                });\n                \n                if (!res.ok) {\n                  const errText = await res.text();\n                  throw new Error(errText || `Request failed with ${res.status}`);\n                }\n                \n                const result = await res.json();\n                toast.success('Profile updated successfully!');\n                console.log('Profile updated:', result);\n              } catch (err) {\n                toast.error(err?.message || 'Failed to update profile');\n              } finally {\n                setSubmitting(false);\n              }\n            }}>\n              {/* Name & Email - two fields per row */}\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-900 mb-2\">\n                    Name <span className=\"text-green-500\">*</span>\n                  </label>\n                  <input\n                    type=\"text\"\n                    name=\"name\"\n                    value={formData.name}\n                    onChange={handleChange}\n                    placeholder=\"Enter your full name\"\n                    className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-green-500\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-900 mb-2\">\n                    Email <span className=\"text-green-500\">*</span>\n                  </label>\n                  <input\n                    type=\"email\"\n                    name=\"email\"\n                    value={formData.email}\n                    onChange={handleChange}\n                    placeholder=\"Enter your email address\"\n                    className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-green-500\"\n                  />\n                </div>\n              </div>\n\n              {/* Phone & Firm Name */}\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-900 mb-2\">\n                    Phone <span className=\"text-green-500\">*</span>\n                  </label>\n                  <input\n                    type=\"tel\"\n                    name=\"phone\"\n                    value={formData.phone}\n                    onChange={handleChange}\n                    placeholder=\"Enter your phone number\"\n                    className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-green-500\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-900 mb-2\">\n                    Firm Name\n                  </label>\n                  <input\n                    type=\"text\"\n                    name=\"firmName\"\n                    value={formData.firmName}\n                    onChange={handleChange}\n                    placeholder=\"Enter your firm name\"\n                    className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-green-500\"\n                  />\n                </div>\n              </div>\n\n              {/* Region Custom Dropdown */}\n              <div className=\"relative region-dropdown\">\n                <label className=\"block text-sm font-medium text-gray-900 mb-2\">\n                  Region <span className=\"text-green-500\">*</span>\n                </label>\n                {regionsLoading ? (\n                  <p className=\"text-sm text-gray-500\">Loading regions...</p>\n                ) : regionsError ? (\n                  <p className=\"text-sm text-red-600\">{regionsError}</p>\n                ) : (\n                  <>\n                    {/* Dropdown Button */}\n                    <button\n                      type=\"button\"\n                      onClick={() => setIsRegionDropdownOpen(!isRegionDropdownOpen)}\n                      className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-green-500 bg-white text-left flex items-center justify-between\"\n                    >\n                      <span className=\"text-gray-700\">\n                        {formData.regions.length === 0 \n                          ? \"Select regions...\" \n                          : `${formData.regions.length} region(s) selected`\n                        }\n                      </span>\n                      <svg \n                        className={`w-5 h-5 text-gray-400 transition-transform ${isRegionDropdownOpen ? 'rotate-180' : ''}`} \n                        fill=\"none\" \n                        stroke=\"currentColor\" \n                        viewBox=\"0 0 24 24\"\n                      >\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 9l-7 7-7-7\" />\n                      </svg>\n                    </button>\n\n                    {/* Dropdown Card */}\n                    {isRegionDropdownOpen && (\n                      <div className=\"absolute z-10 w-full mt-1 bg-white border border-gray-300 rounded-lg shadow-lg max-h-60 overflow-y-auto\">\n                        <div className=\"p-4\">\n                          <div className=\"space-y-3\">\n                            {regionsList.map((region) => (\n                              <label key={region._id} className=\"flex items-center space-x-3 cursor-pointer hover:bg-gray-50 p-2 rounded\">\n                                <input\n                                  type=\"checkbox\"\n                                  value={region._id}\n                                  checked={formData.regions.includes(region._id)}\n                                  onChange={handleRegionChange}\n                                  className=\"h-4 w-4 text-green-600 focus:ring-green-500 border-gray-300 rounded\"\n                                />\n                                <span className=\"text-sm text-gray-700\">{region.name}</span>\n                              </label>\n                            ))}\n                          </div>\n                        </div>\n                      </div>\n                    )}\n                  </>\n                )}\n                \n                {/* Selected Regions Display */}\n                {formData.regions.length > 0 && (\n                  <div className=\"mt-3\">\n                    <p className=\"text-sm text-gray-600 mb-2\">Selected regions ({formData.regions.length}):</p>\n                    <div className=\"flex flex-wrap gap-2\">\n                      {formData.regions.map((id) => {\n                        const r = regionsList.find(rr => rr._id === id);\n                        return (\n                          <span key={id} className=\"px-3 py-1 bg-green-100 text-green-800 text-sm rounded-full flex items-center\">\n                            {r ? r.name : id}\n                            <button\n                              type=\"button\"\n                              onClick={() => {\n                                setFormData(prev => ({\n                                  ...prev,\n                                  regions: prev.regions.filter(region => region !== id)\n                                }));\n                              }}\n                              className=\"ml-2 text-green-600 hover:text-green-800\"\n                            >\n                              ×\n                            </button>\n                          </span>\n                        );\n                      })}\n                    </div>\n                  </div>\n                )}\n              </div>\n\n              {/* File Uploads - All in one row */}\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 items-stretch\">\n                {/* Aadhar File Upload */}\n                <div className=\"flex flex-col h-full\">\n                  <label className=\"block text-sm font-medium text-gray-900 mb-2\">\n                    Aadhar Card <span className=\"text-green-500\">*</span>\n                  </label>\n                  <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-4 text-center hover:border-green-400 transition-colors flex-1 flex flex-col justify-center\">\n                    <input\n                      type=\"file\"\n                      name=\"aadharFile\"\n                      onChange={handleFileChange}\n                      accept=\".pdf,.jpg,.jpeg,.png\"\n                      className=\"hidden\"\n                      id=\"aadhar-upload\"\n                    />\n                    <label htmlFor=\"aadhar-upload\" className=\"cursor-pointer\">\n                      <svg className=\"mx-auto h-8 w-8 text-gray-400\" stroke=\"currentColor\" fill=\"none\" viewBox=\"0 0 48 48\">\n                        <path d=\"M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                      </svg>\n                      <div className=\"mt-2\">\n                        <p className=\"text-sm text-gray-600\">\n                          {formData.aadharFile ? formData.aadharFile.name : \"Click to upload Aadhar Card\"}\n                        </p>\n                        <p className=\"text-xs text-gray-500\">PDF, JPG, PNG up to 10MB</p>\n                      </div>\n                    </label>\n                  </div>\n                </div>\n\n                {/* PAN File Upload */}\n                <div className=\"flex flex-col h-full\">\n                  <label className=\"block text-sm font-medium text-gray-900 mb-2\">\n                    PAN Card <span className=\"text-green-500\">*</span>\n                  </label>\n                  <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-4 text-center hover:border-green-400 transition-colors flex-1 flex flex-col justify-center\">\n                    <input\n                      type=\"file\"\n                      name=\"panFile\"\n                      onChange={handleFileChange}\n                      accept=\".pdf,.jpg,.jpeg,.png\"\n                      className=\"hidden\"\n                      id=\"pan-upload\"\n                    />\n                    <label htmlFor=\"pan-upload\" className=\"cursor-pointer\">\n                      <svg className=\"mx-auto h-8 w-8 text-gray-400\" stroke=\"currentColor\" fill=\"none\" viewBox=\"0 0 48 48\">\n                        <path d=\"M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                      </svg>\n                      <div className=\"mt-2\">\n                        <p className=\"text-sm text-gray-600\">\n                          {formData.panFile ? formData.panFile.name : \"Click to upload PAN Card\"}\n                        </p>\n                        <p className=\"text-xs text-gray-500\">PDF, JPG, PNG up to 10MB</p>\n                      </div>\n                    </label>\n                  </div>\n                </div>\n\n                {/* GST File Upload */}\n                <div className=\"flex flex-col h-full\">\n                  <label className=\"block text-sm font-medium text-gray-900 mb-2\">\n                    GST Certificate <span className=\"text-green-500\">*</span>\n                  </label>\n                  <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-4 text-center hover:border-green-400 transition-colors flex-1 flex flex-col justify-center\">\n                    <input\n                      type=\"file\"\n                      name=\"gstFile\"\n                      onChange={handleFileChange}\n                      accept=\".pdf,.jpg,.jpeg,.png\"\n                      className=\"hidden\"\n                      id=\"gst-upload\"\n                    />\n                    <label htmlFor=\"gst-upload\" className=\"cursor-pointer\">\n                      <svg className=\"mx-auto h-8 w-8 text-gray-400\" stroke=\"currentColor\" fill=\"none\" viewBox=\"0 0 48 48\">\n                        <path d=\"M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                      </svg>\n                      <div className=\"mt-2\">\n                        <p className=\"text-sm text-gray-600\">\n                          {formData.gstFile ? formData.gstFile.name : \"Click to upload GST Certificate\"}\n                        </p>\n                        <p className=\"text-xs text-gray-500\">PDF, JPG, PNG up to 10MB</p>\n                      </div>\n                    </label>\n                  </div>\n                </div>\n\n              </div>\n\n              {/* Submit Button */}\n              <div className=\"pt-4 flex justify-end\">\n                <button\n                  type=\"submit\"\n                  disabled={submitting}\n                  className=\"py-2 px-6 bg-green-800 text-white rounded-lg font-medium hover:bg-green-700 disabled:opacity-60 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2 transition-colors cursor-pointer\"\n                >\n                  {submitting ? 'Saving...' : 'Save Profile'}\n                </button>\n              </div>\n            </form>\n            )}\n          </div>\n        );\n\n      case \"Leads / Visitors\":\n        return (\n          <div className=\"w-full lg:w-3/4 bg-white rounded-lg \">\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">Leads / Visitors</h2>\n            <div className=\"space-y-4\">\n              <div className=\"rounded-lg p-4 bg-gray-50 hover:bg-green-50 border border-transparent hover:border-green-400 transition-all cursor-pointer\">\n                <div className=\"flex justify-between items-start\">\n                  <div>\n                    <h4 className=\"font-medium text-gray-900\">John Smith</h4>\n                    <p className=\"text-gray-600 text-sm\">Interested in 2BHK Apartment</p>\n                    <p className=\"text-gray-500 text-xs\">2 hours ago</p>\n                  </div>\n                  <span className=\"px-2 py-1 bg-green-100 text-green-800 text-xs rounded-full\">New Lead</span>\n                </div>\n              </div>\n              <div className=\"rounded-lg p-4 bg-gray-50 hover:bg-green-50 border border-transparent hover:border-green-400 transition-all cursor-pointer\">\n                <div className=\"flex justify-between items-start\">\n                  <div>\n                    <h4 className=\"font-medium text-gray-900\">Sarah Johnson</h4>\n                    <p className=\"text-gray-600 text-sm\">Viewed Villa Property</p>\n                    <p className=\"text-gray-500 text-xs\">1 day ago</p>\n                  </div>\n                  <span className=\"px-2 py-1 bg-blue-100 text-blue-800 text-xs rounded-full\">Contacted</span>\n                </div>\n              </div>\n              <div className=\"rounded-lg p-4 bg-gray-50 hover:bg-green-50 border border-transparent hover:border-green-400 transition-all cursor-pointer\">\n                <div className=\"flex justify-between items-start\">\n                  <div>\n                    <h4 className=\"font-medium text-gray-900\">Mike Wilson</h4>\n                    <p className=\"text-gray-600 text-sm\">Interested in Commercial Space</p>\n                    <p className=\"text-gray-500 text-xs\">3 days ago</p>\n                  </div>\n                  <span className=\"px-2 py-1 bg-yellow-100 text-yellow-800 text-xs rounded-full\">Follow Up</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n\n      case \"Properties / Sites\":\n        return (\n          <div className=\"w-full lg:w-3/4 bg-white rounded-lg \">\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">Properties / Sites</h2>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              <div className=\"rounded-lg overflow-hidden shadow-sm hover:shadow-md transition-shadow\">\n                <img src=\"/images/pexels-binyaminmellish-106399.jpg\" alt=\"Property\" className=\"w-full h-48 object-cover\" />\n                <div className=\"p-4\">\n                  <h3 className=\"font-semibold text-gray-900\">Luxury Villa</h3>\n                  <p className=\"text-gray-600 text-sm\">3BHK, 2000 sq ft</p>\n                  <p className=\"text-green-600 font-semibold\">₹2.5 Cr</p>\n                </div>\n              </div>\n              <div className=\"rounded-lg overflow-hidden shadow-sm hover:shadow-md transition-shadow\">\n                <img src=\"/images/istockphoto-1165384568-612x612.jpg\" alt=\"Property\" className=\"w-full h-48 object-cover\" />\n                <div className=\"p-4\">\n                  <h3 className=\"font-semibold text-gray-900\">Modern Apartment</h3>\n                  <p className=\"text-gray-600 text-sm\">2BHK, 1200 sq ft</p>\n                  <p className=\"text-green-600 font-semibold\">₹85 L</p>\n                </div>\n              </div>\n              <div className=\"rounded-lg overflow-hidden shadow-sm hover:shadow-md transition-shadow\">\n                <img src=\"/images/realestate2.jpg\" alt=\"Property\" className=\"w-full h-48 object-cover\" />\n                <div className=\"p-4\">\n                  <h3 className=\"font-semibold text-gray-900\">Commercial Space</h3>\n                  <p className=\"text-gray-600 text-sm\">Office, 5000 sq ft</p>\n                  <p className=\"text-green-600 font-semibold\">₹1.2 Cr</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n\n\n      default:\n        return (\n          <div className=\"w-full lg:w-3/4 bg-white p-6 rounded-lg shadow-sm\">\n            <div className=\"flex flex-col items-left gap-4 mb-6\">\n              <div className=\"relative w-24 h-24\">\n                <img\n                  src={formData.avatar}\n                  alt=\"Profile\"\n                  className=\"w-24 h-24 object-cover rounded-full border\"\n                />\n                <button className=\"absolute bottom-0 right-0 bg-green-800 w-7 h-7 rounded-full flex items-center justify-center\">\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    className=\"w-4 h-4 text-white\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                    stroke=\"currentColor\"\n                  >\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n                  </svg>\n                </button>\n              </div>\n            </div>\n\n            {/* Basic Details - replace fields per reference image */}\n            <div className=\"grid md:grid-cols-2 gap-4 mb-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-900\">Company Name <span className=\"text-green-500\">*</span></label>\n                <input\n                  type=\"text\"\n                  name=\"companyName\"\n                  value={formData.companyName || \"\"}\n                  onChange={handleChange}\n                  placeholder=\"Enter Company Name\"\n                  className=\"mt-1 w-full border border-gray-300 rounded-lg px-4 py-3 text-gray-700 focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-green-500\"\n                />\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-900\">Company Type <span className=\"text-green-500\">*</span></label>\n                <div className=\"relative\">\n                  <select\n                    name=\"companyType\"\n                    value={formData.companyType || \"\"}\n                    onChange={handleChange}\n                    className=\"appearance-none mt-1 w-full border border-gray-300 rounded-lg px-4 py-3 text-gray-700 pr-10 focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-green-500\"\n                  >\n                    <option value=\"\">Select Type</option>\n                    <option value=\"LLC\">LLC</option>\n                    <option value=\"Partnership\">Partnership</option>\n                    <option value=\"Proprietorship\">Proprietorship</option>\n                  </select>\n                  <div className=\"pointer-events-none absolute inset-y-0 top-2 right-3 flex items-center\">\n                    <svg\n                      className=\"w-6 h-6 text-gray-900\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      viewBox=\"0 0 20 20\"\n                      fill=\"currentColor\"\n                    >\n                      <path\n                        fillRule=\"evenodd\"\n                        d=\"M10 12a.75.75 0 01-.53-.22l-4-4a.75.75 0 011.06-1.06L10 10.19l3.47-3.47a.75.75 0 111.06 1.06l-4 4A.75.75 0 0110 12z\"\n                        clipRule=\"evenodd\"\n                      />\n                    </svg>\n                  </div>\n                </div>\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-900\">Owner/Director Name <span className=\"text-green-500\">*</span></label>\n                <input\n                  type=\"text\"\n                  name=\"ownerName\"\n                  value={formData.ownerName || \"\"}\n                  onChange={handleChange}\n                  placeholder=\"Enter Contact Person Name\"\n                  className=\"mt-1 w-full border border-gray-300 rounded-lg px-4 py-3 text-gray-700 focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-green-500\"\n                />\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-900\">Mobile Number <span className=\"text-green-500\">*</span></label>\n                <input\n                  type=\"text\"\n                  name=\"mobile\"\n                  value={formData.mobile || \"\"}\n                  onChange={handleChange}\n                  placeholder=\"Enter Mobile Number\"\n                  className=\"mt-1 w-full border border-gray-300 rounded-lg px-4 py-3 text-gray-700 focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-green-500\"\n                />\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-900\">Email Address <span className=\"text-green-500\">*</span></label>\n                <input\n                  type=\"email\"\n                  name=\"email\"\n                  value={formData.email}\n                  onChange={handleChange}\n                  placeholder=\"Enter Email Address\"\n                  className=\"mt-1 w-full border border-gray-300 rounded-lg px-4 py-3 text-gray-700 focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-green-500\"\n                />\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-900\">RERA Registration Number <span className=\"text-green-500\">*</span></label>\n                <input\n                  type=\"text\"\n                  name=\"rera\"\n                  value={formData.rera || \"\"}\n                  onChange={handleChange}\n                  placeholder=\"Enter RERA Number\"\n                  className=\"mt-1 w-full border border-gray-300 rounded-lg px-4 py-3 text-gray-700 focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-green-500\"\n                />\n              </div>\n              <div className=\"md:col-span-2\">\n                <label className=\"block text-sm font-medium text-gray-900\">Office Address <span className=\"text-green-500\">*</span></label>\n                <input\n                  type=\"text\"\n                  name=\"officeAddress\"\n                  value={formData.officeAddress || \"\"}\n                  onChange={handleChange}\n                  placeholder=\"Enter Address\"\n                  className=\"mt-1 w-full border border-gray-300 rounded-lg px-4 py-3 text-gray-700 focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-green-500\"\n                />\n              </div>\n            </div>\n\n            <div className=\"mt-6 flex justify-end\">\n              <button className=\"px-6 py-2 bg-green-800 text-white rounded-lg hover:bg-green-700 transition-colors cursor-pointer\">\n                Save Broker\n              </button>\n            </div>\n          </div>\n        );\n    }\n  };\n\n  return (\n    <>\n      <Toaster \n        position=\"top-right\"\n        toastOptions={{\n          duration: 4000,\n          style: {\n            background: '#363636',\n            color: '#fff',\n          },\n          success: {\n            duration: 3000,\n            iconTheme: {\n              primary: '#4ade80',\n              secondary: '#fff',\n            },\n          },\n          error: {\n            duration: 4000,\n            iconTheme: {\n              primary: '#ef4444',\n              secondary: '#fff',\n            },\n          },\n        }}\n      />\n      <HeaderFile data={data} />\n<div className=\"px-6 sm:px-12 lg:px-32 py-12\">\n    <div className=\"max-w-7xl mx-auto  \">\n      <div className=\"flex flex-col lg:flex-row gap-8\">\n        {/* Sidebar */}\n        <div className=\"w-full lg:w-1/4 space-y-3\">\n          {[\n            \"Dashboard\",\n            \"Profile\",\n            \"Leads / Visitors\",\n            \"Properties / Sites\"\n          ].map((item, idx) => (\n            <button\n              key={item}\n              onClick={() => setActiveTab(item)}\n              className={`w-full text-left px-5 py-3 rounded-lg border cursor-pointer ${\n                activeTab === item\n                  ? \"bg-yellow-400 text-black font-medium\"\n                  : \"bg-white hover:bg-gray-50 text-black\"\n              }`}\n            >\n              {item}\n            </button>\n          ))}\n          <button\n            onClick={handleLogout}\n            className=\"w-full text-left px-5 py-3 rounded-lg border bg-white cursor-pointer\"\n          >\n            Logout\n          </button>\n        </div>\n\n        {/* Content Area */}\n        {renderContent()}\n      </div>\n    </div>\n    </div>\n          {/* <Features data={furnitureData.features}/> */}\n    </>\n    \n\n  );\n};\n\nexport default MyAccount;\n"],"names":[],"mappings":"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"}