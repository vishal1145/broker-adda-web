{"version":3,"sources":["turbopack:///[project]/src/app/components/ProtectedRoute.jsx","turbopack:///[project]/src/app/role-selection/page.jsx"],"sourcesContent":["'use client';\r\nimport { useEffect } from 'react';\r\nimport { useRouter } from 'next/navigation';\r\nimport { useAuth } from '../contexts/AuthContext';\r\n\r\nconst ProtectedRoute = ({ children, requiredRole = null }) => {\r\n  const { user, loading, isAuthenticated, isBroker, isCustomer } = useAuth();\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    if (loading) return; // Wait for auth to load\r\n\r\n    if (!isAuthenticated()) {\r\n      console.log('ProtectedRoute: User not authenticated, redirecting to login');\r\n      router.push('/login');\r\n      return;\r\n    }\r\n\r\n    // Check role-specific access\r\n    if (requiredRole === 'broker' && !isBroker()) {\r\n      console.log('ProtectedRoute: User is not a broker, redirecting to login');\r\n      router.push('/login');\r\n      return;\r\n    }\r\n\r\n    if (requiredRole === 'customer' && !isCustomer()) {\r\n      console.log('ProtectedRoute: User is not a customer, redirecting to login');\r\n      router.push('/login');\r\n      return;\r\n    }\r\n  }, [user, loading, isAuthenticated, isBroker, isCustomer, requiredRole, router]);\r\n\r\n  // Show loading spinner while checking authentication\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-screen\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-green-600 mx-auto mb-4\"></div>\r\n          <p className=\"text-gray-600\">Loading...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Don't render children if not authenticated or wrong role\r\n  if (!isAuthenticated()) {\r\n    return null;\r\n  }\r\n\r\n  if (requiredRole === 'broker' && !isBroker()) {\r\n    return null;\r\n  }\r\n\r\n  if (requiredRole === 'customer' && !isCustomer()) {\r\n    return null;\r\n  }\r\n\r\n  return children;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","\"use client\";\r\nimport React from 'react';\r\nimport { useRouter } from 'next/navigation';\r\nimport ProtectedRoute from '../components/ProtectedRoute';\r\n\r\nconst RoleSelection = () => {\r\n  const router = useRouter();\r\n\r\n  const handleProfileTypeSelect = (profileType) => {\r\n    // Store the selected profile type and navigate to profile\r\n    localStorage.setItem('selectedProfileType', profileType);\r\n    router.push('/profile');\r\n  };\r\n\r\n  return (\r\n    <ProtectedRoute>\r\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center p-4\">\r\n        <div className=\"max-w-2xl w-full\">\r\n          {/* Header */}\r\n          <div className=\"text-center mb-12\">\r\n            <h1 className=\"text-3xl font-bold text-gray-900 mb-4\">\r\n              Complete Your Profile\r\n            </h1>\r\n            <p className=\"text-lg text-gray-600\">\r\n              Choose your profile type to continue with the setup process\r\n            </p>\r\n          </div>\r\n\r\n          {/* Profile Type Selection Cards */}\r\n          <div className=\"space-y-6\">\r\n            {/* Individual Profile Card */}\r\n            <div \r\n              onClick={() => handleProfileTypeSelect('individual')}\r\n              className=\"bg-white rounded-xl border border-gray-200 p-6 cursor-pointer hover:shadow-lg transition-all duration-300 hover:border-green-300 group\"\r\n            >\r\n              <div className=\"flex items-center justify-between\">\r\n                <div className=\"flex items-center space-x-4\">\r\n                  {/* Individual Icon */}\r\n                  <div className=\"w-20 h-20  flex items-center justify-center  \">\r\n                    <img \r\n                      src=\"/images/Selection.png\" \r\n                      alt=\"Individual Profile\" \r\n                      className=\"w-16 h-16 \"\r\n                      onError={(e) => {\r\n                        e.currentTarget.src = '/images/user-1.webp';\r\n                      }}\r\n                    />\r\n                   \r\n                  </div>\r\n\r\n                  <div className=\"flex-1\">\r\n                    <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\r\n                      Individual Profile\r\n                    </h3>\r\n                    <p className=\"text-sm text-gray-600 mb-3\">\r\n                      Personal profile for individual users with basic information and preferences\r\n                    </p>\r\n                    <div className=\"flex items-center text-green-600 text-xs\">\r\n                      <span>Find out more</span>\r\n                      <svg className=\"w-3 h-3 ml-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                      </svg>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Arrow Button */}\r\n                <div className=\"w-10 h-10 bg-green-600 rounded-full flex items-center justify-center group-hover:bg-green-700 transition-colors\">\r\n                  <svg className=\"w-5 h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 5l7 7-7 7\" />\r\n                  </svg>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Business Profile Card */}\r\n            <div \r\n              onClick={() => handleProfileTypeSelect('business')}\r\n              className=\"bg-white rounded-xl border border-gray-200 p-6 cursor-pointer hover:shadow-lg transition-all duration-300 hover:border-green-300 group\"\r\n            >\r\n              <div className=\"flex items-center justify-between\">\r\n                <div className=\"flex items-center space-x-4\">\r\n                  {/* Business Icon */}\r\n                  <div className=\"w-20 h-20flex items-center justify-center \">\r\n                    <img \r\n                      src=\"/images/Selection 1.png\" \r\n                      alt=\"Business Profile\" \r\n                      className=\"w-16 h-16 object-contain\"\r\n                      onError={(e) => {\r\n                        e.currentTarget.src = '/images/user-1.webp';\r\n                      }}\r\n                    />\r\n                    {/* Small circles around the icon */}\r\n                    <div className=\"absolute -top-1 -right-1 w-2 h-2 bg-green-600 rounded-full\"></div>\r\n                    <div className=\"absolute -bottom-1 -left-1 w-2 h-2 bg-green-600 rounded-full\"></div>\r\n                    <div className=\"absolute top-1 -right-2 w-1.5 h-1.5 bg-green-600 rounded-full\"></div>\r\n                    <div className=\"absolute -bottom-1 right-1 w-1.5 h-1.5 bg-green-600 rounded-full\"></div>\r\n                  </div>\r\n\r\n                  <div className=\"flex-1\">\r\n                    <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\r\n                      Business Profile\r\n                    </h3>\r\n                    <p className=\"text-sm text-gray-600 mb-3\">\r\n                      Professional profile for businesses with company information and services\r\n                    </p>\r\n                    <div className=\"flex items-center text-green-600 text-xs\">\r\n                      <span>Find out more</span>\r\n                      <svg className=\"w-3 h-3 ml-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                      </svg>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Arrow Button */}\r\n                <div className=\"w-10 h-10 bg-green-600 rounded-full flex items-center justify-center group-hover:bg-green-700 transition-colors\">\r\n                  <svg className=\"w-5 h-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 5l7 7-7 7\" />\r\n                  </svg>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </ProtectedRoute>\r\n  );\r\n};\r\n\r\nexport default RoleSelection;\r\n"],"names":[],"mappings":"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"}